{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"register\"],\n  _excluded2 = [\"onPress\", \"onPressChange\", \"onPressStart\", \"onPressEnd\", \"onPressUp\", \"isDisabled\", \"isPressed\", \"preventFocusOnPress\", \"shouldCancelOnPointerExit\", \"allowTextSelectionOnPress\", \"ref\"],\n  _excluded3 = [\"children\"],\n  _excluded4 = [\"children\"];\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mergeProps as $bx7SL$mergeProps, useSyncRef as $bx7SL$useSyncRef, useGlobalListeners as $bx7SL$useGlobalListeners, isVirtualClick as $bx7SL$isVirtualClick, focusWithoutScrolling as $bx7SL$focusWithoutScrolling, isVirtualPointerEvent as $bx7SL$isVirtualPointerEvent, isIOS as $bx7SL$isIOS, runAfterTransition as $bx7SL$runAfterTransition, useLayoutEffect as $bx7SL$useLayoutEffect, isMac as $bx7SL$isMac, useEvent as $bx7SL$useEvent, useDescription as $bx7SL$useDescription } from \"@react-aria/utils\";\nimport $bx7SL$react, { useRef as $bx7SL$useRef, useContext as $bx7SL$useContext, useState as $bx7SL$useState, useMemo as $bx7SL$useMemo, useEffect as $bx7SL$useEffect, useCallback as $bx7SL$useCallback } from \"react\";\n\nvar $14c0b72509d70225$var$state = 'default';\nvar $14c0b72509d70225$var$savedUserSelect = '';\nvar $14c0b72509d70225$var$modifiedElementMap = new WeakMap();\nfunction $14c0b72509d70225$export$16a4697467175487(target) {\n  if ($bx7SL$isIOS()) {\n    if ($14c0b72509d70225$var$state === 'default') {\n      $14c0b72509d70225$var$savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = 'none';\n    }\n    $14c0b72509d70225$var$state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\nfunction $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {\n  if ($bx7SL$isIOS()) {\n    if ($14c0b72509d70225$var$state !== 'disabled') return;\n    $14c0b72509d70225$var$state = 'restoring';\n    setTimeout(function () {\n      $bx7SL$runAfterTransition(function () {\n        if ($14c0b72509d70225$var$state === 'restoring') {\n          if (document.documentElement.style.webkitUserSelect === 'none') document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || '';\n          $14c0b72509d70225$var$savedUserSelect = '';\n          $14c0b72509d70225$var$state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement)\n    {\n      if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {\n        var targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);\n        if (target.style.userSelect === 'none') target.style.userSelect = targetOldUserSelect;\n        if (target.getAttribute('style') === '') target.removeAttribute('style');\n        $14c0b72509d70225$var$modifiedElementMap.delete(target);\n      }\n    }\n}\nvar $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = $bx7SL$react.createContext(null);\n$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = 'PressResponderContext';\nfunction $f6c31cce2adf654f$var$usePressResponderContext(props) {\n  var context = $bx7SL$useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5);\n  if (context) {\n    var register = context.register,\n      contextProps = _objectWithoutProperties(context, _excluded);\n    props = $bx7SL$mergeProps(contextProps, props);\n    register();\n  }\n  $bx7SL$useSyncRef(context, props.ref);\n  return props;\n}\nfunction $f6c31cce2adf654f$export$45712eceda6fad21(props) {\n  var _$f6c31cce2adf654f$va = $f6c31cce2adf654f$var$usePressResponderContext(props),\n    onPress1 = _$f6c31cce2adf654f$va.onPress,\n    onPressChange1 = _$f6c31cce2adf654f$va.onPressChange,\n    onPressStart1 = _$f6c31cce2adf654f$va.onPressStart,\n    onPressEnd1 = _$f6c31cce2adf654f$va.onPressEnd,\n    onPressUp1 = _$f6c31cce2adf654f$va.onPressUp,\n    isDisabled1 = _$f6c31cce2adf654f$va.isDisabled,\n    isPressedProp = _$f6c31cce2adf654f$va.isPressed,\n    preventFocusOnPress = _$f6c31cce2adf654f$va.preventFocusOnPress,\n    shouldCancelOnPointerExit = _$f6c31cce2adf654f$va.shouldCancelOnPointerExit,\n    allowTextSelectionOnPress = _$f6c31cce2adf654f$va.allowTextSelectionOnPress,\n    _ = _$f6c31cce2adf654f$va.ref,\n    domProps = _objectWithoutProperties(_$f6c31cce2adf654f$va, _excluded2);\n  var propsRef = $bx7SL$useRef(null);\n  propsRef.current = {\n    onPress: onPress1,\n    onPressChange: onPressChange1,\n    onPressStart: onPressStart1,\n    onPressEnd: onPressEnd1,\n    onPressUp: onPressUp1,\n    isDisabled: isDisabled1,\n    shouldCancelOnPointerExit: shouldCancelOnPointerExit\n  };\n  var _$bx7SL$useState = $bx7SL$useState(false),\n    _$bx7SL$useState2 = _slicedToArray(_$bx7SL$useState, 2),\n    isPressed = _$bx7SL$useState2[0],\n    setPressed = _$bx7SL$useState2[1];\n  var ref = $bx7SL$useRef({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n  var _$bx7SL$useGlobalList = $bx7SL$useGlobalListeners(),\n    addGlobalListener = _$bx7SL$useGlobalList.addGlobalListener,\n    removeAllGlobalListeners = _$bx7SL$useGlobalList.removeAllGlobalListeners;\n  var pressProps1 = $bx7SL$useMemo(function () {\n    var state = ref.current;\n    var triggerPressStart = function triggerPressStart(originalEvent, pointerType) {\n      var _propsRef$current = propsRef.current,\n        onPressStart = _propsRef$current.onPressStart,\n        onPressChange = _propsRef$current.onPressChange,\n        isDisabled = _propsRef$current.isDisabled;\n      if (isDisabled || state.didFirePressStart) return;\n      if (onPressStart) onPressStart({\n        type: 'pressstart',\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n      if (onPressChange) onPressChange(true);\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n    var triggerPressEnd = function triggerPressEnd(originalEvent, pointerType) {\n      var wasPressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var _propsRef$current2 = propsRef.current,\n        onPressEnd = _propsRef$current2.onPressEnd,\n        onPressChange = _propsRef$current2.onPressChange,\n        onPress = _propsRef$current2.onPress,\n        isDisabled = _propsRef$current2.isDisabled;\n      if (!state.didFirePressStart) return;\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n      if (onPressEnd) onPressEnd({\n        type: 'pressend',\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n      if (onPressChange) onPressChange(false);\n      setPressed(false);\n      if (onPress && wasPressed && !isDisabled) onPress({\n        type: 'press',\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    var triggerPressUp = function triggerPressUp(originalEvent, pointerType) {\n      var _propsRef$current3 = propsRef.current,\n        onPressUp = _propsRef$current3.onPressUp,\n        isDisabled = _propsRef$current3.isDisabled;\n      if (isDisabled) return;\n      if (onPressUp) onPressUp({\n        type: 'pressup',\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    var cancel = function cancel(e) {\n      if (state.isPressed) {\n        if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);\n      }\n    };\n    var pressProps = {\n      onKeyDown: function onKeyDown(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target)) {\n          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n          e.stopPropagation();\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        } else if (e.key === 'Enter' && $f6c31cce2adf654f$var$isHTMLAnchorLink(e.currentTarget))\n          e.stopPropagation();\n      },\n      onKeyUp: function onKeyUp(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target)) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e), 'keyboard');\n      },\n      onClick: function onClick(e) {\n        if (e && !e.currentTarget.contains(e.target)) return;\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled1) e.preventDefault();\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === 'virtual' || $bx7SL$isVirtualClick(e.nativeEvent))) {\n            if (!isDisabled1 && !preventFocusOnPress) $bx7SL$focusWithoutScrolling(e.currentTarget);\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n    var onKeyUp = function onKeyUp(e) {\n      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent(e, state.target)) {\n        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n        e.stopPropagation();\n        state.isPressed = false;\n        var target = e.target;\n        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link')) state.target.click();\n      }\n    };\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ($bx7SL$isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        state.pointerType = e.pointerType;\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n          if (!isDisabled1 && !preventFocusOnPress) $bx7SL$focusWithoutScrolling(e.currentTarget);\n          if (!allowTextSelectionOnPress) $14c0b72509d70225$export$16a4697467175487(state.target);\n          triggerPressStart(e, state.pointerType);\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n      pressProps.onMouseDown = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (e.button === 0) {\n          if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n          e.stopPropagation();\n        }\n      };\n      pressProps.onPointerUp = function (e) {\n        if (!e.currentTarget.contains(e.target) || state.pointerType === 'virtual') return;\n        if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);\n      };\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId !== state.activePointerId) return;\n        if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);\n        }\n      };\n      var onPointerCancel = function onPointerCancel(e) {\n        cancel(e);\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) return;\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = $bx7SL$isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n        if (!isDisabled1 && !preventFocusOnPress) $bx7SL$focusWithoutScrolling(e.currentTarget);\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n      pressProps.onMouseEnter = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n      pressProps.onMouseLeave = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n      pressProps.onMouseUp = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType);\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button !== 0) return;\n        state.isPressed = false;\n        removeAllGlobalListeners();\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n        if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n        state.isOverTarget = false;\n      };\n      pressProps.onTouchStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        var touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);\n        if (!touch) return;\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n        if (!isDisabled1 && !preventFocusOnPress) $bx7SL$focusWithoutScrolling(e.currentTarget);\n        if (!allowTextSelectionOnPress) $14c0b72509d70225$export$16a4697467175487(state.target);\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n      pressProps.onTouchMove = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (!state.isPressed) return;\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n      pressProps.onTouchEnd = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (!state.isPressed) return;\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) triggerPressEnd(e, state.pointerType, false);\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);\n        removeAllGlobalListeners();\n      };\n      pressProps.onTouchCancel = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed) cancel(e);\n      };\n      var onScroll = function onScroll(e) {\n        if (state.isPressed && e.target.contains(state.target)) cancel({\n          currentTarget: state.target,\n          shiftKey: false,\n          ctrlKey: false,\n          metaKey: false,\n          altKey: false\n        });\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    }\n    return pressProps;\n  }, [addGlobalListener, isDisabled1, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress]);\n  $bx7SL$useEffect(function () {\n    return function () {\n      if (!allowTextSelectionOnPress)\n        $14c0b72509d70225$export$b0d6fa1ab32e3295(ref.current.target);\n    };\n  }, [allowTextSelectionOnPress]);\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: $bx7SL$mergeProps(domProps, pressProps1)\n  };\n}\nfunction $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\nfunction $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {\n  var key = event.key,\n    code = event.code;\n  var element = currentTarget;\n  var role = element.getAttribute('role');\n  return (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && (!$f6c31cce2adf654f$var$isHTMLAnchorLink(element) || role === 'button' && key !== 'Enter') &&\n  !(role === 'link' && key !== 'Enter');\n}\nfunction $f6c31cce2adf654f$var$getTouchFromEvent(event) {\n  var targetTouches = event.targetTouches;\n  if (targetTouches.length > 0) return targetTouches[0];\n  return null;\n}\nfunction $f6c31cce2adf654f$var$getTouchById(event, pointerId) {\n  var changedTouches = event.changedTouches;\n  for (var i = 0; i < changedTouches.length; i++) {\n    var touch = changedTouches[i];\n    if (touch.identifier === pointerId) return touch;\n  }\n  return null;\n}\nfunction $f6c31cce2adf654f$var$createEvent(target, e) {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\nfunction $f6c31cce2adf654f$var$getPointClientRect(point) {\n  var offsetX = point.width / 2 || point.radiusX || 0;\n  var offsetY = point.height / 2 || point.radiusY || 0;\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\nfunction $f6c31cce2adf654f$var$areRectanglesOverlapping(a, b) {\n  if (a.left > b.right || b.left > a.right) return false;\n  if (a.top > b.bottom || b.top > a.bottom) return false;\n  return true;\n}\nfunction $f6c31cce2adf654f$var$isOverTarget(point, target) {\n  var rect = target.getBoundingClientRect();\n  var pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);\n  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefault(target) {\n  return !(target instanceof HTMLElement) || !target.draggable;\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {\n  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey(target, key);\n  if (target instanceof HTMLButtonElement) return target.type !== 'submit';\n  return true;\n}\nvar $f6c31cce2adf654f$var$nonTextInputTypes = new Set(['checkbox', 'radio', 'range', 'color', 'file', 'image', 'button', 'submit', 'reset']);\nfunction $f6c31cce2adf654f$var$isValidInputKey(target, key) {\n  return target.type === 'checkbox' || target.type === 'radio' ? key === ' ' : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);\n}\nvar $3b117e43dc0ca95d$export$27c701ed9e449e99 = $bx7SL$react.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded3);\n  var newRef = $bx7SL$useRef();\n  ref = ref !== null && ref !== void 0 ? ref : newRef;\n  var _$f6c31cce2adf654f$ex = $f6c31cce2adf654f$export$45712eceda6fad21(_objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })),\n    pressProps = _$f6c31cce2adf654f$ex.pressProps;\n  var child = $bx7SL$react.Children.only(children);\n  return $bx7SL$react.cloneElement(child, _objectSpread({\n    ref: ref\n  }, $bx7SL$mergeProps(child.props, pressProps)));\n});\nvar $f1ab8c75478c6f73$export$3351871ee4b288b8 = $bx7SL$react.forwardRef(function (_ref2, ref) {\n  var children = _ref2.children,\n    props = _objectWithoutProperties(_ref2, _excluded4);\n  var isRegistered = $bx7SL$useRef(false);\n  var prevContext = $bx7SL$useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5);\n  var context = $bx7SL$mergeProps(prevContext || {}, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),\n    register: function register() {\n      isRegistered.current = true;\n      if (prevContext) prevContext.register();\n    }\n  }));\n  $bx7SL$useSyncRef(prevContext, ref);\n  $bx7SL$useEffect(function () {\n    if (!isRegistered.current) console.warn(\"A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.\");\n  }, []);\n  return $bx7SL$react.createElement($ae1eeba8b9eafd08$export$5165eccb35aaadb5.Provider, {\n    value: context\n  }, children);\n});\nvar $8a9cb279dc87e130$export$905e7fc544a71f36 = function () {\n  function $8a9cb279dc87e130$export$905e7fc544a71f36(type, nativeEvent) {\n    _classCallCheck(this, $8a9cb279dc87e130$export$905e7fc544a71f36);\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target;\n    this.currentTarget = nativeEvent.currentTarget;\n    this.relatedTarget = nativeEvent.relatedTarget;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n  _createClass($8a9cb279dc87e130$export$905e7fc544a71f36, [{\n    key: \"isDefaultPrevented\",\n    value: function isDefaultPrevented() {\n      return this.nativeEvent.defaultPrevented;\n    }\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.defaultPrevented = true;\n      this.nativeEvent.preventDefault();\n    }\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      this.nativeEvent.stopPropagation();\n      this.isPropagationStopped = function () {\n        return true;\n      };\n    }\n  }, {\n    key: \"isPropagationStopped\",\n    value: function isPropagationStopped() {\n      return false;\n    }\n  }, {\n    key: \"persist\",\n    value: function persist() {}\n  }]);\n  return $8a9cb279dc87e130$export$905e7fc544a71f36;\n}();\nfunction $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {\n  var stateRef = $bx7SL$useRef({\n    isFocused: false,\n    onBlur: onBlur,\n    observer: null\n  });\n  stateRef.current.onBlur = onBlur;\n  $bx7SL$useLayoutEffect(function () {\n    var state = stateRef.current;\n    return function () {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n  return $bx7SL$useCallback(function (e1) {\n    if (e1.target instanceof HTMLButtonElement || e1.target instanceof HTMLInputElement || e1.target instanceof HTMLTextAreaElement || e1.target instanceof HTMLSelectElement) {\n      stateRef.current.isFocused = true;\n      var target = e1.target;\n      var onBlurHandler = function onBlurHandler(e) {\n        var\n          _current, ref;\n        stateRef.current.isFocused = false;\n        if (target.disabled) (ref = (_current = stateRef.current).onBlur) === null || ref === void 0 ? void 0 : ref.call(_current, new $8a9cb279dc87e130$export$905e7fc544a71f36('blur', e));\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n      target.addEventListener('focusout', onBlurHandler, {\n        once: true\n      });\n      stateRef.current.observer = new MutationObserver(function () {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          target.dispatchEvent(new FocusEvent('blur'));\n          target.dispatchEvent(new FocusEvent('focusout', {\n            bubbles: true\n          }));\n        }\n      });\n      stateRef.current.observer.observe(target, {\n        attributes: true,\n        attributeFilter: ['disabled']\n      });\n    }\n  }, []);\n}\nfunction $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {\n  var isDisabled = props.isDisabled,\n    onFocusProp = props.onFocus,\n    onBlurProp = props.onBlur,\n    onFocusChange = props.onFocusChange;\n  var onBlur = $bx7SL$useCallback(function (e) {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) onBlurProp(e);\n      if (onFocusChange) onFocusChange(false);\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n  var onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);\n  var onFocus = $bx7SL$useCallback(function (e) {\n    if (e.target === e.currentTarget) {\n      if (onFocusProp) onFocusProp(e);\n      if (onFocusChange) onFocusChange(true);\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n  return {\n    focusProps: {\n      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : undefined,\n      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : null\n    }\n  };\n}\nvar $507fabe10e71c6fb$var$currentModality = null;\nvar $507fabe10e71c6fb$var$changeHandlers = new Set();\nvar $507fabe10e71c6fb$var$hasSetupGlobalListeners = false;\nvar $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\nvar $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\nvar $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e) {\n  for (var _iterator = _createForOfIteratorHelperLoose($507fabe10e71c6fb$var$changeHandlers), _step; !(_step = _iterator()).done;) {\n    var handler = _step.value;\n    handler(modality, e);\n  }\n}\nfunction $507fabe10e71c6fb$var$isValidKey(e) {\n  return !(e.metaKey || !$bx7SL$isMac() && e.altKey || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\nfunction $507fabe10e71c6fb$var$handleKeyboardEvent(e) {\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n  if ($507fabe10e71c6fb$var$isValidKey(e)) {\n    $507fabe10e71c6fb$var$currentModality = 'keyboard';\n    $507fabe10e71c6fb$var$triggerChangeHandlers('keyboard', e);\n  }\n}\nfunction $507fabe10e71c6fb$var$handlePointerEvent(e) {\n  $507fabe10e71c6fb$var$currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    $507fabe10e71c6fb$var$triggerChangeHandlers('pointer', e);\n  }\n}\nfunction $507fabe10e71c6fb$var$handleClickEvent(e) {\n  if ($bx7SL$isVirtualClick(e)) {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    $507fabe10e71c6fb$var$currentModality = 'virtual';\n  }\n}\nfunction $507fabe10e71c6fb$var$handleFocusEvent(e) {\n  if (e.target === window || e.target === document) return;\n  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {\n    $507fabe10e71c6fb$var$currentModality = 'virtual';\n    $507fabe10e71c6fb$var$triggerChangeHandlers('virtual', e);\n  }\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\n}\nfunction $507fabe10e71c6fb$var$handleWindowBlur() {\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;\n}\nfunction $507fabe10e71c6fb$var$setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || $507fabe10e71c6fb$var$hasSetupGlobalListeners) return;\n  var focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n  document.addEventListener('keydown', $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n  document.addEventListener('keyup', $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n  document.addEventListener('click', $507fabe10e71c6fb$var$handleClickEvent, true);\n  window.addEventListener('focus', $507fabe10e71c6fb$var$handleFocusEvent, true);\n  window.addEventListener('blur', $507fabe10e71c6fb$var$handleWindowBlur, false);\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener('pointermove', $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener('pointerup', $507fabe10e71c6fb$var$handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener('mousemove', $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener('mouseup', $507fabe10e71c6fb$var$handlePointerEvent, true);\n  }\n  $507fabe10e71c6fb$var$hasSetupGlobalListeners = true;\n}\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') $507fabe10e71c6fb$var$setupGlobalFocusEvents();else document.addEventListener('DOMContentLoaded', $507fabe10e71c6fb$var$setupGlobalFocusEvents);\n}\nfunction $507fabe10e71c6fb$export$b9b3dfddab17db27() {\n  return $507fabe10e71c6fb$var$currentModality !== 'pointer';\n}\nfunction $507fabe10e71c6fb$export$630ff653c5ada6a9() {\n  return $507fabe10e71c6fb$var$currentModality;\n}\nfunction $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {\n  $507fabe10e71c6fb$var$currentModality = modality;\n  $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);\n}\nfunction $507fabe10e71c6fb$export$98e20ec92f614cfe() {\n  $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n  var _$bx7SL$useState3 = $bx7SL$useState($507fabe10e71c6fb$var$currentModality),\n    _$bx7SL$useState4 = _slicedToArray(_$bx7SL$useState3, 2),\n    modality = _$bx7SL$useState4[0],\n    setModality = _$bx7SL$useState4[1];\n  $bx7SL$useEffect(function () {\n    var handler = function handler() {\n      setModality($507fabe10e71c6fb$var$currentModality);\n    };\n    $507fabe10e71c6fb$var$changeHandlers.add(handler);\n    return function () {\n      $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n    };\n  }, []);\n  return modality;\n}\nfunction $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\nfunction $507fabe10e71c6fb$export$ffd9e5021c1fb2d6() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isTextInput = props.isTextInput,\n    autoFocus = props.autoFocus;\n  var _$bx7SL$useState5 = $bx7SL$useState(autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27()),\n    _$bx7SL$useState6 = _slicedToArray(_$bx7SL$useState5, 2),\n    isFocusVisibleState = _$bx7SL$useState6[0],\n    setFocusVisible = _$bx7SL$useState6[1];\n  $507fabe10e71c6fb$export$ec71b4b83ac08ec3(function ($507fabe10e71c6fb$export$b9b3dfddab17db27) {\n    setFocusVisible($507fabe10e71c6fb$export$b9b3dfddab17db27);\n  }, [isTextInput], {\n    isTextInput: isTextInput\n  });\n  return {\n    isFocusVisible: isFocusVisibleState\n  };\n}\nfunction $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {\n  $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n  $bx7SL$useEffect(function () {\n    var handler = function handler(modality, e) {\n      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(opts === null || opts === void 0 ? void 0 : opts.isTextInput, modality, e)) return;\n      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());\n    };\n    $507fabe10e71c6fb$var$changeHandlers.add(handler);\n    return function () {\n      $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n    };\n  }, deps);\n}\nfunction $9ab94262bd0047c7$export$420e68273165f4ec(props) {\n  var isDisabled = props.isDisabled,\n    onBlurWithin = props.onBlurWithin,\n    onFocusWithin = props.onFocusWithin,\n    onFocusWithinChange = props.onFocusWithinChange;\n  var state = $bx7SL$useRef({\n    isFocusWithin: false\n  });\n  var onBlur = $bx7SL$useCallback(function (e) {\n    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {\n      state.current.isFocusWithin = false;\n      if (onBlurWithin) onBlurWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(false);\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n  var onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);\n  var onFocus = $bx7SL$useCallback(function (e) {\n    if (!state.current.isFocusWithin) {\n      if (onFocusWithin) onFocusWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(true);\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n  if (isDisabled) return {\n    focusWithinProps: {\n      onFocus: null,\n      onBlur: null\n    }\n  };\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\n\nvar $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\nvar $6179b936705e76d3$var$hoverCount = 0;\nfunction $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {\n  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;\n  setTimeout(function () {\n    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\nfunction $6179b936705e76d3$var$handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();\n}\nfunction $6179b936705e76d3$var$setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') return;\n  if (typeof PointerEvent !== 'undefined') document.addEventListener('pointerup', $6179b936705e76d3$var$handleGlobalPointerEvent);else document.addEventListener('touchend', $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n  $6179b936705e76d3$var$hoverCount++;\n  return function () {\n    $6179b936705e76d3$var$hoverCount--;\n    if ($6179b936705e76d3$var$hoverCount > 0) return;\n    if (typeof PointerEvent !== 'undefined') document.removeEventListener('pointerup', $6179b936705e76d3$var$handleGlobalPointerEvent);else document.removeEventListener('touchend', $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n  };\n}\nfunction $6179b936705e76d3$export$ae780daf29e6d456(props) {\n  var onHoverStart = props.onHoverStart,\n    onHoverChange = props.onHoverChange,\n    onHoverEnd = props.onHoverEnd,\n    isDisabled = props.isDisabled;\n  var _$bx7SL$useState7 = $bx7SL$useState(false),\n    _$bx7SL$useState8 = _slicedToArray(_$bx7SL$useState7, 2),\n    isHovered = _$bx7SL$useState8[0],\n    setHovered = _$bx7SL$useState8[1];\n  var state = $bx7SL$useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n  $bx7SL$useEffect($6179b936705e76d3$var$setupGlobalTouchEvents, []);\n  var _$bx7SL$useMemo = $bx7SL$useMemo(function () {\n      var triggerHoverStart = function triggerHoverStart(event, pointerType) {\n        state.pointerType = pointerType;\n        if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) return;\n        state.isHovered = true;\n        var target = event.currentTarget;\n        state.target = target;\n        if (onHoverStart) onHoverStart({\n          type: 'hoverstart',\n          target: target,\n          pointerType: pointerType\n        });\n        if (onHoverChange) onHoverChange(true);\n        setHovered(true);\n      };\n      var triggerHoverEnd = function triggerHoverEnd(event, pointerType) {\n        state.pointerType = '';\n        state.target = null;\n        if (pointerType === 'touch' || !state.isHovered) return;\n        state.isHovered = false;\n        var target = event.currentTarget;\n        if (onHoverEnd) onHoverEnd({\n          type: 'hoverend',\n          target: target,\n          pointerType: pointerType\n        });\n        if (onHoverChange) onHoverChange(false);\n        setHovered(false);\n      };\n      var hoverProps = {};\n      if (typeof PointerEvent !== 'undefined') {\n        hoverProps.onPointerEnter = function (e) {\n          if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') return;\n          triggerHoverStart(e, e.pointerType);\n        };\n        hoverProps.onPointerLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, e.pointerType);\n        };\n      } else {\n        hoverProps.onTouchStart = function () {\n          state.ignoreEmulatedMouseEvents = true;\n        };\n        hoverProps.onMouseEnter = function (e) {\n          if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, 'mouse');\n          state.ignoreEmulatedMouseEvents = false;\n        };\n        hoverProps.onMouseLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, 'mouse');\n        };\n      }\n      return {\n        hoverProps: hoverProps,\n        triggerHoverEnd: triggerHoverEnd\n      };\n    }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]),\n    hoverProps1 = _$bx7SL$useMemo.hoverProps,\n    triggerHoverEnd1 = _$bx7SL$useMemo.triggerHoverEnd;\n  $bx7SL$useEffect(function () {\n    if (isDisabled) triggerHoverEnd1({\n      currentTarget: state.target\n    }, state.pointerType);\n  }, [isDisabled]);\n  return {\n    hoverProps: hoverProps1,\n    isHovered: isHovered\n  };\n}\nfunction $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {\n  var ref = props.ref,\n    onInteractOutside = props.onInteractOutside,\n    isDisabled = props.isDisabled,\n    onInteractOutsideStart = props.onInteractOutsideStart;\n  var stateRef = $bx7SL$useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside: onInteractOutside,\n    onInteractOutsideStart: onInteractOutsideStart\n  });\n  var state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n  $bx7SL$useEffect(function () {\n    if (isDisabled) return;\n    var onPointerDown = function onPointerDown(e) {\n      if ($e0b6e0b68ec7f50f$var$isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) state.onInteractOutsideStart(e);\n        state.isPointerDown = true;\n      }\n    };\n    if (typeof PointerEvent !== 'undefined') {\n      var onPointerUp = function onPointerUp(e) {\n        if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n      return function () {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      var onMouseUp = function onMouseUp(e) {\n        if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;else if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n      return function () {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\nfunction $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {\n  if (event.button > 0) return false;\n  if (event.target) {\n    var ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) return false;\n  }\n  return ref.current && !ref.current.contains(event.target);\n}\nfunction $93925083ecbb358c$export$48d1ea6320830260(handler) {\n  if (!handler) return;\n  var shouldStopPropagation = true;\n  return function (e) {\n    var event = _objectSpread(_objectSpread({}, e), {}, {\n      preventDefault: function preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented: function isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation: function stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation: function continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    });\n    handler(event);\n    if (shouldStopPropagation) e.stopPropagation();\n  };\n}\nfunction $46d819fcbaf35654$export$8f71654801c2f7cd(props) {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyDown),\n      onKeyUp: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyUp)\n    }\n  };\n}\nfunction $e8a7022cf87cba2a$export$36da96379f79f245(props) {\n  var onMoveStart = props.onMoveStart,\n    onMove = props.onMove,\n    onMoveEnd = props.onMoveEnd;\n  var state = $bx7SL$useRef({\n    didMove: false,\n    lastPosition: null,\n    id: null\n  });\n  var _$bx7SL$useGlobalList2 = $bx7SL$useGlobalListeners(),\n    addGlobalListener = _$bx7SL$useGlobalList2.addGlobalListener,\n    removeGlobalListener = _$bx7SL$useGlobalList2.removeGlobalListener;\n  var moveProps1 = $bx7SL$useMemo(function () {\n    var moveProps = {};\n    var start = function start() {\n      $14c0b72509d70225$export$16a4697467175487();\n      state.current.didMove = false;\n    };\n    var move = function move(originalEvent, pointerType, deltaX, deltaY) {\n      if (deltaX === 0 && deltaY === 0) return;\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({\n          type: 'movestart',\n          pointerType: pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType: pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    var end = function end(originalEvent, pointerType) {\n      $14c0b72509d70225$export$b0d6fa1ab32e3295();\n      if (state.current.didMove) onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({\n        type: 'moveend',\n        pointerType: pointerType,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    if (typeof PointerEvent === 'undefined') {\n      var onMouseMove = function onMouseMove(e) {\n        if (e.button === 0) {\n          move(e, 'mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button === 0) {\n          end(e, 'mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = function (e) {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      var onTouchMove = function onTouchMove(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref3) {\n          var identifier = _ref3.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          var _e$changedTouches$tou = e.changedTouches[touch],\n            pageX = _e$changedTouches$tou.pageX,\n            pageY = _e$changedTouches$tou.pageY;\n          move(e, 'touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: pageX,\n            pageY: pageY\n          };\n        }\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref4) {\n          var identifier = _ref4.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          end(e, 'touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = function (e) {\n        if (e.changedTouches.length === 0 || state.current.id != null) return;\n        var _e$changedTouches$ = e.changedTouches[0],\n          pageX = _e$changedTouches$.pageX,\n          pageY = _e$changedTouches$.pageY,\n          identifier = _e$changedTouches$.identifier;\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {\n          pageX: pageX,\n          pageY: pageY\n        };\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || 'mouse';\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || 'mouse';\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n      moveProps.onPointerDown = function (e) {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n    var triggerKeyboardMove = function triggerKeyboardMove(e, deltaX, deltaY) {\n      start();\n      move(e, 'keyboard', deltaX, deltaY);\n      end(e, 'keyboard');\n    };\n    moveProps.onKeyDown = function (e) {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n  return {\n    moveProps: moveProps1\n  };\n}\nfunction $7d0a636d7a4dcefd$export$2123ff2b87c81ca(props, ref) {\n  var onScroll = props.onScroll,\n    isDisabled = props.isDisabled;\n  var onScrollHandler = $bx7SL$useCallback(function (e) {\n    if (e.ctrlKey) return;\n    e.preventDefault();\n    e.stopPropagation();\n    if (onScroll) onScroll({\n      deltaX: e.deltaX,\n      deltaY: e.deltaY\n    });\n  }, [onScroll]);\n  $bx7SL$useEvent(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\nvar $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;\nfunction $8a26561d2877236e$export$c24ed0104d07eab9(props) {\n  var isDisabled = props.isDisabled,\n    onLongPressStart = props.onLongPressStart,\n    onLongPressEnd = props.onLongPressEnd,\n    onLongPress = props.onLongPress,\n    _props$threshold = props.threshold,\n    threshold = _props$threshold === void 0 ? $8a26561d2877236e$var$DEFAULT_THRESHOLD : _props$threshold,\n    accessibilityDescription = props.accessibilityDescription;\n  var timeRef = $bx7SL$useRef(null);\n  var _$bx7SL$useGlobalList3 = $bx7SL$useGlobalListeners(),\n    addGlobalListener = _$bx7SL$useGlobalList3.addGlobalListener,\n    removeGlobalListener = _$bx7SL$useGlobalList3.removeGlobalListener;\n  var _$f6c31cce2adf654f$ex2 = $f6c31cce2adf654f$export$45712eceda6fad21({\n      isDisabled: isDisabled,\n      onPressStart: function onPressStart(e1) {\n        if (e1.pointerType === 'mouse' || e1.pointerType === 'touch') {\n          if (onLongPressStart) onLongPressStart(_objectSpread(_objectSpread({}, e1), {}, {\n            type: 'longpressstart'\n          }));\n          timeRef.current = setTimeout(function () {\n            e1.target.dispatchEvent(new PointerEvent('pointercancel', {\n              bubbles: true\n            }));\n            if (onLongPress) onLongPress(_objectSpread(_objectSpread({}, e1), {}, {\n              type: 'longpress'\n            }));\n            timeRef.current = null;\n          }, threshold);\n          if (e1.pointerType === 'touch') {\n            var onContextMenu = function onContextMenu(e) {\n              e.preventDefault();\n            };\n            addGlobalListener(e1.target, 'contextmenu', onContextMenu, {\n              once: true\n            });\n            addGlobalListener(window, 'pointerup', function () {\n              setTimeout(function () {\n                removeGlobalListener(e1.target, 'contextmenu', onContextMenu);\n              }, 30);\n            }, {\n              once: true\n            });\n          }\n        }\n      },\n      onPressEnd: function onPressEnd(e) {\n        if (timeRef.current) clearTimeout(timeRef.current);\n        if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) onLongPressEnd(_objectSpread(_objectSpread({}, e), {}, {\n          type: 'longpressend'\n        }));\n      }\n    }),\n    pressProps = _$f6c31cce2adf654f$ex2.pressProps;\n  var descriptionProps = $bx7SL$useDescription(onLongPress && !isDisabled ? accessibilityDescription : null);\n  return {\n    longPressProps: $bx7SL$mergeProps(pressProps, descriptionProps)\n  };\n}\nexport { $3b117e43dc0ca95d$export$27c701ed9e449e99 as Pressable, $f1ab8c75478c6f73$export$3351871ee4b288b8 as PressResponder, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6 as useFocus, $507fabe10e71c6fb$export$b9b3dfddab17db27 as isFocusVisible, $507fabe10e71c6fb$export$630ff653c5ada6a9 as getInteractionModality, $507fabe10e71c6fb$export$8397ddfc504fdb9a as setInteractionModality, $507fabe10e71c6fb$export$98e20ec92f614cfe as useInteractionModality, $507fabe10e71c6fb$export$ffd9e5021c1fb2d6 as useFocusVisible, $507fabe10e71c6fb$export$ec71b4b83ac08ec3 as useFocusVisibleListener, $9ab94262bd0047c7$export$420e68273165f4ec as useFocusWithin, $6179b936705e76d3$export$ae780daf29e6d456 as useHover, $e0b6e0b68ec7f50f$export$872b660ac5a1ff98 as useInteractOutside, $46d819fcbaf35654$export$8f71654801c2f7cd as useKeyboard, $e8a7022cf87cba2a$export$36da96379f79f245 as useMove, $f6c31cce2adf654f$export$45712eceda6fad21 as usePress, $7d0a636d7a4dcefd$export$2123ff2b87c81ca as useScrollWheel, $8a26561d2877236e$export$c24ed0104d07eab9 as useLongPress };","map":{"version":3,"sources":["packages/@react-aria/interactions/src/Pressable.tsx","packages/@react-aria/interactions/src/usePress.ts","packages/@react-aria/interactions/src/textSelection.ts","packages/@react-aria/interactions/src/context.ts","packages/@react-aria/interactions/src/PressResponder.tsx","packages/@react-aria/interactions/src/useFocus.ts","packages/@react-aria/interactions/src/utils.ts","packages/@react-aria/interactions/src/useFocusVisible.ts","packages/@react-aria/interactions/src/useFocusWithin.ts","packages/@react-aria/interactions/src/useHover.ts","packages/@react-aria/interactions/src/useInteractOutside.ts","packages/@react-aria/interactions/src/useKeyboard.ts","packages/@react-aria/interactions/src/createEventHandler.ts","packages/@react-aria/interactions/src/useMove.ts","packages/@react-aria/interactions/src/useScrollWheel.ts","packages/@react-aria/interactions/src/useLongPress.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<DOMAttributes, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<Element>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {DOMAttributes, FocusableElement, PointerType, PressEvents} from '@react-types/shared';\nimport {focusWithoutScrolling, isVirtualClick, isVirtualPointerEvent, mergeProps, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {PressResponderContext} from './context';\nimport {RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean,\n  /**\n   * Whether press events should be canceled when the pointer leaves the target while pressed.\n   * By default, this is `false`, which means if the pointer returns back over the target while\n   * still pressed, onPressStart will be fired again. If set to `true`, the press is canceled\n   * when the pointer leaves the target and onPressStart will not be fired if the pointer returns.\n   */\n  shouldCancelOnPointerExit?: boolean,\n  /** Whether text selection should be enabled on the pressable element. */\n  allowTextSelectionOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<Element>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  activePointerId: any,\n  target: FocusableElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: DOMAttributes\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    shouldCancelOnPointerExit,\n    allowTextSelectionOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb\n    ...domProps\n  } = usePressResponderContext(props);\n  let propsRef = useRef<PressHookProps>(null);\n  propsRef.current = {onPress, onPressChange, onPressStart, onPressEnd, onPressUp, isDisabled, shouldCancelOnPointerExit};\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressStart, onPressChange, isDisabled} = propsRef.current;\n      if (isDisabled || state.didFirePressStart) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      let {onPressEnd, onPressChange, onPress, isDisabled} = propsRef.current;\n      if (!state.didFirePressStart) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed && !isDisabled) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressUp, isDisabled} = propsRef.current;\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let cancel = (e: EventBase) => {\n      if (state.isPressed) {\n        if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n      }\n    };\n\n    let pressProps: DOMAttributes = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target as Element)) {\n          if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n            e.preventDefault();\n          }\n          e.stopPropagation();\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        } else if (e.key === 'Enter' && isHTMLAnchorLink(e.currentTarget)) {\n          // If the target is a link, we won't have handled this above because we want the default\n          // browser behavior to open the link when pressing Enter. But we still need to prevent\n          // default so that elements above do not also handle it (e.g. table row).\n          e.stopPropagation();\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target as Element)) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === 'virtual' || isVirtualClick(e.nativeEvent))) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e, state.target)) {\n        if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n\n        state.isPressed = false;\n        let target = e.target as Element;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (state.target instanceof HTMLElement && state.target.contains(target) && (isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link')) {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n        // Ignore and let the onClick handler take care of it instead.\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        // https://bugs.webkit.org/show_bug.cgi?id=223202\n        if (isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget as Element)) {\n          e.preventDefault();\n        }\n\n        state.pointerType = e.pointerType;\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          if (!allowTextSelectionOnPress) {\n            disableTextSelection(state.target);\n          }\n\n          triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.currentTarget as Element)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n        if (!e.currentTarget.contains(e.target as Element) || state.pointerType === 'virtual') {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType || e.pointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) {\n            restoreTextSelection(state.target);\n          }\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget)) {\n          e.preventDefault();\n        }\n\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        if (!allowTextSelectionOnPress) {\n          disableTextSelection(state.target);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, state.pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as Element).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false,\n            altKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (!allowTextSelectionOnPress) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        restoreTextSelection(ref.current.target);\n      }\n    };\n  }, [allowTextSelectionOnPress]);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: Element): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent, currentTarget: Element): boolean {\n  const {key, code} = event;\n  const element = currentTarget as HTMLElement;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') &&\n    !((element instanceof HTMLInputElement && !isValidInputKey(element, key)) ||\n      element instanceof HTMLTextAreaElement ||\n      element.isContentEditable) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: FocusableElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = (point.width / 2) || point.radiusX || 0;\n  let offsetY = (point.height / 2) || point.radiusY || 0;\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: Element) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: Element) {\n  // We cannot prevent default if the target is a draggable element.\n  return !(target instanceof HTMLElement) || !target.draggable;\n}\n\nfunction shouldPreventDefaultKeyboard(target: Element, key: string) {\n  if (target instanceof HTMLInputElement) {\n    return !isValidInputKey(target, key);\n  }\n\n  if (target instanceof HTMLButtonElement) {\n    return target.type !== 'submit';\n  }\n\n  return true;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\nfunction isValidInputKey(target: HTMLInputElement, key: string) {\n  // Only space should toggle checkboxes and radios, not enter.\n  return target.type === 'checkbox' || target.type === 'radio'\n    ? key === ' '\n    : nonTextInputTypes.has(target.type);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isIOS, runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\n// For non-iOS devices, we apply user-select: none to the pressed element instead to avoid possible\n// performance issues that arise from applying and removing user-select: none to the entire page\n// (see https://github.com/adobe/react-spectrum/issues/1609).\ntype State = 'default' | 'disabled' | 'restoring';\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet state: State = 'default';\nlet savedUserSelect = '';\nlet modifiedElementMap = new WeakMap<Element, string>();\n\nexport function disableTextSelection(target?: Element) {\n  if (isIOS()) {\n    if (state === 'default') {\n      savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = 'none';\n    }\n\n    state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\n\nexport function restoreTextSelection(target?: Element) {\n  if (isIOS()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if (state !== 'disabled') {\n      return;\n    }\n\n    state = 'restoring';\n\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(() => {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      runAfterTransition(() => {\n        // Avoid race conditions\n        if (state === 'restoring') {\n          if (document.documentElement.style.webkitUserSelect === 'none') {\n            document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n          }\n\n          savedUserSelect = '';\n          state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && modifiedElementMap.has(target)) {\n      let targetOldUserSelect = modifiedElementMap.get(target);\n\n      if (target.style.userSelect === 'none') {\n        target.style.userSelect = targetOldUserSelect;\n      }\n\n      if (target.getAttribute('style') === '') {\n        target.removeAttribute('style');\n      }\n      modifiedElementMap.delete(target);\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<FocusableElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<FocusableElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref: ref || prevContext?.ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, FocusEvents} from '@react-types/shared';\nimport {FocusEvent, useCallback} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps['onBlur'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n\n  const onFocus: FocusProps['onFocus'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : null\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\nexport class SyntheticFocusEvent implements ReactFocusEvent {\n  nativeEvent: FocusEvent;\n  target: Element;\n  currentTarget: Element;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as Element;\n    this.currentTarget = nativeEvent.currentTarget as Element;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent(onBlur: (e: ReactFocusEvent) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    onBlur,\n    observer: null as MutationObserver\n  });\n  stateRef.current.onBlur = onBlur;\n\n  // Clean up MutationObserver on unmount. See below.\n  // eslint-disable-next-line arrow-body-style\n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler = (e: FocusEvent) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          stateRef.current.onBlur?.(new SyntheticFocusEvent('blur', e));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          target.dispatchEvent(new FocusEvent('blur'));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, []);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac, isVirtualClick} from '@react-aria/utils';\nimport {useEffect, useState} from 'react';\n\nexport type Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\nexport type FocusVisibleHandler = (isFocusVisible: boolean) => void;\nexport interface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalFocusEvents);\n  }\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(opts?.isTextInput, modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    if (!state.current.isFocusWithin) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        onFocus: null,\n        onBlur: null\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {HoverEvents} from '@react-types/shared';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: DOMAttributes,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: DOMAttributes = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\nexport interface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  onInteractOutsideStart?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside,\n    onInteractOutsideStart\n  });\n  let state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n\n  useEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    let onPointerDown = (e) => {\n      if (isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) {\n          state.onInteractOutsideStart(e);\n        }\n        state.isPointerDown = true;\n      }\n    };\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  // if the event target is no longer in the document\n  if (event.target) {\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {DOMAttributes, KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: DOMAttributes\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {DOMAttributes, MoveEvents, PointerType} from '@react-types/shared';\nimport React, {useMemo, useRef} from 'react';\nimport {useGlobalListeners} from '@react-aria/utils';\n\nexport interface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: DOMAttributes\n}\n\ninterface EventBase {\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: DOMAttributes = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (originalEvent: EventBase, pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    let end = (originalEvent: EventBase, pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move(e, 'mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end(e, 'mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move(e, 'touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end(e, 'touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (e: EventBase, deltaX: number, deltaY: number) => {\n      start();\n      move(e, 'keyboard', deltaX, deltaY);\n      end(e, 'keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n\n  return {moveProps};\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ScrollEvents} from '@react-types/shared';\nimport {useEvent} from '@react-aria/utils';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEvent(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, LongPressEvent} from '@react-types/shared';\nimport {mergeProps, useDescription, useGlobalListeners} from '@react-aria/utils';\nimport {usePress} from './usePress';\nimport {useRef} from 'react';\n\nexport interface LongPressProps {\n  /** Whether long press events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when a long press interaction starts. */\n  onLongPressStart?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when a long press interaction ends, either\n   * over the target or when the pointer leaves the target.\n   */\n  onLongPressEnd?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when the threshold time is met while\n   * the press is over the target.\n   */\n  onLongPress?: (e: LongPressEvent) => void,\n  /**\n   * The amount of time in milliseconds to wait before triggering a long press.\n   * @default 500ms\n   */\n  threshold?: number,\n  /**\n   * A description for assistive techology users indicating that a long press\n   * action is available, e.g. \"Long press to open menu\".\n   */\n  accessibilityDescription?: string\n}\n\nexport interface LongPressResult {\n  /** Props to spread on the target element. */\n  longPressProps: DOMAttributes\n}\n\nconst DEFAULT_THRESHOLD = 500;\n\n/**\n * Handles long press interactions across mouse and touch devices. Supports a customizable time threshold,\n * accessibility description, and normalizes behavior across browsers and devices.\n */\nexport function useLongPress(props: LongPressProps): LongPressResult {\n  let {\n    isDisabled,\n    onLongPressStart,\n    onLongPressEnd,\n    onLongPress,\n    threshold = DEFAULT_THRESHOLD,\n    accessibilityDescription\n  } = props;\n\n  const timeRef = useRef(null);\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let {pressProps} = usePress({\n    isDisabled,\n    onPressStart(e) {\n      if (e.pointerType === 'mouse' || e.pointerType === 'touch') {\n        if (onLongPressStart) {\n          onLongPressStart({\n            ...e,\n            type: 'longpressstart'\n          });\n        }\n\n        timeRef.current = setTimeout(() => {\n          // Prevent other usePress handlers from also handling this event.\n          e.target.dispatchEvent(new PointerEvent('pointercancel', {bubbles: true}));\n          if (onLongPress) {\n            onLongPress({\n              ...e,\n              type: 'longpress'\n            });\n          }\n          timeRef.current = null;\n        }, threshold);\n\n        // Prevent context menu, which may be opened on long press on touch devices\n        if (e.pointerType === 'touch') {\n          let onContextMenu = e => {\n            e.preventDefault();\n          };\n\n          addGlobalListener(e.target, 'contextmenu', onContextMenu, {once: true});\n          addGlobalListener(window, 'pointerup', () => {\n            // If no contextmenu event is fired quickly after pointerup, remove the handler\n            // so future context menu events outside a long press are not prevented.\n            setTimeout(() => {\n              removeGlobalListener(e.target, 'contextmenu', onContextMenu);\n            }, 30);\n          }, {once: true});\n        }\n      }\n    },\n    onPressEnd(e) {\n      if (timeRef.current) {\n        clearTimeout(timeRef.current);\n      }\n\n      if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) {\n        onLongPressEnd({\n          ...e,\n          type: 'longpressend'\n        });\n      }\n    }\n  });\n\n  let descriptionProps = useDescription(onLongPress && !isDisabled ? accessibilityDescription : null);\n\n  return {\n    longPressProps: mergeProps(pressProps, descriptionProps)\n  };\n}\n"]},"metadata":{},"sourceType":"module"}