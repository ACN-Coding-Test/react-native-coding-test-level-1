{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _extends2 from \"@babel/runtime/helpers/extends\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useThemeProps } from \"../../../hooks\";\nimport Box from \"../../primitives/Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar Code = function Code(_ref, ref) {\n  var props = _extends2({}, (_objectDestructuringEmpty(_ref), _ref));\n  var _useThemeProps = useThemeProps('Code', props),\n    newProps = _extends2({}, (_objectDestructuringEmpty(_useThemeProps), _useThemeProps));\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({\n    _text: {\n      fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace'\n    }\n  }, newProps, {\n    ref: ref\n  }));\n};\nexport default React.memo(React.forwardRef(Code));","map":{"version":3,"sources":["index.tsx"],"names":["React","useThemeProps","Box","useHasResponsiveProps","Code","props","ref","newProps","fontFamily","Platform","OS","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA;AAEA,SAASC,aAAT;AACA,OAAOC,GAAP;AAEA,SAASC,qBAAT;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAI,OAA8BE,GAA3B,EAAyC;EAAA,IAAnCD,KAAAA;EACjB,qBAAsBJ,aAAa,CAAC,MAAD,EAASI,KAAT,CADiB;IAC3CE,QAAAA;;EAET,IAAIJ,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA,QAAA,CAAA;IACE,KAAK,EAAE;MACLG,UAAU,EAAEC,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GAAwB,SAAxBA,GAAoC;IAD3C;EADT,CAAA,EAIMF,QAJN,EAAA;IAKE,GAAG,EAAED;EALP,CAAA,CAAA,CADF;AASD,CAfD;AAkBA,eAAeN,KAAK,CAACW,IAANX,CAAWA,KAAK,CAACY,UAANZ,CAAiBI,IAAjBJ,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\nimport { useThemeProps } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { ICodeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Code = ({ ...props }: ICodeProps, ref?: any) => {\n  let { ...newProps } = useThemeProps('Code', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      _text={{\n        fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace',\n      }}\n      {...newProps}\n      ref={ref}\n    />\n  );\n};\n\nexport type { ICodeProps };\nexport default React.memo(React.forwardRef(Code));\n"]},"metadata":{},"sourceType":"module"}