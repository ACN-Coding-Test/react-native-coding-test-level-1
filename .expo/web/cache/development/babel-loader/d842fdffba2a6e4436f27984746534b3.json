{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isDisabled\", \"isReadOnly\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from \"../../../hooks\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport Box from \"../Box\";\nimport { SliderContext } from \"./Context\";\nimport { useSlider } from '@react-native-aria/slider';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nfunction Slider(_ref, ref) {\n  var isDisabled = _ref.isDisabled,\n    isReadOnly = _ref.isReadOnly,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _props$accessibilityL;\n  var newProps = _objectSpread(_objectSpread({}, props), {}, {\n    'aria-label': (_props$accessibilityL = props.accessibilityLabel) !== null && _props$accessibilityL !== void 0 ? _props$accessibilityL : 'Slider'\n  });\n  if (typeof props.value === 'number') {\n    newProps.value = [props.value];\n  }\n  if (typeof props.defaultValue === 'number') {\n    newProps.defaultValue = [props.defaultValue];\n  }\n  props = newProps;\n  var _useLayout = useLayout(),\n    onLayout = _useLayout.onLayout,\n    trackLayout = _useLayout.layout;\n  var updatedProps = _extends2({}, props);\n  if (isReadOnly || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n  var state = useSliderState(_objectSpread(_objectSpread({}, updatedProps), {}, {\n    numberFormatter: {\n      format: function format(e) {\n        return e;\n      }\n    },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: function onChange(val) {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: function onChangeEnd(val) {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    }\n  }));\n  var resolvedProps = usePropsResolution('Slider', props, {\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  });\n  var _useSlider = useSlider(props, state, trackLayout),\n    trackProps = _useSlider.trackProps;\n  var contextValue = React.useMemo(function () {\n    return {\n      trackLayout: trackLayout,\n      state: state,\n      orientation: props.orientation,\n      isDisabled: isDisabled,\n      isReversed: props.isReversed,\n      colorScheme: props.colorScheme,\n      trackProps: trackProps,\n      isReadOnly: isReadOnly,\n      onTrackLayout: onLayout,\n      thumbSize: resolvedProps.thumbSize,\n      sliderSize: resolvedProps.sliderTrackHeight,\n      _interactionBox: resolvedProps._interactionBox\n    };\n  }, [trackLayout, state, props.orientation, isDisabled, props.isReversed, props.colorScheme, isReadOnly, onLayout, resolvedProps.thumbSize, resolvedProps.sliderTrackHeight]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(SliderContext.Provider, {\n    value: contextValue\n  }, React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), React.Children.map(props.children, function (child, index) {\n    if (child.displayName === 'SliderThumb') {\n      return React.cloneElement(child, {\n        index: index\n      });\n    }\n    return child;\n  })));\n}\nexport default forwardRef(Slider);","map":{"version":3,"sources":["Slider.tsx"],"names":["React","forwardRef","useSliderState","useLayout","usePropsResolution","Box","SliderContext","useSlider","useHasResponsiveProps","Slider","isDisabled","isReadOnly","props","ref","newProps","accessibilityLabel","value","defaultValue","onLayout","layout","trackLayout","updatedProps","Object","state","numberFormatter","format","e","minValue","maxValue","onChange","val","onChangeEnd","resolvedProps","trackProps","contextValue","useMemo","orientation","isReversed","colorScheme","onTrackLayout","thumbSize","sliderSize","sliderTrackHeight","_interactionBox","Children","map","children","child","index","displayName","cloneElement"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks';\nimport type { ISliderProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useSlider } from '@react-native-aria/slider';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction Slider({ isDisabled, isReadOnly, ...props }: ISliderProps, ref?: any) {\n  const newProps = {\n    ...props,\n    'aria-label': props.accessibilityLabel ?? 'Slider',\n  };\n\n  if (typeof props.value === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  const { onLayout, layout: trackLayout } = useLayout();\n  const updatedProps: ISliderProps = Object.assign({}, props);\n\n  if (isReadOnly || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  const state = useSliderState({\n    ...updatedProps,\n    //@ts-ignore\n    numberFormatter: { format: (e) => e },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: (val: any) => {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: (val: any) => {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    },\n  });\n\n  const resolvedProps = usePropsResolution('Slider', props, {\n    isDisabled,\n    isReadOnly,\n  });\n\n  const { trackProps } = useSlider(\n    (props as unknown) as any,\n    state,\n    trackLayout\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      trackLayout,\n      state,\n      orientation: props.orientation,\n      isDisabled: isDisabled,\n      isReversed: props.isReversed,\n      colorScheme: props.colorScheme,\n      trackProps,\n      isReadOnly: isReadOnly,\n      onTrackLayout: onLayout,\n      thumbSize: resolvedProps.thumbSize,\n      sliderSize: resolvedProps.sliderTrackHeight,\n      _interactionBox: resolvedProps._interactionBox,\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    trackLayout,\n    state,\n    props.orientation,\n    isDisabled,\n    props.isReversed,\n    props.colorScheme,\n    isReadOnly,\n    onLayout,\n    resolvedProps.thumbSize,\n    resolvedProps.sliderTrackHeight,\n  ]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <Box {...resolvedProps} ref={ref}>\n        {React.Children.map(props.children, (child, index) => {\n          if (child.displayName === 'SliderThumb') {\n            return React.cloneElement(child as React.ReactElement, {\n              index,\n            });\n          }\n\n          return child;\n        })}\n      </Box>\n    </SliderContext.Provider>\n  );\n}\n\nexport default forwardRef(Slider);\n"]},"metadata":{},"sourceType":"module"}