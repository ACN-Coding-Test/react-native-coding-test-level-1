{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"_contentContainerStyle\", \"contentContainerStyle\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport RNFlatList from \"react-native-web/dist/exports/FlatList\";\nimport { usePropsResolution, useStyledSystemPropsResolver } from \"../../../hooks\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar StyledFlatList = makeStyledComponent(RNFlatList);\nvar FlatListComponent = function FlatListComponent(props, ref) {\n  var _usePropsResolution = usePropsResolution('FlatList', props),\n    _contentContainerStyle = _usePropsResolution._contentContainerStyle,\n    contentContainerStyle = _usePropsResolution.contentContainerStyle,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n  var resolved_ContentContainerStyle = useStyledSystemPropsResolver(_contentContainerStyle || {});\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(StyledFlatList, _extends({}, resolvedProps, {\n    contentContainerStyle: contentContainerStyle || resolved_ContentContainerStyle,\n    ref: ref\n  }));\n};\nexport var FlatList = forwardRef(FlatListComponent);","map":{"version":3,"sources":["FlatList.tsx"],"names":["React","forwardRef","usePropsResolution","useStyledSystemPropsResolver","makeStyledComponent","useHasResponsiveProps","StyledFlatList","RNFlatList","FlatListComponent","props","ref","_contentContainerStyle","contentContainerStyle","resolvedProps","resolved_ContentContainerStyle","FlatList"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAAA;AAEA,SACEC,kBADF,EAEEC,4BAFF;AAIA,SAASC,mBAAT;AAEA,SAASC,qBAAT;AAEA,IAAMC,cAAmB,GAAGF,mBAAmB,CAACG,UAAD,CAA/C;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CACrBC,KADwB,EAExBC,GAFwB,EAGrB;EACH,0BAIIR,kBAAkB,CAAC,UAAD,EAAaO,KAAb,CAJtB;IACEE,sBADI,uBACJA,sBADI;IAEJC,qBAFI,uBAEJA,qBAFI;IAGDC,aAAAA;EAEL,IAAMC,8BAA8B,GAAGX,4BAA4B,CACjEQ,sBAAsB,IAAI,CAAA,CADuC,CANhE;;EAUH,IAAIN,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACMI,aADN,EAAA;IAEE,qBAAqB,EACnBD,qBAAqB,IAAIE,8BAH7B;IAKE,GAAG,EAAEJ;EALP,CAAA,CAAA,CADF;AASD,CAzBD;AA2BA,OAAO,IAAMK,QAAQ,GAAGd,UAAU,CAACO,iBAAD,CAA3B","sourcesContent":["import React, { forwardRef } from 'react';\nimport { FlatList as RNFlatList } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IFlatListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledFlatList: any = makeStyledComponent(RNFlatList);\n\nconst FlatListComponent = <ItemT extends any>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('FlatList', props);\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledFlatList\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n};\n\nexport const FlatList = forwardRef(FlatListComponent) as <ItemT>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => any;\n"]},"metadata":{},"sourceType":"module"}