{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"type\", \"defaultValue\", \"value\", \"onChange\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, memo } from 'react';\nimport MenuGroup from \"./MenuGroup\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nexport var MenuOptionContext = React.createContext({\n  values: [],\n  onChange: function onChange(_val) {},\n  type: 'checkbox'\n});\nvar MenuOptionGroup = function MenuOptionGroup(_ref, ref) {\n  var type = _ref.type,\n    defaultValue = _ref.defaultValue,\n    value = _ref.value,\n    onChange = _ref.onChange,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var internalDefaultValue = defaultValue ? Array.isArray(defaultValue) ? defaultValue : [defaultValue] : [];\n  var _React$useState = React.useState(internalDefaultValue),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    internalValues = _React$useState2[0],\n    setValues = _React$useState2[1];\n  var _onChange = function _onChange(newValue) {\n    if (type === 'checkbox') {\n      var newValues = _toConsumableArray(internalValues);\n      if (internalValues.includes(newValue)) {\n        newValues.splice(newValues.indexOf(newValue), 1);\n        setValues(newValues);\n      } else {\n        newValues.push(newValue);\n        setValues(newValues);\n      }\n      onChange && onChange(newValues);\n    } else if (type === 'radio') {\n      setValues([newValue]);\n      onChange && onChange(newValue);\n    }\n  };\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(MenuOptionContext.Provider, {\n    value: {\n      values: !value ? internalValues : Array.isArray(value) ? value : [value],\n      onChange: _onChange,\n      type: type\n    }\n  }, React.createElement(MenuGroup, _extends({}, props, {\n    ref: ref\n  })));\n};\nexport default memo(forwardRef(MenuOptionGroup));","map":{"version":3,"sources":["MenuOptionGroup.tsx"],"names":["React","forwardRef","memo","MenuGroup","useHasResponsiveProps","MenuOptionContext","createContext","values","onChange","_val","type","MenuOptionGroup","defaultValue","value","props","ref","internalDefaultValue","Array","isArray","internalValues","setValues","useState","_onChange","newValue","newValues","includes","splice","indexOf","push"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,OAAOC,SAAP;AAEA,SAASC,qBAAT;AAEA,OAAO,IAAMC,iBAAiB,GAAG,KAAK,CAACC,aAAN,CAA6C;EAC5EC,MAAM,EAAE,EADoE;EAE5EC,QAAQ,EAAGC,kBAAAA,IAAD,EAAU,CAAE,CAFsD;EAG5EC,IAAI,EAAE;AAHsE,CAA7C,CAA1B;AAMP,IAAMC,eAAe,GAAG,SAAlBA,eAAe,OAEnBI,GAFsB,EAGnB;EAAA,IAFDL,IAAF,QAAEA,IAAF;IAAQE,YAAR,QAAQA,YAAR;IAAsBC,KAAtB,QAAsBA,KAAtB;IAA6BL,QAA7B,QAA6BA,QAA7B;IAA0CM,KAAAA;EAG1C,IAAME,oBAAoB,GAAGJ,YAAY,GACrCK,KAAK,CAACC,OAAND,CAAcL,YAAdK,CAAAA,GACEL,YADFK,GAEE,CAACL,YAAD,CAHmC,GAIrC,EAJJ;EAMA,sBAAoCZ,KAAK,CAACqB,QAANrB,CAClCgB,oBADkChB,CAApC;IAAA;IAAOmB,cAAD;IAAiBC,SAAjB;EAGN,IAAME,SAAS,GAAIC,SAAbD,SAAS,CAAIC,QAAD,EAA+B;IAC/C,IAAIb,IAAI,KAAK,UAAb,EAAyB;MACvB,IAAMc,SAAS,sBAAOL,cAAJ,CAAlB;MACA,IAAIA,cAAc,CAACM,QAAfN,CAAwBI,QAAxBJ,CAAJ,EAAuC;QACrCK,SAAS,CAACE,MAAVF,CAAiBA,SAAS,CAACG,OAAVH,CAAkBD,QAAlBC,CAAjBA,EAA8C,CAA9CA,CAAAA;QACAJ,SAAS,CAACI,SAAD,CAATJ;MACD,CAHD,MAGO;QACLI,SAAS,CAACI,IAAVJ,CAAeD,QAAfC,CAAAA;QACAJ,SAAS,CAACI,SAAD,CAATJ;MACD;MACDZ,QAAQ,IAAIA,QAAQ,CAACgB,SAAD,CAApBhB;IACD,CAVD,MAUO,IAAIE,IAAI,KAAK,OAAb,EAAsB;MAC3BU,SAAS,CAAC,CAACG,QAAD,CAAD,CAATH;MACAZ,QAAQ,IAAIA,QAAQ,CAACe,QAAD,CAApBf;IACD;EACF,CAzBE;;EA2BH,IAAIJ,qBAAqB,CAACU,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACE,KAAA,CAAA,aAAA,CAAC,iBAAD,CAAmB,QAAnB,EAAA;IACE,KAAK,EAAE;MACLP,MAAM,EAAE,CAACM,KAAD,GACJM,cADI,GAEJF,KAAK,CAACC,OAAND,CAAcJ,KAAdI,CAAAA,GACAJ,KADAI,GAEA,CAACJ,KAAD,CALC;MAMLL,QAAQ,EAAEc,SANL;MAOLZ,IAAAA,EAAAA;IAPK;EADT,CAAA,EAWE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAeI,KAAf,EAAA;IAAsB,GAAG,EAAEC;EAA3B,CAAA,CAAA,CAXF,CADF;AAeD,CAhDD;AAkDA,eAAeb,IAAI,CAACD,UAAU,CAACU,eAAD,CAAX,CAAnB","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport MenuGroup from './MenuGroup';\nimport type { IMenuOptionGroupProps, IMenuOptionContextProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const MenuOptionContext = React.createContext<IMenuOptionContextProps>({\n  values: [],\n  onChange: (_val) => {},\n  type: 'checkbox',\n});\n\nconst MenuOptionGroup = (\n  { type, defaultValue, value, onChange, ...props }: IMenuOptionGroupProps,\n  ref?: any\n) => {\n  const internalDefaultValue = defaultValue\n    ? Array.isArray(defaultValue)\n      ? defaultValue\n      : [defaultValue]\n    : [];\n\n  const [internalValues, setValues] = React.useState<Array<string | number>>(\n    internalDefaultValue\n  );\n  const _onChange = (newValue: string | number) => {\n    if (type === 'checkbox') {\n      const newValues = [...internalValues];\n      if (internalValues.includes(newValue)) {\n        newValues.splice(newValues.indexOf(newValue), 1);\n        setValues(newValues);\n      } else {\n        newValues.push(newValue);\n        setValues(newValues);\n      }\n      onChange && onChange(newValues);\n    } else if (type === 'radio') {\n      setValues([newValue]);\n      onChange && onChange(newValue);\n    }\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <MenuOptionContext.Provider\n      value={{\n        values: !value\n          ? internalValues\n          : Array.isArray(value)\n          ? value\n          : [value],\n        onChange: _onChange,\n        type,\n      }}\n    >\n      <MenuGroup {...props} ref={ref} />\n    </MenuOptionContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(MenuOptionGroup));\n"]},"metadata":{},"sourceType":"module"}