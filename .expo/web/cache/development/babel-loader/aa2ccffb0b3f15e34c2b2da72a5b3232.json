{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport { Box } from \"../../primitives\";\nimport { WarningIcon, WarningTwoIcon, InfoIcon, CheckCircleIcon } from \"../../primitives/Icon/Icons\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { AlertContext } from \"./Context\";\nimport { omitUndefined } from \"../../../theme/tools/utils\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar AlertIcon = function AlertIcon(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var newProps = usePropsResolution('AlertIcon', props);\n  newProps = omitUndefined(newProps);\n  var _React$useContext = React.useContext(AlertContext),\n    status = _React$useContext.status,\n    _icon = _React$useContext._icon;\n  var getIcon = function getIcon() {\n    switch (status) {\n      case 'error':\n        return React.createElement(WarningTwoIcon, _extends({}, _icon, newProps, {\n          ref: ref\n        }));\n      case 'warning':\n        return React.createElement(WarningIcon, _extends({}, _icon, newProps, {\n          ref: ref\n        }));\n      case 'success':\n        return React.createElement(CheckCircleIcon, _extends({}, _icon, newProps, {\n          ref: ref\n        }));\n      default:\n        return React.createElement(InfoIcon, _extends({}, _icon, newProps, {\n          ref: ref\n        }));\n    }\n  };\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, null, children || getIcon());\n};\nexport default memo(forwardRef(AlertIcon));","map":{"version":3,"sources":["AlertIcon.tsx"],"names":["React","memo","forwardRef","Box","WarningIcon","WarningTwoIcon","InfoIcon","CheckCircleIcon","usePropsResolution","AlertContext","omitUndefined","useHasResponsiveProps","AlertIcon","children","props","ref","newProps","status","_icon","useContext","getIcon"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,GAAT;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,eAJF;AAOA,SAASC,kBAAT;AACA,SAASC,YAAT;AACA,SAASC,aAAT;AACA,SAASC,qBAAT;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAS,OAA6CG,GAA1C,EAAwD;EAAA,IAArDF,QAAF,QAAEA,QAAF;IAAeC,KAAAA;EAChC,IAAIE,QAAQ,GAAGR,kBAAkB,CAAC,WAAD,EAAcM,KAAd,CAAjC;EACAE,QAAQ,GAAGN,aAAa,CAACM,QAAD,CAAxBA;EACA,wBAAyChB,KAAK,CAACmB,UAANnB,CAAiBS,YAAjBT,CAAzC;IAAQiB,MAAF,qBAAEA,MAAF;IAAUC,KAAAA,qBAAAA,KAAAA;EAChB,IAAME,OAAO,GAAG,SAAVA,OAAO,GAAS;IACpB,QAAQH,MAAR;MACE,KAAK,OAAL;QACE,OAAO,KAAA,CAAA,aAAA,CAAC,cAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAoBC,KAApB,EAA+BF,QAA/B,EAAA;UAAyC,GAAG,EAAED;QAA9C,CAAA,CAAA,CAAP;MACF,KAAK,SAAL;QACE,OAAO,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAiBG,KAAjB,EAA4BF,QAA5B,EAAA;UAAsC,GAAG,EAAED;QAA3C,CAAA,CAAA,CAAP;MACF,KAAK,SAAL;QACE,OAAO,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAqBG,KAArB,EAAgCF,QAAhC,EAAA;UAA0C,GAAG,EAAED;QAA/C,CAAA,CAAA,CAAP;MACF;QACE,OAAO,KAAA,CAAA,aAAA,CAAC,QAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAcG,KAAd,EAAyBF,QAAzB,EAAA;UAAmC,GAAG,EAAED;QAAxC,CAAA,CAAA,CAAP;IAAA;EAEL,CAfuE;;EAiBxE,IAAIJ,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OAAO,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA,IAAA,EAAMD,QAAQ,IAAIO,OAAO,EAAzB,CAAP;AACD,CArBD;AAsBA,eAAenB,IAAI,CAACC,UAAU,CAACU,SAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box } from '../../primitives';\nimport {\n  WarningIcon,\n  WarningTwoIcon,\n  InfoIcon,\n  CheckCircleIcon,\n} from '../../primitives/Icon/Icons';\nimport type { IAlertContext, IAlertIconProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { AlertContext } from './Context';\nimport { omitUndefined } from '../../../theme/tools/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AlertIcon = ({ children, ...props }: IAlertIconProps, ref?: any) => {\n  let newProps = usePropsResolution('AlertIcon', props);\n  newProps = omitUndefined(newProps);\n  const { status, _icon }: IAlertContext = React.useContext(AlertContext);\n  const getIcon = () => {\n    switch (status) {\n      case 'error':\n        return <WarningTwoIcon {..._icon} {...newProps} ref={ref} />;\n      case 'warning':\n        return <WarningIcon {..._icon} {...newProps} ref={ref} />;\n      case 'success':\n        return <CheckCircleIcon {..._icon} {...newProps} ref={ref} />;\n      default:\n        return <InfoIcon {..._icon} {...newProps} ref={ref} />;\n    }\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box>{children || getIcon()}</Box>;\n};\nexport default memo(forwardRef(AlertIcon));\n"]},"metadata":{},"sourceType":"module"}