{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _extends2 from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { AccordionContext, AccordionItemContext } from \"./Context\";\nimport Collapse from \"../Collapse\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar AccordionDetails = function AccordionDetails(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useThemeProps = useThemeProps('AccordionDetails', props),\n    newProps = _extends2({}, (_objectDestructuringEmpty(_useThemeProps), _useThemeProps));\n  var _React$useContext = React.useContext(AccordionItemContext),\n    isOpen = _React$useContext.isOpen;\n  var _React$useContext2 = React.useContext(AccordionContext),\n    AnimationProps = _React$useContext2.AnimationProps;\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Collapse, _extends({}, AnimationProps, newProps, {\n    isOpen: isOpen,\n    ref: ref\n  }), children);\n};\nexport default React.memo(React.forwardRef(AccordionDetails));","map":{"version":3,"sources":["AccordionDetails.tsx"],"names":["React","AccordionContext","AccordionItemContext","Collapse","useThemeProps","useHasResponsiveProps","AccordionDetails","children","props","ref","newProps","isOpen","useContext","AnimationProps","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,oBAA3B;AACA,OAAOC,QAAP;AAMA,SAASC,aAAT;AACA,SAASC,qBAAT;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,OAEpBG,GAFuB,EAGpB;EAAA,IAFDF,QAAF,QAAEA,QAAF;IAAeC,KAAAA;EAGf,qBAAwBJ,aAAa,CAAC,kBAAD,EAAqBI,KAArB,CAArC;IAAWE,QAAAA;EACX,wBAA+CV,KAAK,CAACY,UAANZ,CAC7CE,oBAD6CF,CAA/C;IAAQW,MAAAA,qBAAAA,MAAAA;EAGR,yBAAmDX,KAAK,CAACY,UAANZ,CACjDC,gBADiDD,CALhD;IAKKa,cAAAA,sBAAAA,cAAAA;;EAIR,IAAIR,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAcK,cAAd,EAAkCH,QAAlC,EAAA;IAA4C,MAAM,EAAEC,MAApD;IAA4D,GAAG,EAAEF;EAAjE,CAAA,CAAA,EACGF,QADH,CADF;AAKD,CApBD;AAsBA,eAAeP,KAAK,CAACc,IAANd,CAAWA,KAAK,CAACe,UAANf,CAAiBM,gBAAjBN,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { AccordionContext, AccordionItemContext } from './Context';\nimport Collapse from '../Collapse';\nimport type {\n  IAccordionDetailsProps,\n  IAccordionContextProps,\n  IAccordionItemContextProps,\n} from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionDetails = (\n  { children, ...props }: IAccordionDetailsProps,\n  ref?: any\n) => {\n  const { ...newProps } = useThemeProps('AccordionDetails', props);\n  const { isOpen }: IAccordionItemContextProps = React.useContext(\n    AccordionItemContext\n  );\n  const { AnimationProps }: IAccordionContextProps = React.useContext(\n    AccordionContext\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Collapse {...AnimationProps} {...newProps} isOpen={isOpen} ref={ref}>\n      {children}\n    </Collapse>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionDetails));\n"]},"metadata":{},"sourceType":"module"}