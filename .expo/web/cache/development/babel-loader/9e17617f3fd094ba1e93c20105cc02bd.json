{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"style\", \"isIncrement\", \"disablitityCheck\", \"_active\", \"_disabled\", \"isDisabled\", \"accessibilityLabel\", \"pressHandler\", \"iconColor\"],\n  _excluded3 = [\"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { VStack, Box } from \"../../primitives\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { NumberInputContext } from \"./Context\";\nimport { ChevronUpIcon, ChevronDownIcon } from \"../../primitives/Icon/Icons\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nexport var NBStepper = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useThemeProps = useThemeProps('NumberInputStepper', props),\n    style = _useThemeProps.style,\n    isIncrement = _useThemeProps.isIncrement,\n    disablitityCheck = _useThemeProps.disablitityCheck,\n    _active = _useThemeProps._active,\n    _disabled = _useThemeProps._disabled,\n    isDisabled = _useThemeProps.isDisabled,\n    accessibilityLabel = _useThemeProps.accessibilityLabel,\n    pressHandler = _useThemeProps.pressHandler,\n    iconColor = _useThemeProps.iconColor,\n    newProps = _objectWithoutProperties(_useThemeProps, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.2,\n    disabled: disablitityCheck || isDisabled,\n    onPress: pressHandler,\n    accessible: true,\n    accessibilityLabel: accessibilityLabel,\n    ref: ref\n  }, React.createElement(Box, _extends({}, newProps, _active, disablitityCheck || isDisabled ? _disabled : {}, {\n    borderColor: \"transparent\",\n    style: style,\n    opacity: disablitityCheck || isDisabled ? 0.4 : 1\n  }, Platform.OS === 'web' ? {\n    disabled: disablitityCheck || isDisabled,\n    cursor: disablitityCheck || isDisabled ? 'not-allowed' : 'auto'\n  } : {}), children || isIncrement ? React.createElement(ChevronUpIcon, {\n    color: iconColor\n  }) : React.createElement(ChevronDownIcon, {\n    color: iconColor\n  })));\n});\nvar NumberInputStepper = function NumberInputStepper(_ref2, ref) {\n  var children = _ref2.children,\n    props = _objectWithoutProperties(_ref2, _excluded3);\n  var _React$useContext = React.useContext(NumberInputContext),\n    numberInputStepper = _React$useContext.numberInputStepper,\n    setNumberInputStepper = _React$useContext.setNumberInputStepper;\n  React.useEffect(function () {\n    !numberInputStepper && setNumberInputStepper(React.createElement(VStack, _extends({}, props, {\n      ref: ref\n    }), children));\n  }, [numberInputStepper, setNumberInputStepper, props, children, ref]);\n  return null;\n};\nexport default React.memo(React.forwardRef(NumberInputStepper));","map":{"version":3,"sources":["NumberInputStepper.tsx"],"names":["React","VStack","Box","useThemeProps","NumberInputContext","ChevronUpIcon","ChevronDownIcon","useHasResponsiveProps","NBStepper","forwardRef","children","props","ref","style","isIncrement","disablitityCheck","_active","_disabled","isDisabled","accessibilityLabel","pressHandler","iconColor","newProps","OS","disabled","cursor","NumberInputStepper","numberInputStepper","setNumberInputStepper","useContext","useEffect","memo"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA;AAAA;AAEA,SAASC,MAAT,EAAiBC,GAAjB;AACA,SAASC,aAAT;AAEA,SAASC,kBAAT;AACA,SAASC,aAAT,EAAwBC,eAAxB;AACA,SAASC,qBAAT;AAEA,OAAO,IAAMC,SAAS,GAAG,KAAK,CAACC,UAAN,CACvB,gBAA8BG,GAA9B,EAA4C;EAAA,IAAzCF,QAAF,QAAEA,QAAF;IAAeC,KAAAA;EACd,qBAWIR,aAAa,CAAC,oBAAD,EAAuBQ,KAAvB,CAZyB;IAExCE,KADI,kBACJA,KADI;IAEJC,WAFI,kBAEJA,WAFI;IAGJC,gBAHI,kBAGJA,gBAHI;IAIJC,OAJI,kBAIJA,OAJI;IAKJC,SALI,kBAKJA,SALI;IAMJC,UANI,kBAMJA,UANI;IAOJC,kBAPI,kBAOJA,kBAPI;IAQJC,YARI,kBAQJA,YARI;IASJC,SATI,kBASJA,SATI;IAUDC,QAAAA;;EAGL,IAAIf,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA;IACE,aAAa,EAAE,GADjB;IAEE,QAAQ,EAAEI,gBAAgB,IAAIG,UAFhC;IAGE,OAAO,EAAEE,YAHX;IAIE,UAAU,EAAA,IAJZ;IAKE,kBAAkB,EAAED,kBALtB;IAME,GAAG,EAAEP;EANP,CAAA,EAQE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACMU,QADN,EAEMN,OAFN,EAGOD,gBAAgB,IAAIG,UAApBH,GAAiCE,SAAjCF,GAA6C,CAAA,CAHpD,EAAA;IAIE,WAAW,EAAC,aAJd;IAKE,KAAK,EAAEF,KALT;IAME,OAAO,EAAEE,gBAAgB,IAAIG,UAApBH,GAAiC,GAAjCA,GAAuC;EANlD,CAAA,EAOO,QAAQ,CAACQ,EAAT,KAAgB,KAAhB,GACD;IACEC,QAAQ,EAAET,gBAAgB,IAAIG,UADhC;IAEEO,MAAM,EAAEV,gBAAgB,IAAIG,UAApBH,GAAiC,aAAjCA,GAAiD;EAF3D,CADC,GAKD,CAAA,CAZN,CAAA,EAcG,QAAQ,IAAID,WAAZ,GACC,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA;IAAe,KAAK,EAAEO;EAAtB,CAAA,CADD,GAGC,KAAA,CAAA,aAAA,CAAC,eAAD,EAAA;IAAiB,KAAK,EAAEA;EAAxB,CAAA,CAjBJ,CARF,CADF;AA+BD,CAjDsB,CAAlB;AAoDP,IAAMK,kBAAkB,GAAG,SAArBA,kBAAkB,QAEtBd,GAFyB,EAGtB;EAAA,IAFDF,QAAF,SAAEA,QAAF;IAAeC,KAAAA;EAGf,wBAIyBX,KAAK,CAAC6B,UAAN7B,CAAiBI,kBAAjBJ,CAJzB;IAEE2B,kBAFI,qBAEJA,kBAFI;IAGJC,qBAAAA,qBAAAA,qBAAAA;EAGF5B,KAAK,CAAC8B,SAAN9B,CAAgB,YAAM;IACpB,CAAC2B,kBAAD,IACEC,qBAAqB,CACnB,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAYjB,KAAZ,EAAA;MAAmB,GAAG,EAAEC;IAAxB,CAAA,CAAA,EACGF,QADH,CADmB,CADvB;EAMD,CAPDV,EAOG,CAAC2B,kBAAD,EAAqBC,qBAArB,EAA4CjB,KAA5C,EAAmDD,QAAnD,EAA6DE,GAA7D,CAPHZ,CAAAA;EAQA,OAAO,IAAP;AACD,CAnBD;AAqBA,eAAeA,KAAK,CAAC+B,IAAN/B,CAAWA,KAAK,CAACS,UAANT,CAAiB0B,kBAAjB1B,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { VStack, Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { INumberInputSteppersProps, INumberInputContext } from './types';\nimport { NumberInputContext } from './Context';\nimport { ChevronUpIcon, ChevronDownIcon } from '../../primitives/Icon/Icons';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const NBStepper = React.forwardRef(\n  ({ children, ...props }: any, ref?: any) => {\n    const {\n      style,\n      isIncrement,\n      disablitityCheck,\n      _active,\n      _disabled,\n      isDisabled,\n      accessibilityLabel,\n      pressHandler,\n      iconColor,\n      ...newProps\n    } = useThemeProps('NumberInputStepper', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <TouchableOpacity\n        activeOpacity={0.2}\n        disabled={disablitityCheck || isDisabled}\n        onPress={pressHandler}\n        accessible\n        accessibilityLabel={accessibilityLabel}\n        ref={ref}\n      >\n        <Box\n          {...newProps}\n          {..._active}\n          {...(disablitityCheck || isDisabled ? _disabled : {})}\n          borderColor=\"transparent\"\n          style={style}\n          opacity={disablitityCheck || isDisabled ? 0.4 : 1}\n          {...(Platform.OS === 'web'\n            ? {\n                disabled: disablitityCheck || isDisabled,\n                cursor: disablitityCheck || isDisabled ? 'not-allowed' : 'auto',\n              }\n            : {})}\n        >\n          {children || isIncrement ? (\n            <ChevronUpIcon color={iconColor} />\n          ) : (\n            <ChevronDownIcon color={iconColor} />\n          )}\n        </Box>\n      </TouchableOpacity>\n    );\n  }\n);\n\nconst NumberInputStepper = (\n  { children, ...props }: INumberInputSteppersProps,\n  ref?: any\n) => {\n  const {\n    //@ts-ignore\n    numberInputStepper,\n    setNumberInputStepper,\n  }: INumberInputContext = React.useContext(NumberInputContext);\n\n  React.useEffect(() => {\n    !numberInputStepper &&\n      setNumberInputStepper(\n        <VStack {...props} ref={ref}>\n          {children}\n        </VStack>\n      );\n  }, [numberInputStepper, setNumberInputStepper, props, children, ref]);\n  return null;\n};\n\nexport default React.memo(React.forwardRef(NumberInputStepper));\n"]},"metadata":{},"sourceType":"module"}