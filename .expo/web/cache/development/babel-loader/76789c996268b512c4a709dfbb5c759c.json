{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useStyledSystemPropsResolver } from \"../useStyledSystemPropsResolver\";\nimport { useNativeBaseConfig } from \"../../core/NativeBaseContext\";\nimport { isResponsiveAnyProp } from \"../../theme/tools\";\nimport { useTheme } from \"../useTheme\";\nimport { useMemo } from 'react';\n\nimport stableHash from 'stable-hash';\nexport var useSx = function useSx() {\n  var isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  var theme = useTheme();\n  var Sx = function Sx(query) {\n    var StableHashQuery = stableHash(query);\n    var checkWarning = useMemo(function () {\n      return isResponsiveAnyProp(query, theme);\n    }, [StableHashQuery]);\n    if (isSSR && checkWarning) {\n      console.warn(\"useSx prop doesn't resolve responsive prop with SSR\");\n    }\n\n    var _useStyledSystemProps = useStyledSystemPropsResolver(query),\n      _useStyledSystemProps2 = _slicedToArray(_useStyledSystemProps, 3),\n      _style = _useStyledSystemProps2[0],\n      _restProps = _useStyledSystemProps2[1],\n      styleFromProps = _useStyledSystemProps2[2];\n    return styleFromProps;\n  };\n  return Sx;\n};","map":{"version":3,"sources":["index.ts"],"names":["useStyledSystemPropsResolver","useNativeBaseConfig","isResponsiveAnyProp","useTheme","useMemo","stableHash","useSx","isSSR","theme","Sx","query","StableHashQuery","checkWarning","console","warn","_style","_restProps","styleFromProps"],"mappings":";AAAA,SAASA,4BAAT;AACA,SAASC,mBAAT;AACA,SAASC,mBAAT;AACA,SAASC,QAAT;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AAGA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;EACzB,IAAMC,KAAK,GAAGN,mBAAmB,CAAC,4BAAD,CAAnBA,CAAkDM,KAAhE;EACA,IAAMC,KAAK,GAAGL,QAAQ,EAAtB;EACA,IAAMM,EAAE,GAAIC,SAAND,EAAE,CAAIC,KAAD,EAAwB;IACjC,IAAMC,eAAe,GAAGN,UAAU,CAACK,KAAD,CAAlC;IACA,IAAME,YAAY,GAAGR,OAAO,CAAC,YAAM;MACjC,OAAOF,mBAAmB,CAACQ,KAAD,EAAQF,KAAR,CADO;IAGlC,CAH2B,EAGzB,CAACG,eAAD,CAHyB,CAA5B;IAKA,IAAIJ,KAAK,IAAIK,YAAb,EAA2B;MACzBC,OAAO,CAACC,IAARD,CAAa,qDAAbA,CAAAA;IAR+B;;IAWjC,4BAA6Cb,4BAA4B,CACvEU,KADuE,CAAzE;MAAA;MAAOK,MAAD;MAASC,UAAT;MAAqBC,cAArB;IAIN,OAAOA,cAAP;EACD,CAhBD;EAiBA,OAAOR,EAAP;AACD,CArBM","sourcesContent":["import { useStyledSystemPropsResolver } from '../useStyledSystemPropsResolver';\nimport { useNativeBaseConfig } from '../../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../../theme/tools';\nimport { useTheme } from '../useTheme';\nimport { useMemo } from 'react';\n//@ts-ignore\nimport stableHash from 'stable-hash';\nimport type { StyledProps } from '../../theme/types';\n\nexport const useSx = () => {\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  const theme = useTheme();\n  const Sx = (query: StyledProps) => {\n    const StableHashQuery = stableHash(query);\n    const checkWarning = useMemo(() => {\n      return isResponsiveAnyProp(query, theme);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [StableHashQuery]);\n\n    if (isSSR && checkWarning) {\n      console.warn(\"useSx prop doesn't resolve responsive prop with SSR\");\n    }\n    // eslint-disable-next-line\n    const [_style, _restProps, styleFromProps] = useStyledSystemPropsResolver(\n      query\n    );\n\n    return styleFromProps;\n  };\n  return Sx;\n};\n"]},"metadata":{},"sourceType":"module"}