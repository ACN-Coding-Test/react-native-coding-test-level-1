{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"_current\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, memo } from 'react';\nimport { Icon } from \"../../primitives/Icon\";\nimport { BreadcrumbItemContext } from \"./Context\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps/usePropsResolution\";\n\nvar BreadcrumbIcon = function BreadcrumbIcon(props, ref) {\n  var _React$useContext = React.useContext(BreadcrumbItemContext),\n    isCurrent = _React$useContext.isCurrent;\n  var _usePropsResolution = usePropsResolution('BreadcrumbIcon', props),\n    children = _usePropsResolution.children,\n    _current = _usePropsResolution._current,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n  return React.createElement(Icon, _extends({\n    ref: ref\n  }, isCurrent && _current, resolvedProps), children);\n};\nexport default memo(forwardRef(BreadcrumbIcon));","map":{"version":3,"sources":["BreadcrumbIcon.tsx"],"names":["React","forwardRef","memo","Icon","BreadcrumbItemContext","usePropsResolution","BreadcrumbIcon","props","ref","isCurrent","useContext","children","_current","resolvedProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,SAASC,IAAT;AAEA,SAASC,qBAAT;AACA,SAASC,kBAAT;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAD,EAA8BC,GAA9B,EAA4C;EACjE,wBAA8CR,KAAK,CAACU,UAANV,CAC5CI,qBAD4CJ,CAA9C;IAAQS,SAAAA,qBAAAA,SAAAA;EAIR,0BAA+CJ,kBAAkB,CAC/D,gBAD+D,EAE/DE,KAF+D,CAAjE;IAAMI,QAAF,uBAAEA,QAAF;IAAYC,QAAZ,uBAAYA,QAAZ;IAAyBC,aAAAA;EAI7B,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA;IAAM,GAAG,EAAEL;EAAX,CAAA,EAAqBC,SAAS,IAAIG,QAAlC,EAAiDC,aAAjD,CAAA,EACGF,QADH,CADF;AAKD,CAdD;AAgBA,eAAeT,IAAI,CAACD,UAAU,CAACK,cAAD,CAAX,CAAnB","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Icon } from '../../primitives/Icon';\nimport type { IBreadcrumbItemContext, IBreadcrumbIconProps } from './types';\nimport { BreadcrumbItemContext } from './Context';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\n\n// Add breadcrumbIcon as child of breadcrumbItem for implementaion of isCurrent prop\nconst BreadcrumbIcon = (props: IBreadcrumbIconProps, ref?: any) => {\n  const { isCurrent }: IBreadcrumbItemContext = React.useContext(\n    BreadcrumbItemContext\n  );\n\n  let { children, _current, ...resolvedProps } = usePropsResolution(\n    'BreadcrumbIcon',\n    props\n  );\n  return (\n    <Icon ref={ref} {...(isCurrent && _current)} {...resolvedProps}>\n      {children}\n    </Icon>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbIcon));\n"]},"metadata":{},"sourceType":"module"}