{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"in\", \"placement\", \"overlay\", \"duration\", \"_overlay\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, memo } from 'react';\nimport Box from \"../../primitives/Box\";\nimport PresenceTransition from \"./PresenceTransition\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { Overlay } from \"../../primitives/Overlay\";\nimport { usePropsResolution } from \"../../../hooks/\";\nvar holderStyle = {\n  top: {\n    top: 0,\n    right: 0,\n    left: 0\n  },\n  right: {\n    right: 0,\n    top: 0,\n    bottom: 0\n  },\n  bottom: {\n    bottom: 0,\n    right: 0,\n    left: 0\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0\n  }\n};\nexport var Slide = memo(forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _usePropsResolution = usePropsResolution('Slide', props),\n    visible = _usePropsResolution.in,\n    placement = _usePropsResolution.placement,\n    overlay = _usePropsResolution.overlay,\n    duration = _usePropsResolution.duration,\n    _overlay = _usePropsResolution._overlay,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    containerOpacity = _React$useState2[0],\n    setContainerOpacity = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    size = _React$useState4[0],\n    setSize = _React$useState4[1];\n  var provideSize = function provideSize(layoutSize) {\n    if (placement === 'right' || placement === 'left') setSize(layoutSize.width);else setSize(layoutSize.height);\n    setContainerOpacity(1);\n  };\n  var transition = {\n    duration: duration\n  };\n  var animationStyle = {\n    top: {\n      initial: {\n        translateY: -size\n      },\n      animate: {\n        translateY: 0,\n        transition: transition\n      }\n    },\n    bottom: {\n      initial: {\n        translateY: size\n      },\n      animate: {\n        translateY: 0,\n        transition: transition\n      },\n      exit: {\n        translateY: size,\n        transition: transition\n      }\n    },\n    left: {\n      initial: {\n        translateX: -size\n      },\n      animate: {\n        translateX: 0,\n        transition: transition\n      }\n    },\n    right: {\n      initial: {\n        translateX: size\n      },\n      animate: {\n        translateX: 0,\n        transition: transition\n      }\n    }\n  };\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  var slideComponent = React.createElement(PresenceTransition, _extends({\n    visible: visible\n  }, animationStyle[placement], {\n    style: [{\n      position: 'absolute'\n    }, holderStyle[placement], {\n      height: '100%'\n    }]\n  }), React.createElement(Box, _extends({}, resolvedProps, {\n    opacity: containerOpacity,\n    ref: ref,\n    onLayout: function onLayout(e) {\n      return provideSize(e.nativeEvent.layout);\n    }\n  }), children));\n  if (overlay) {\n    return React.createElement(React.Fragment, null, React.createElement(Overlay, _extends({\n      isKeyboardDismissable: false\n    }, _overlay), slideComponent));\n  } else {\n    return slideComponent;\n  }\n}));\nexport default Slide;","map":{"version":3,"sources":["Slide.tsx"],"names":["React","forwardRef","memo","Box","PresenceTransition","useHasResponsiveProps","Overlay","usePropsResolution","holderStyle","top","right","left","bottom","Slide","children","props","ref","in","visible","placement","overlay","duration","_overlay","resolvedProps","containerOpacity","setContainerOpacity","useState","size","setSize","provideSize","layoutSize","width","height","transition","animationStyle","initial","translateY","animate","exit","translateX","slideComponent","position","e","nativeEvent","layout"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Box from '../../primitives/Box';\nimport type { ISlideProps } from './types';\nimport PresenceTransition from './PresenceTransition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { Overlay } from '../../primitives/Overlay';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst holderStyle: any = {\n  top: {\n    top: 0,\n    right: 0,\n    left: 0,\n  },\n  right: {\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n  bottom: {\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n  },\n};\n\nexport const Slide = memo(\n  forwardRef(({ children, ...props }: ISlideProps, ref: any) => {\n    const {\n      in: visible,\n      placement,\n      overlay,\n      duration,\n      _overlay,\n      ...resolvedProps\n    } = usePropsResolution('Slide', props);\n    const [containerOpacity, setContainerOpacity] = React.useState(0);\n    const [size, setSize] = React.useState(0);\n    const provideSize = (layoutSize: any) => {\n      if (placement === 'right' || placement === 'left')\n        setSize(layoutSize.width);\n      else setSize(layoutSize.height);\n      setContainerOpacity(1);\n    };\n\n    const transition = { duration };\n\n    const animationStyle: any = {\n      top: {\n        initial: {\n          translateY: -size,\n        },\n        animate: {\n          translateY: 0,\n          transition,\n        },\n      },\n      bottom: {\n        initial: {\n          translateY: size,\n        },\n        animate: {\n          translateY: 0,\n          transition,\n        },\n        exit: {\n          translateY: size,\n          transition,\n        },\n      },\n      left: {\n        initial: {\n          translateX: -size,\n        },\n        animate: {\n          translateX: 0,\n          transition,\n        },\n      },\n      right: {\n        initial: {\n          translateX: size,\n        },\n        animate: {\n          translateX: 0,\n          transition,\n        },\n      },\n    };\n\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n\n    const slideComponent = (\n      <PresenceTransition\n        visible={visible}\n        {...animationStyle[placement]}\n        style={[\n          { position: 'absolute' },\n          holderStyle[placement],\n          { height: '100%' },\n        ]}\n      >\n        <Box\n          {...resolvedProps}\n          opacity={containerOpacity}\n          ref={ref}\n          onLayout={(e) => provideSize(e.nativeEvent.layout)}\n        >\n          {children}\n        </Box>\n      </PresenceTransition>\n    );\n\n    if (overlay) {\n      return (\n        <>\n          <Overlay isKeyboardDismissable={false} {..._overlay}>\n            {slideComponent}\n          </Overlay>\n        </>\n      );\n    } else {\n      return slideComponent;\n    }\n  })\n);\n\nexport default Slide;\n"]},"metadata":{},"sourceType":"module"}