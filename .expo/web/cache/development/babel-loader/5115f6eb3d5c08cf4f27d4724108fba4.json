{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _INITIAL_PROP_SPECIFI;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport merge from 'lodash.merge';\nvar SPECIFICITY_100 = 100;\nvar SPECIFICITY_70 = 70;\nvar SPECIFICITY_60 = 60;\nvar SPECIFICITY_55 = 55;\nvar SPECIFICITY_50 = 50;\nvar SPECIFICITY_40 = 40;\nvar SPECIFICITY_30 = 30;\nvar SPECIFICITY_10 = 10;\nvar SPECIFICITY_1 = 1;\nvar specificityPrecedence = [SPECIFICITY_100, SPECIFICITY_70, SPECIFICITY_60, SPECIFICITY_55, SPECIFICITY_50, SPECIFICITY_40, SPECIFICITY_30, SPECIFICITY_10, SPECIFICITY_1];\nvar INITIAL_PROP_SPECIFICITY = (_INITIAL_PROP_SPECIFI = {}, _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_100, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_70, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_60, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_50, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_55, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_40, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_30, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_10, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_1, 0), _INITIAL_PROP_SPECIFI);\nvar pseudoPropsMap = {\n  _web: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _ios: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _android: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _light: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _dark: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30\n  },\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30\n  },\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100\n  }\n};\nexport var compareSpecificity = function compareSpecificity(exisiting, upcoming, ignorebaseTheme)\n{\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  var condition = ignorebaseTheme ? specificityPrecedence.length - 1 : specificityPrecedence.length;\n  for (var index = 0; index < condition; index++) {\n    if (exisiting[specificityPrecedence[index]] > upcoming[specificityPrecedence[index]]) {\n      return false;\n    } else if (exisiting[specificityPrecedence[index]] < upcoming[specificityPrecedence[index]]) {\n      return true;\n    }\n  }\n  return true;\n};\nvar shouldResolvePseudoProp = function shouldResolvePseudoProp(_ref) {\n  var property = _ref.property,\n    state = _ref.state,\n    platform = _ref.platform,\n    colormode = _ref.colormode;\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === \"_\".concat(platform);\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === \"_\".concat(colormode);\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    return state[pseudoPropsMap[property].respondTo];\n  } else {\n    return false;\n  }\n};\nvar simplifyProps = function simplifyProps(_ref2) {\n  var props = _ref2.props,\n    colormode = _ref2.colormode,\n    platform = _ref2.platform,\n    state = _ref2.state,\n    currentSpecificity = _ref2.currentSpecificity,\n    previouslyFlattenProps = _ref2.previouslyFlattenProps;\n  var flattenProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var specificityMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var priority = arguments.length > 3 ? arguments[3] : undefined;\n  for (var property in props) {\n    var _pseudoPropsMap$prope, _pseudoPropsMap$prope2;\n\n    var propertySpecity = currentSpecificity ? _objectSpread({}, currentSpecificity) : _objectSpread(_objectSpread({}, INITIAL_PROP_SPECIFICITY), {}, _defineProperty({}, SPECIFICITY_1, priority));\n    if (state[(_pseudoPropsMap$prope = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope === void 0 ? void 0 : _pseudoPropsMap$prope.respondTo] || ['_dark', '_light', '_web', '_ios', '_android'].includes(property)) {\n      if (shouldResolvePseudoProp({\n        property: property,\n        state: state,\n        platform: platform,\n        colormode: colormode\n      })) {\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps({\n          props: props[property],\n          colormode: colormode,\n          platform: platform,\n          state: state,\n          currentSpecificity: propertySpecity,\n          previouslyFlattenProps: previouslyFlattenProps\n        }, flattenProps, specificityMap, priority);\n      }\n    } else if (state[(_pseudoPropsMap$prope2 = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope2 === void 0 ? void 0 : _pseudoPropsMap$prope2.respondTo] === undefined) {\n      if (property.startsWith('_')) {\n        if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n          specificityMap[property] = propertySpecity;\n\n          flattenProps[property] = merge({}, flattenProps[property], props[property]);\n        } else {\n          flattenProps[property] = merge({}, props[property], flattenProps[property]);\n        }\n      } else {\n        if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n          specificityMap[property] = propertySpecity;\n\n          flattenProps[property] = props[property];\n        }\n      }\n    }\n  }\n};\nexport var propsFlattener = function propsFlattener(_ref3, priority) {\n  var props = _ref3.props,\n    colormode = _ref3.colormode,\n    platform = _ref3.platform,\n    state = _ref3.state,\n    currentSpecificityMap = _ref3.currentSpecificityMap,\n    previouslyFlattenProps = _ref3.previouslyFlattenProps;\n  var flattenProps = {};\n  for (var property in props) {\n    var _pseudoPropsMap$prope3;\n    if (state[(_pseudoPropsMap$prope3 = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope3 === void 0 ? void 0 : _pseudoPropsMap$prope3.respondTo] === undefined && property.startsWith('_')) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n  var specificityMap = currentSpecificityMap || {};\n\n  simplifyProps({\n    props: props,\n    colormode: colormode,\n    platform: platform,\n    state: state,\n    currentSpecificityMap: currentSpecificityMap,\n    previouslyFlattenProps: previouslyFlattenProps\n  }, flattenProps, specificityMap, priority);\n  return [flattenProps, specificityMap];\n};","map":{"version":3,"sources":["propsFlattenerTest.tsx"],"names":["merge","SPECIFICITY_100","SPECIFICITY_70","SPECIFICITY_60","SPECIFICITY_55","SPECIFICITY_50","SPECIFICITY_40","SPECIFICITY_30","SPECIFICITY_10","SPECIFICITY_1","specificityPrecedence","INITIAL_PROP_SPECIFICITY","pseudoPropsMap","_web","dependentOn","priority","_ios","_android","_light","_dark","_indeterminate","respondTo","_checked","_readOnly","_invalid","_focus","_focusVisible","_hover","_pressed","_disabled","compareSpecificity","exisiting","upcoming","ignorebaseTheme","condition","length","index","shouldResolvePseudoProp","property","state","platform","colormode","simplifyProps","props","currentSpecificity","previouslyFlattenProps","flattenProps","specificityMap","propertySpecity","includes","undefined","startsWith","propsFlattener","currentSpecificityMap"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge';\n\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30;\nconst SPECIFICITY_10 = 10;\nconst SPECIFICITY_1 = 1;\nconst specificityPrecedence = [\n  SPECIFICITY_100,\n  SPECIFICITY_70,\n  SPECIFICITY_60,\n  SPECIFICITY_55,\n  SPECIFICITY_50,\n  SPECIFICITY_40,\n  SPECIFICITY_30,\n  SPECIFICITY_10,\n  SPECIFICITY_1,\n];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_10]: 0,\n  [SPECIFICITY_1]: 0,\n};\n\nconst pseudoPropsMap: any = {\n  _web: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _ios: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _android: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n\n  _light: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n  _dark: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30,\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40,\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50,\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55,\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60,\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70,\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100,\n  },\n};\n\nexport const compareSpecificity = (\n  exisiting: any,\n  upcoming: any,\n  ignorebaseTheme?: boolean\n  // property?: any\n) => {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme\n    ? specificityPrecedence.length - 1\n    : specificityPrecedence.length;\n  for (let index = 0; index < condition; index++) {\n    if (\n      exisiting[specificityPrecedence[index]] >\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return false;\n    } else if (\n      exisiting[specificityPrecedence[index]] <\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return true;\n    }\n  }\n  return true;\n};\n\nconst shouldResolvePseudoProp = ({\n  property,\n  state,\n  platform,\n  colormode,\n}: any) => {\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === `_${platform}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === `_${colormode}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    return state[pseudoPropsMap[property].respondTo];\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificity,\n    previouslyFlattenProps,\n  }: any,\n  flattenProps: any = {},\n  specificityMap: any = {},\n  priority: number\n) => {\n  for (const property in props) {\n    // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n    const propertySpecity = currentSpecificity\n      ? { ...currentSpecificity }\n      : {\n          ...INITIAL_PROP_SPECIFICITY,\n          [SPECIFICITY_1]: priority,\n        };\n\n    if (\n      state[pseudoPropsMap[property]?.respondTo] ||\n      ['_dark', '_light', '_web', '_ios', '_android'].includes(property)\n    ) {\n      if (shouldResolvePseudoProp({ property, state, platform, colormode })) {\n        propertySpecity[pseudoPropsMap[property].priority]++;\n\n        simplifyProps(\n          {\n            props: props[property],\n            colormode,\n            platform,\n            state,\n            currentSpecificity: propertySpecity,\n            previouslyFlattenProps: previouslyFlattenProps,\n          },\n          flattenProps,\n          specificityMap,\n          priority\n        );\n      }\n    } else if (state[pseudoPropsMap[property]?.respondTo] === undefined) {\n      if (property.startsWith('_')) {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          specificityMap[property] = propertySpecity;\n          // merging internal props (like, _text, _checked, ...)\n          flattenProps[property] = merge(\n            {},\n            flattenProps[property],\n            props[property]\n          );\n        } else {\n          flattenProps[property] = merge(\n            {},\n            props[property],\n            flattenProps[property]\n          );\n        }\n      } else {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          specificityMap[property] = propertySpecity;\n          // replacing simple props (like, p, m, bg, color, ...)\n          flattenProps[property] = props[property];\n        }\n      }\n    }\n  }\n};\n\nexport const propsFlattener = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n  }: any,\n  priority: number\n) => {\n  const flattenProps: any = {};\n\n  for (const property in props) {\n    if (\n      state[pseudoPropsMap[property]?.respondTo] === undefined &&\n      property.startsWith('_')\n    ) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {};\n\n  // STEP 1.a (if): Check weather it should be recursively resolved\n  // NOTE: (when true) recursively resolved it\n  // STEP 1.b (else if): Check specificty\n  // STEP 1.b.i: Check for pseudo props\n  // NOTE: (when true) Merge it.\n  // NOTE: (when false) Replace it.\n\n  simplifyProps(\n    {\n      props,\n      colormode,\n      platform,\n      state,\n      currentSpecificityMap,\n      previouslyFlattenProps,\n    },\n    flattenProps,\n    specificityMap,\n    priority\n  );\n\n  return [flattenProps, specificityMap];\n};\n"]},"metadata":{},"sourceType":"module"}