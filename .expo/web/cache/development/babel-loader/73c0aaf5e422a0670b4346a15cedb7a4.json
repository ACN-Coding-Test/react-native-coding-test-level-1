{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef, useEffect, useContext } from 'react';\nimport { usePropsResolution } from \"../../../hooks\";\nimport { default as Box } from \"../../primitives/Box\";\nimport { PopoverContext } from \"./PopoverContext\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar PopoverHeader = function PopoverHeader(props, ref) {\n  var resolvedProps = usePropsResolution('PopoverHeader', props);\n  var _useContext = useContext(PopoverContext),\n    setHeaderMounted = _useContext.setHeaderMounted,\n    headerId = _useContext.headerId;\n  useEffect(function () {\n    setHeaderMounted(true);\n    return function () {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({\n    nativeID: headerId\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\nexport default memo(forwardRef(PopoverHeader));","map":{"version":3,"sources":["PopoverHeader.tsx"],"names":["React","memo","forwardRef","useEffect","useContext","usePropsResolution","default","Box","PopoverContext","useHasResponsiveProps","PopoverHeader","props","ref","resolvedProps","setHeaderMounted","headerId"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,kBAAT;AACA,SAASC,OAAO,IAAIC,GAApB;AACA,SAASC,cAAT;AACA,SAASC,qBAAT;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAD,EAAmBC,GAAnB,EAAiC;EACrD,IAAMC,aAAa,GAAGR,kBAAkB,CAAC,eAAD,EAAkBM,KAAlB,CAAxC;EACA,kBAAuCP,UAAU,CAACI,cAAD,CAAjD;IAAQM,gBAAF,eAAEA,gBAAF;IAAoBC,QAAAA,eAAAA,QAAAA;EAE1BZ,SAAS,CAAC,YAAM;IACdW,gBAAgB,CAAC,IAAD,CAAhBA;IACA,OAAO,YAAM;MACXA,gBAAgB,CAAC,KAAD,CAAhBA;IACD,CAFD;EAGD,CALQ,EAKN,CAACA,gBAAD,CALM,CAJ4C;;EAWrD,IAAIL,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OAAO,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA,QAAA,CAAA;IAAK,QAAQ,EAAEI;EAAf,CAAA,EAA6BF,aAA7B,EAAA;IAA4C,GAAG,EAAED;EAAjD,CAAA,CAAA,CAAP;AACD,CAfD;AAiBA,eAAeX,IAAI,CAACC,UAAU,CAACQ,aAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef, useEffect, useContext } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverHeader', props);\n  const { setHeaderMounted, headerId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setHeaderMounted(true);\n    return () => {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={headerId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverHeader));\n"]},"metadata":{},"sourceType":"module"}