{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isDisabled\", \"onPress\", \"textValue\"],\n  _excluded2 = [\"_text\", \"_stack\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, memo } from 'react';\nimport Text from \"../../primitives/Text\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { Pressable } from \"../../primitives/Pressable\";\nimport { MenuContext } from \"./MenuContext\";\nimport { useMenuItem } from \"./useMenu\";\nimport { mergeRefs } from \"../../../utils\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { HStack } from \"../../primitives\";\nvar MenuItem = function MenuItem(_ref, ref) {\n  var children = _ref.children,\n    isDisabled = _ref.isDisabled,\n    _onPress = _ref.onPress,\n    textValue = _ref.textValue,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useContext = React.useContext(MenuContext),\n    closeOnSelect = _React$useContext.closeOnSelect,\n    onClose = _React$useContext.onClose;\n  var menuItemRef = React.useRef(null);\n  var mergedRef = mergeRefs([menuItemRef, ref]);\n  var _usePropsResolution = usePropsResolution('MenuItem', props, {\n      isDisabled: isDisabled\n    }, {\n      cascadePseudoProps: true\n    }),\n    _text = _usePropsResolution._text,\n    _stack = _usePropsResolution._stack,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    textContent = _React$useState2[0],\n    setTextContent = _React$useState2[1];\n  React.useEffect(function () {\n    var menuItem = menuItemRef.current;\n    if (menuItem) {\n      var _menuItem$textContent;\n      setTextContent(((_menuItem$textContent = menuItem.textContent) !== null && _menuItem$textContent !== void 0 ? _menuItem$textContent : '').trim());\n    }\n  }, [children]);\n  var menuItemProps = useMenuItem({\n    textValue: textValue !== null && textValue !== void 0 ? textValue : textContent,\n    ref: menuItemRef\n  });\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Pressable, _extends({}, menuItemProps, resolvedProps, {\n    ref: mergedRef,\n    disabled: isDisabled,\n    accessibilityState: {\n      disabled: isDisabled\n    },\n    onPress: function onPress(e) {\n      if (!isDisabled) {\n        _onPress && _onPress(e);\n        if (closeOnSelect) {\n          onClose && onClose();\n        }\n      }\n    }\n  }), React.createElement(HStack, _stack, React.Children.map(children, function (child, index) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return React.createElement(Text, _extends({\n        key: \"menu-item-\".concat(index)\n      }, _text), child);\n    } else {\n      return child;\n    }\n  })));\n};\nexport default memo(forwardRef(MenuItem));","map":{"version":3,"sources":["MenuItem.tsx"],"names":["React","forwardRef","memo","Text","usePropsResolution","Pressable","MenuContext","useMenuItem","mergeRefs","useHasResponsiveProps","HStack","MenuItem","children","isDisabled","onPress","textValue","props","ref","closeOnSelect","onClose","useContext","menuItemRef","useRef","mergedRef","_text","_stack","resolvedProps","cascadePseudoProps","textContent","setTextContent","useState","useEffect","menuItem","current","trim","menuItemProps","disabled","e","Children","map","child","index"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../../primitives/Pressable';\nimport type { IMenuItemProps } from './types';\nimport { MenuContext } from './MenuContext';\nimport { useMenuItem } from './useMenu';\nimport { mergeRefs } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { HStack } from '../../primitives';\n\nconst MenuItem = (\n  { children, isDisabled, onPress, textValue, ...props }: IMenuItemProps,\n  ref: any\n) => {\n  const { closeOnSelect, onClose } = React.useContext(MenuContext);\n  const menuItemRef = React.useRef<any>(null);\n  const mergedRef = mergeRefs([menuItemRef, ref]);\n  const { _text, _stack, ...resolvedProps } = usePropsResolution(\n    'MenuItem',\n    props,\n    {\n      isDisabled,\n    },\n    {\n      cascadePseudoProps: true,\n    }\n  );\n  const [textContent, setTextContent] = React.useState('');\n  React.useEffect(() => {\n    const menuItem = menuItemRef.current;\n    if (menuItem) {\n      setTextContent((menuItem.textContent ?? '').trim());\n    }\n  }, [children]);\n\n  const menuItemProps = useMenuItem({\n    textValue: textValue ?? textContent,\n    ref: menuItemRef,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      {...menuItemProps}\n      {...resolvedProps}\n      ref={mergedRef}\n      disabled={isDisabled}\n      accessibilityState={{\n        disabled: isDisabled,\n      }}\n      onPress={(e: any) => {\n        if (!isDisabled) {\n          onPress && onPress(e);\n          if (closeOnSelect) {\n            onClose && onClose();\n          }\n        }\n      }}\n    >\n      <HStack {..._stack}>\n        {React.Children.map(children, (child, index: any) => {\n          if (typeof child === 'string' || typeof child === 'number') {\n            return (\n              <Text key={`menu-item-${index}`} {..._text}>\n                {child}\n              </Text>\n            );\n          } else {\n            return child;\n          }\n        })}\n      </HStack>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(MenuItem));\n"]},"metadata":{},"sourceType":"module"}