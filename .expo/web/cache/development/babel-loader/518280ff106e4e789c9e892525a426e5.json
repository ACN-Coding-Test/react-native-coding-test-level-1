{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MaskedView from \"../MaskedView\";\nimport PlatformPressable from \"../PlatformPressable\";\nexport default function HeaderBackButton(_ref) {\n  var disabled = _ref.disabled,\n    allowFontScaling = _ref.allowFontScaling,\n    backImage = _ref.backImage,\n    label = _ref.label,\n    labelStyle = _ref.labelStyle,\n    labelVisible = _ref.labelVisible,\n    onLabelLayout = _ref.onLabelLayout,\n    onPress = _ref.onPress,\n    pressColor = _ref.pressColor,\n    pressOpacity = _ref.pressOpacity,\n    screenLayout = _ref.screenLayout,\n    customTintColor = _ref.tintColor,\n    titleLayout = _ref.titleLayout,\n    _ref$truncatedLabel = _ref.truncatedLabel,\n    truncatedLabel = _ref$truncatedLabel === void 0 ? 'Back' : _ref$truncatedLabel,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label && label !== 'Back' ? label + \", back\" : 'Go back' : _ref$accessibilityLab,\n    testID = _ref.testID,\n    style = _ref.style;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var _React$useState = React.useState(undefined),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    initialLabelWidth = _React$useState2[0],\n    setInitialLabelWidth = _React$useState2[1];\n  var tintColor = customTintColor !== undefined ? customTintColor : Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n  var handleLabelLayout = function handleLabelLayout(e) {\n    onLabelLayout === null || onLabelLayout === void 0 ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n  var shouldTruncateLabel = function shouldTruncateLabel() {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n  var renderBackImage = function renderBackImage() {\n    if (backImage) {\n      return backImage({\n        tintColor: tintColor\n      });\n    } else {\n      return React.createElement(Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor: tintColor\n        }],\n        source: require(\"../assets/back-icon.png\"),\n        fadeDuration: 0\n      });\n    }\n  };\n  var renderLabel = function renderLabel() {\n    var leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n    var labelElement = React.createElement(View, {\n      style: screenLayout ?\n      [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null\n    }, React.createElement(Animated.Text, {\n      accessible: false,\n      onLayout:\n      leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling\n    }, leftLabelText));\n    if (backImage || Platform.OS !== 'ios') {\n      return labelElement;\n    }\n    return React.createElement(MaskedView, {\n      maskElement: React.createElement(View, {\n        style: styles.iconMaskContainer\n      }, React.createElement(Image, {\n        source: require(\"../assets/back-icon-mask.png\"),\n        style: styles.iconMask\n      }), React.createElement(View, {\n        style: styles.iconMaskFillerRect\n      }))\n    }, labelElement);\n  };\n  var handlePress = function handlePress() {\n    return onPress && requestAnimationFrame(onPress);\n  };\n  return React.createElement(PlatformPressable, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColor,\n    pressOpacity: pressOpacity,\n    android_ripple: {\n      borderless: true\n    },\n    style: [styles.container, disabled && styles.disabled, style],\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    })\n  }, React.createElement(React.Fragment, null, renderBackImage(), renderLabel()));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth\n  }, Platform.select({\n    ios: null,\n    default: {\n      marginVertical: 3,\n      marginHorizontal: 11\n    }\n  })),\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.getConstants().isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.getConstants().isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.getConstants().isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"sources":["HeaderBackButton.tsx"],"names":["useTheme","React","MaskedView","PlatformPressable","HeaderBackButton","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","onLabelLayout","onPress","pressColor","pressOpacity","screenLayout","tintColor","customTintColor","titleLayout","truncatedLabel","accessibilityLabel","testID","style","colors","initialLabelWidth","setInitialLabelWidth","useState","undefined","select","ios","primary","default","text","handleLabelLayout","e","nativeEvent","layout","x","width","shouldTruncateLabel","renderBackImage","styles","icon","Boolean","iconWithLabel","require","renderLabel","leftLabelText","labelElement","labelWrapper","minWidth","color","Platform","OS","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","requestAnimationFrame","borderless","container","top","right","bottom","left","create","alignItems","flexDirection","StyleSheet","hairlineWidth","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","getConstants","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nimport type { HeaderBackButtonProps } from '../types';\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible,\n  onLabelLayout,\n  onPress,\n  pressColor,\n  pressOpacity,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  testID,\n  style,\n}: HeaderBackButtonProps) {\n  const { colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <PlatformPressable\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      testID={testID}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      android_ripple={{ borderless: true }}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth, // Avoid collapsing when title is long\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}