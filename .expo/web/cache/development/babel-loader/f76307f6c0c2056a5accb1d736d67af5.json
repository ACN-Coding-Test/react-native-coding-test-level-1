{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"debug\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { useStyledSystemPropsResolver } from \"../hooks/\";\nexport var makeStyledComponent = function makeStyledComponent(Comp) {\n  return React.forwardRef(function (_ref, ref) {\n    var debug = _ref.debug,\n      props = _objectWithoutProperties(_ref, _excluded);\n    var _useStyledSystemProps = useStyledSystemPropsResolver(props),\n      _useStyledSystemProps2 = _slicedToArray(_useStyledSystemProps, 2),\n      style = _useStyledSystemProps2[0],\n      restProps = _useStyledSystemProps2[1];\n    if (process.env.NODE_ENV === 'development' && debug) {\n      console.log(\"%cstyleSystem\", 'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;');\n\n      console.log('%c props: ', 'color: #4ade80; font-weight: 700;', props);\n\n      console.log('%c style: ', 'color: #22d3ee; font-weight: 700;', style);\n\n      console.log('%c restProps: ', 'color: #22d3ee; font-weight: 700;', restProps);\n    }\n    return React.createElement(Comp, _extends({}, restProps, {\n      style: style,\n      ref: ref\n    }), props.children);\n  });\n};","map":{"version":3,"sources":["styled.tsx"],"names":["React","useStyledSystemPropsResolver","makeStyledComponent","Comp","forwardRef","debug","props","ref","style","restProps","process","env","NODE_ENV","console","log","children"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,4BAAT;AAEA,OAAO,IAAMC,mBAAmB,GAAIC,SAAvBD,mBAAmB,CAAIC,IAAD,EAAe;EAChD,OAAO,KAAK,CAACC,UAAN,CAAiB,gBAA2BG,GAA3B,EAAwC;IAAA,IAArCF,KAAF,QAAEA,KAAF;MAAYC,KAAAA;IACnC,4BAA2BL,4BAA4B,CAACK,KAAD,CAAvD;MAAA;MAAOE,KAAD;MAAQC,SAAR;IACN,IAAIC,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,aAAzBA,IAA0CL,KAA9C,EAAqD;MAEnDQ,OAAO,CAACC,GAARD,CAAAA,eAAAA,EAEE,0EAFFA,CAAAA;;MAKAA,OAAO,CAACC,GAARD,CAAY,YAAZA,EAA0B,mCAA1BA,EAA+DP,KAA/DO,CAAAA;;MAEAA,OAAO,CAACC,GAARD,CAAY,YAAZA,EAA0B,mCAA1BA,EAA+DL,KAA/DK,CAAAA;;MAEAA,OAAO,CAACC,GAARD,CACE,gBADFA,EAEE,mCAFFA,EAGEJ,SAHFI,CAAAA;IAKD;IACD,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAUJ,SAAV,EAAA;MAAqB,KAAK,EAAED,KAA5B;MAAmC,GAAG,EAAED;IAAxC,CAAA,CAAA,EACGD,KAAK,CAACS,QADT,CADF;EAKD,CAxBM,CAAP;AAyBD,CA1BM","sourcesContent":["import React from 'react';\nimport { useStyledSystemPropsResolver } from '../hooks/';\n\nexport const makeStyledComponent = (Comp: any) => {\n  return React.forwardRef(({ debug, ...props }: any, ref: any) => {\n    const [style, restProps] = useStyledSystemPropsResolver(props);\n    if (process.env.NODE_ENV === 'development' && debug) {\n      /* eslint-disable-next-line */\n      console.log(\n        `%cstyleSystem`,\n        'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;'\n      );\n      /* eslint-disable-next-line */\n      console.log('%c props: ', 'color: #4ade80; font-weight: 700;', props);\n      /* eslint-disable-next-line */\n      console.log('%c style: ', 'color: #22d3ee; font-weight: 700;', style);\n      /* eslint-disable-next-line */\n      console.log(\n        '%c restProps: ',\n        'color: #22d3ee; font-weight: 700;',\n        restProps\n      );\n    }\n    return (\n      <Comp {...restProps} style={style} ref={ref}>\n        {props.children}\n      </Comp>\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}