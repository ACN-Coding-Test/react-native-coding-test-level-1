{"ast":null,"code":"import { useTheme } from \"./useTheme\";\nimport get from 'lodash.get';\nexport function useToken(property, token, fallback) {\n  var theme = useTheme();\n  if (Array.isArray(token)) {\n    var fallbackArr = [];\n    if (fallback) {\n      fallbackArr = Array.isArray(fallback) ? fallback : [fallback];\n    }\n    return token.map(function (innerToken, index) {\n      var _fallbackArr$index;\n      var path = \"\".concat(property, \".\").concat(innerToken);\n      return get(theme, path, (_fallbackArr$index = fallbackArr[index]) !== null && _fallbackArr$index !== void 0 ? _fallbackArr$index : innerToken);\n    });\n  }\n  var path = \"\".concat(property, \".\").concat(token);\n  return get(theme, path, fallback !== null && fallback !== void 0 ? fallback : token);\n}","map":{"version":3,"sources":["useToken.ts"],"names":["useTheme","get","useToken","property","token","fallback","theme","Array","isArray","fallbackArr","map","innerToken","index","path"],"mappings":"AAAA,SAASA,QAAT;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,SAASC,QAAT,CACLC,QADK,EAELC,KAFK,EAGLC,QAHK,EAIL;EACA,IAAMC,KAAK,GAAGN,QAAQ,EAAtB;EACA,IAAIO,KAAK,CAACC,OAAND,CAAcH,KAAdG,CAAJ,EAA0B;IACxB,IAAIE,WAAgB,GAAG,EAAvB;IACA,IAAIJ,QAAJ,EAAc;MACZI,WAAW,GAAGF,KAAK,CAACC,OAAND,CAAcF,QAAdE,CAAAA,GAA0BF,QAA1BE,GAAqC,CAACF,QAAD,CAAnDI;IACD;IACD,OAAO,KAAK,CAACC,GAAN,CAAU,UAACC,UAAD,EAAaC,KAAb,EAAuB;MAAA,IAAA,kBAAA;MACtC,IAAMC,IAAI,GAAA,EAAA,CAAA,MAAA,CAAMV,QAAN,EAAA,GAAA,CAAA,CAAA,MAAA,CAAkBQ,UAAlB,CAAV;MACA,OAAOV,GAAG,CAACK,KAAD,EAAQO,IAAR,EAAA,CAAA,kBAAA,GAAcJ,WAAW,CAACG,KAAD,CAAzB,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,kBAAA,GAAoCD,UAApC,CAAV;IACD,CAHM,CAAP;EAID;EAED,IAAME,IAAI,GAAA,EAAA,CAAA,MAAA,CAAMV,QAAN,EAAA,GAAA,CAAA,CAAA,MAAA,CAAkBC,KAAlB,CAAV;EACA,OAAOH,GAAG,CAACK,KAAD,EAAQO,IAAR,EAAcR,QAAd,KAAA,IAAA,IAAcA,QAAd,KAAA,KAAA,CAAA,GAAcA,QAAd,GAA0BD,KAA1B,CAAV;AACD","sourcesContent":["import { useTheme } from './useTheme';\nimport get from 'lodash.get';\n\nexport function useToken<T extends string | number>(\n  property: string,\n  token: T | T[],\n  fallback?: T | T[]\n) {\n  const theme = useTheme();\n  if (Array.isArray(token)) {\n    let fallbackArr: T[] = [];\n    if (fallback) {\n      fallbackArr = Array.isArray(fallback) ? fallback : [fallback];\n    }\n    return token.map((innerToken, index) => {\n      const path = `${property}.${innerToken}`;\n      return get(theme, path, fallbackArr[index] ?? innerToken);\n    });\n  }\n\n  const path = `${property}.${token}`;\n  return get(theme, path, fallback ?? token);\n}\n"]},"metadata":{},"sourceType":"module"}