{"ast":null,"code":"export default function findFocusedRoute(state) {\n  var _current2, _current$index3, _current3;\n  var current = state;\n  while (((_current = current) === null || _current === void 0 ? void 0 : _current.routes[(_current$index = current.index) !== null && _current$index !== void 0 ? _current$index : 0].state) != null) {\n    var _current, _current$index, _current$index2;\n    current = current.routes[(_current$index2 = current.index) !== null && _current$index2 !== void 0 ? _current$index2 : 0].state;\n  }\n  var route = (_current2 = current) === null || _current2 === void 0 ? void 0 : _current2.routes[(_current$index3 = (_current3 = current) === null || _current3 === void 0 ? void 0 : _current3.index) !== null && _current$index3 !== void 0 ? _current$index3 : 0];\n  return route;\n}","map":{"version":3,"sources":["findFocusedRoute.tsx"],"names":["findFocusedRoute","state","current","routes","index","route"],"mappings":"AAEA,eAAe,SAASA,gBAAT,CAA0BC,KAA1B,EAA+C;EAAA,IAAA,SAAA,EAAA,eAAA,EAAA,SAAA;EAC5D,IAAIC,OAAiC,GAAGD,KAAxC;EAEA,OAAO,CAAA,CAAA,QAAA,GAAA,OAAO,MAAA,IAAP,IAAA,QAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAASE,MAAT,CAAA,CAAA,cAAA,GAAgBD,OAAO,CAACE,KAAxB,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,cAAA,GAAiC,CAAjC,CAAA,CAAoCH,KAApC,KAA6C,IAApD,EAA0D;IAAA,IAAA,QAAA,EAAA,cAAA,EAAA,eAAA;IACxDC,OAAO,GAAGA,OAAO,CAACC,MAARD,CAAAA,CAAAA,eAAAA,GAAeA,OAAO,CAACE,KAAvBF,MAAAA,IAAAA,IAAAA,eAAAA,KAAAA,KAAAA,CAAAA,GAAAA,eAAAA,GAAgC,CAAhCA,CAAAA,CAAmCD,KAA7CC;EACD;EAED,IAAMG,KAAK,GAAA,CAAA,SAAA,GAAGH,OAAH,MAAA,IAAA,IAAA,SAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,SAAAA,CAASC,MAATD,CAAAA,CAAAA,eAAAA,GAAAA,CAAAA,SAAAA,GAAgBA,OAAhBA,MAAAA,IAAAA,IAAAA,SAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAgBA,SAAAA,CAASE,KAAzBF,MAAAA,IAAAA,IAAAA,eAAAA,KAAAA,KAAAA,CAAAA,GAAAA,eAAAA,GAAkC,CAAlCA,CAAd;EAEA,OAAOG,KAAP;AACD","sourcesContent":["import type { InitialState } from '@react-navigation/routers';\n\nexport default function findFocusedRoute(state: InitialState) {\n  let current: InitialState | undefined = state;\n\n  while (current?.routes[current.index ?? 0].state != null) {\n    current = current.routes[current.index ?? 0].state;\n  }\n\n  const route = current?.routes[current?.index ?? 0];\n\n  return route;\n}\n"]},"metadata":{},"sourceType":"module"}