{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { Input, Stack, FormControl } from \"native-base\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useRef, useState } from \"react\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FormSubmission = function FormSubmission() {\n  var ref = useRef();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setErrors = _useState6[1];\n  var handleSubmit = function handleSubmit() {\n    validate() ? console.log(\"Submitted\") : console.log(\"Validation Failed\");\n  };\n  var validate = function validate() {\n    if (username === undefined) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        name: \"Name is required\"\n      }));\n      return false;\n    }\n    return true;\n  };\n  return _jsxs(\"div\", {\n    children: [_jsxs(FormControl, {\n      children: [_jsxs(Stack, {\n        space: 5,\n        children: [_jsxs(Stack, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Username\"\n          }), _jsx(Input, {\n            onChangeText: function onChangeText(val) {\n              return setUsername(val);\n            },\n            mx: \"3\",\n            placeholder: \"Input\",\n            width: \"200px\",\n            isRequired: true,\n            type: \"text\"\n          })]\n        }), _jsxs(Stack, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Password\"\n          }), _jsx(Input, {\n            p: 2,\n            width: \"200px\",\n            placeholder: \"E-mail\",\n            type: \"email\",\n            onChangeText: function onChangeText(val) {\n              return setEmail(val);\n            }\n          })]\n        })]\n      }), _jsx(Stack, {\n        children: _jsx(DateTimePicker, {\n          mode: \"time\"\n        })\n      })]\n    }), _jsx(\"button\", {\n      onClick: function onClick() {\n        return handleSubmit();\n      },\n      children: \"hu\"\n    })]\n  });\n};\nexport default FormSubmission;","map":{"version":3,"names":["React","Input","Stack","FormControl","useRef","useState","DateTimePicker","FormSubmission","ref","username","setUsername","email","setEmail","error","setErrors","handleSubmit","validate","console","log","undefined","errors","name","val"],"sources":["/Users/techies/Documents/React/react-native-coding-test-level-1/src/screens/formSubmission.js"],"sourcesContent":["import React from \"react\";\nimport { Input, Stack, FormControl } from \"native-base\";\nimport { StyleSheet } from \"react-native\";\nimport { useRef, useState } from \"react\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\n\nconst FormSubmission = () => {\n  const ref = useRef();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [error, setErrors] = useState();\n\n  const handleSubmit = () => {\n    validate() ? console.log(\"Submitted\") : console.log(\"Validation Failed\");\n  };\n\n  const validate = () => {\n    if (username === undefined) {\n      setErrors({ ...errors, name: \"Name is required\" });\n      return false;\n    }\n\n    return true;\n  };\n\n  return (\n    <div>\n      <FormControl>\n        <Stack space={5}>\n          <Stack>\n            <FormControl.Label>Username</FormControl.Label>\n            <Input\n              onChangeText={(val) => setUsername(val)}\n              mx=\"3\"\n              placeholder=\"Input\"\n              width={\"200px\"}\n              isRequired\n              type=\"text\"\n            />\n          </Stack>\n          <Stack>\n            <FormControl.Label>Password</FormControl.Label>\n            <Input\n              p={2}\n              width={\"200px\"}\n              placeholder=\"E-mail\"\n              type=\"email\"\n              onChangeText={(val) => setEmail(val)}\n            />\n          </Stack>\n        </Stack>\n        <Stack>\n          <DateTimePicker mode=\"time\" />\n        </Stack>\n      </FormControl>\n      <button onClick={() => handleSubmit()}>hu</button>\n    </div>\n  );\n};\n\nexport default FormSubmission;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,KAAK,EAAEC,WAAW,QAAQ,aAAa;AAAC;AAExD,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,cAAc,MAAM,wCAAwC;AAAC;AAAA;AAEpE,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,IAAMC,GAAG,GAAGJ,MAAM,EAAE;EACpB,gBAAgCC,QAAQ,EAAE;IAAA;IAAnCI,QAAQ;IAAEC,WAAW;EAC5B,iBAA0BL,QAAQ,EAAE;IAAA;IAA7BM,KAAK;IAAEC,QAAQ;EACtB,iBAA2BP,QAAQ,EAAE;IAAA;IAA9BQ,KAAK;IAAEC,SAAS;EAEvB,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzBC,QAAQ,EAAE,GAAGC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,GAAGD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAC1E,CAAC;EAED,IAAMF,QAAQ,GAAG,SAAXA,QAAQ,GAAS;IACrB,IAAIP,QAAQ,KAAKU,SAAS,EAAE;MAC1BL,SAAS,iCAAMM,MAAM;QAAEC,IAAI,EAAE;MAAkB,GAAG;MAClD,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC;EAED,OACE;IAAA,WACE,MAAC,WAAW;MAAA,WACV,MAAC,KAAK;QAAC,KAAK,EAAE,CAAE;QAAA,WACd,MAAC,KAAK;UAAA,WACJ,KAAC,WAAW,CAAC,KAAK;YAAA;UAAA,EAA6B,EAC/C,KAAC,KAAK;YACJ,YAAY,EAAE,sBAACC,GAAG;cAAA,OAAKZ,WAAW,CAACY,GAAG,CAAC;YAAA,CAAC;YACxC,EAAE,EAAC,GAAG;YACN,WAAW,EAAC,OAAO;YACnB,KAAK,EAAE,OAAQ;YACf,UAAU;YACV,IAAI,EAAC;UAAM,EACX;QAAA,EACI,EACR,MAAC,KAAK;UAAA,WACJ,KAAC,WAAW,CAAC,KAAK;YAAA;UAAA,EAA6B,EAC/C,KAAC,KAAK;YACJ,CAAC,EAAE,CAAE;YACL,KAAK,EAAE,OAAQ;YACf,WAAW,EAAC,QAAQ;YACpB,IAAI,EAAC,OAAO;YACZ,YAAY,EAAE,sBAACA,GAAG;cAAA,OAAKV,QAAQ,CAACU,GAAG,CAAC;YAAA;UAAC,EACrC;QAAA,EACI;MAAA,EACF,EACR,KAAC,KAAK;QAAA,UACJ,KAAC,cAAc;UAAC,IAAI,EAAC;QAAM;MAAG,EACxB;IAAA,EACI,EACd;MAAQ,OAAO,EAAE;QAAA,OAAMP,YAAY,EAAE;MAAA,CAAC;MAAA;IAAA,EAAY;EAAA,EAC9C;AAEV,CAAC;AAED,eAAeR,cAAc"},"metadata":{},"sourceType":"module"}