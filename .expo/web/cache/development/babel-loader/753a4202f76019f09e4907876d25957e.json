{"ast":null,"code":"\nvar unitlessNumbers = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  shadowOpacity: true\n};\n\nvar prefixes = ['ms', 'Moz', 'O', 'Webkit'];\nvar prefixKey = function prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\nObject.keys(unitlessNumbers).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\nexport default unitlessNumbers;","map":{"version":3,"sources":["unitlessNumbers.ts"],"names":["unitlessNumbers","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexOrder","flexPositive","flexShrink","flexNegative","fontWeight","gridRow","gridRowEnd","gridRowGap","gridRowStart","gridColumn","gridColumnEnd","gridColumnGap","gridColumnStart","lineClamp","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","scale","scaleX","scaleY","scaleZ","shadowOpacity","prefixes","prefixKey","prefix","key","charAt","toUpperCase","substring","Object","keys","forEach","prop"],"mappings":";AAIA,IAAMA,eAAoB,GAAG;EAC3BC,uBAAuB,EAAE,IADE;EAE3BC,WAAW,EAAE,IAFc;EAG3BC,iBAAiB,EAAE,IAHQ;EAI3BC,gBAAgB,EAAE,IAJS;EAK3BC,gBAAgB,EAAE,IALS;EAM3BC,OAAO,EAAE,IANkB;EAO3BC,YAAY,EAAE,IAPa;EAQ3BC,eAAe,EAAE,IARU;EAS3BC,WAAW,EAAE,IATc;EAU3BC,IAAI,EAAE,IAVqB;EAW3BC,QAAQ,EAAE,IAXiB;EAY3BC,SAAS,EAAE,IAZgB;EAa3BC,YAAY,EAAE,IAba;EAc3BC,UAAU,EAAE,IAde;EAe3BC,YAAY,EAAE,IAfa;EAgB3BC,UAAU,EAAE,IAhBe;EAiB3BC,OAAO,EAAE,IAjBkB;EAkB3BC,UAAU,EAAE,IAlBe;EAmB3BC,UAAU,EAAE,IAnBe;EAoB3BC,YAAY,EAAE,IApBa;EAqB3BC,UAAU,EAAE,IArBe;EAsB3BC,aAAa,EAAE,IAtBY;EAuB3BC,aAAa,EAAE,IAvBY;EAwB3BC,eAAe,EAAE,IAxBU;EAyB3BC,SAAS,EAAE,IAzBgB;EA0B3BC,OAAO,EAAE,IA1BkB;EA2B3BC,KAAK,EAAE,IA3BoB;EA4B3BC,OAAO,EAAE,IA5BkB;EA6B3BC,OAAO,EAAE,IA7BkB;EA8B3BC,MAAM,EAAE,IA9BmB;EA+B3BC,MAAM,EAAE,IA/BmB;EAgC3BC,IAAI,EAAE,IAhCqB;EAkC3BC,WAAW,EAAE,IAlCc;EAmC3BC,YAAY,EAAE,IAnCa;EAoC3BC,WAAW,EAAE,IApCc;EAqC3BC,eAAe,EAAE,IArCU;EAsC3BC,gBAAgB,EAAE,IAtCS;EAuC3BC,gBAAgB,EAAE,IAvCS;EAwC3BC,aAAa,EAAE,IAxCY;EAyC3BC,WAAW,EAAE,IAzCc;EA2C3BC,KAAK,EAAE,IA3CoB;EA4C3BC,MAAM,EAAE,IA5CmB;EA6C3BC,MAAM,EAAE,IA7CmB;EA8C3BC,MAAM,EAAE,IA9CmB;EAgD3BC,aAAa,EAAE;AAhDY,CAA7B;;AAuDA,IAAMC,QAAQ,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,QAAnB,CAAjB;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,MAAD,EAAiBC,GAAjB,EAAiC;EACjD,OAAOD,MAAM,GAAGC,GAAG,CAACC,MAAJD,CAAW,CAAXA,CAAAA,CAAcE,WAAdF,EAATD,GAAuCC,GAAG,CAACG,SAAJH,CAAc,CAAdA,CAA9C;AACD,CAFD;AAGAI,MAAM,CAACC,IAAPD,CAAYrD,eAAZqD,CAAAA,CAA6BE,OAA7BF,CAAsCG,UAAAA,IAAD,EAAU;EAC7CV,QAAQ,CAACS,OAATT,CAAkBE,UAAAA,MAAD,EAAY;IAC3BhD,eAAe,CAAC+C,SAAS,CAACC,MAAD,EAASQ,IAAT,CAAV,CAAfxD,GAA2CA,eAAe,CAACwD,IAAD,CAA1DxD;EACD,CAFD8C,CAAAA;AAGD,CAJDO,CAAAA;AAMA,eAAerD,eAAf","sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n// This functions is taken from react native web\n\nconst unitlessNumbers: any = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  // transform types\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  // RN properties\n  shadowOpacity: true,\n};\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nconst prefixes = ['ms', 'Moz', 'O', 'Webkit'];\nconst prefixKey = (prefix: string, key: string) => {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\nObject.keys(unitlessNumbers).forEach((prop) => {\n  prefixes.forEach((prefix) => {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\n\nexport default unitlessNumbers;\n"]},"metadata":{},"sourceType":"module"}