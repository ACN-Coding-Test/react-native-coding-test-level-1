{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar Circle = function Circle(props, ref) {\n  var resolvedProps = usePropsResolution('Circle', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n};\nexport default React.memo(React.forwardRef(Circle));","map":{"version":3,"sources":["Circle.tsx"],"names":["React","Box","usePropsResolution","useHasResponsiveProps","Circle","props","ref","resolvedProps","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP;AAEA,SAASC,kBAAT;AACA,SAASC,qBAAT;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAIC,KAAD,EAAsBC,GAAtB,EAAmC;EAChD,IAAMC,aAAa,GAAGL,kBAAkB,CAAC,QAAD,EAAWG,KAAX,CADQ;;EAIhD,IAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OAAO,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAASE,aAAT,EAAA;IAAwB,GAAG,EAAED;EAA7B,CAAA,CAAA,CAAP;AACD,CARD;AAUA,eAAeN,KAAK,CAACQ,IAANR,CAAWA,KAAK,CAACS,UAANT,CAAiBI,MAAjBJ,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { ICircleProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Circle = (props: ICircleProps, ref: any) => {\n  const resolvedProps = usePropsResolution('Circle', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...resolvedProps} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(Circle));\n"]},"metadata":{},"sourceType":"module"}