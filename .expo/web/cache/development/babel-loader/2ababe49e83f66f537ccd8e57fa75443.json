{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport RNStatusBar from \"react-native-web/dist/exports/StatusBar\";\n\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nexport var StatusBar = forwardRef(function (props, ref) {\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(RNStatusBar, _extends({}, props, {\n    ref: ref\n  }));\n});","map":{"version":3,"sources":["StatusBar.tsx"],"names":["React","forwardRef","useHasResponsiveProps","StatusBar","props","ref"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAAA;;AAGA,SAASC,qBAAT;AAEA,OAAO,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACG,KAAD,EAAwBC,GAAxB,EAAqC;EAEvE,IAAIH,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OAAO,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAiBA,KAAjB,EAAA;IAAwB,GAAG,EAAEC;EAA7B,CAAA,CAAA,CAAP;AACD,CANkC,CAA5B","sourcesContent":["import React, { forwardRef } from 'react';\nimport { StatusBar as RNStatusBar, StatusBarProps } from 'react-native';\n// import type { IStatusBarProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const StatusBar = forwardRef((props: StatusBarProps, ref: any) => {\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <RNStatusBar {...props} ref={ref} />;\n});\n"]},"metadata":{},"sourceType":"module"}