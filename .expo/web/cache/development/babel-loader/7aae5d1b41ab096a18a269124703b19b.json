{"ast":null,"code":"\nimport normalizeColor from \"./normalizeColor\";\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nvar emptyObject = {};\n\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nexport var createBoxShadowValue = function createBoxShadowValue(style) {\n  var shadowColor = style.shadowColor,\n    shadowOffset = style.shadowOffset,\n    shadowOpacity = style.shadowOpacity,\n    shadowRadius = style.shadowRadius;\n  var _ref = shadowOffset || defaultOffset,\n    height = _ref.height,\n    width = _ref.width;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return \"\".concat(offsetX, \" \").concat(offsetY, \" \").concat(blurRadius, \" \").concat(color);\n  }\n};\nexport var createTextShadowValue = function createTextShadowValue(style) {\n  var textShadowColor = style.textShadowColor,\n    textShadowOffset = style.textShadowOffset,\n    textShadowRadius = style.textShadowRadius;\n  var _ref2 = textShadowOffset || defaultOffset,\n    height = _ref2.height,\n    width = _ref2.width;\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    return \"\".concat(offsetX, \" \").concat(offsetY, \" \").concat(blurRadius, \" \").concat(color);\n  }\n};\n\nexport var preprocess = function preprocess(originalStyle) {\n  var style = originalStyle || emptyObject;\n  var nextStyle = {};\n  for (var originalProp in style) {\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || originalValue == null) {\n      continue;\n    }\n    if (prop === 'elevation') continue;\n\n    if (prop === 'shadowColor' || prop === 'shadowOffset' || prop === 'shadowOpacity' || prop === 'shadowRadius') {\n      var boxShadowValue = createBoxShadowValue(style);\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        var boxShadow = style.boxShadow;\n        prop = 'boxShadow';\n        value = boxShadow ? \"\".concat(boxShadow, \", \").concat(boxShadowValue) : boxShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    if (prop === 'textShadowColor' || prop === 'textShadowOffset' || prop === 'textShadowRadius') {\n      var textShadowValue = createTextShadowValue(style);\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        var textShadow = style.textShadow;\n        prop = 'textShadow';\n        value = textShadow ? \"\".concat(textShadow, \", \").concat(textShadowValue) : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n    nextStyle[prop] = value;\n  }\n\n  return nextStyle;\n};\nexport default preprocess;","map":{"version":3,"sources":["preprocess.ts"],"names":["normalizeColor","normalizeValueWithProperty","emptyObject","defaultOffset","height","width","createBoxShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","offsetX","offsetY","blurRadius","color","createTextShadowValue","textShadowColor","textShadowOffset","textShadowRadius","radius","preprocess","originalStyle","nextStyle","originalProp","originalValue","prop","value","Object","prototype","hasOwnProperty","call","boxShadowValue","boxShadow","textShadowValue","textShadow"],"mappings":"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","sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n// This functions is taken from react native web\n\nimport normalizeColor from './normalizeColor';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\n\nconst emptyObject = {};\n\n/**\n * Shadows\n */\n\nconst defaultOffset = { height: 0, width: 0 };\n\nexport const createBoxShadowValue = (style: any): void | string => {\n  const { shadowColor, shadowOffset, shadowOpacity, shadowRadius } = style;\n  const { height, width } = shadowOffset || defaultOffset;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  const color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (\n    color != null &&\n    offsetX != null &&\n    offsetY != null &&\n    blurRadius != null\n  ) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\nexport const createTextShadowValue = (style: any): void | string => {\n  const { textShadowColor, textShadowOffset, textShadowRadius } = style;\n  const { height, width } = textShadowOffset || defaultOffset;\n  const radius = textShadowRadius || 0;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(radius);\n  const color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (\n    color &&\n    (height !== 0 || width !== 0 || radius !== 0) &&\n    offsetX != null &&\n    offsetY != null &&\n    blurRadius != null\n  ) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\n/**\n * Preprocess styles\n */\nexport const preprocess = (originalStyle: any) => {\n  const style = originalStyle || emptyObject;\n  const nextStyle: any = {};\n  for (const originalProp in style) {\n    const originalValue = style[originalProp];\n\n    let prop = originalProp;\n    let value = originalValue;\n\n    if (\n      !Object.prototype.hasOwnProperty.call(style, originalProp) ||\n      originalValue == null\n    ) {\n      continue;\n    }\n\n    if (prop === 'elevation') continue;\n    // Convert shadow styles\n    if (\n      prop === 'shadowColor' ||\n      prop === 'shadowOffset' ||\n      prop === 'shadowOpacity' ||\n      prop === 'shadowRadius'\n    ) {\n      const boxShadowValue = createBoxShadowValue(style);\n\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        const { boxShadow } = style;\n        prop = 'boxShadow';\n        value = boxShadow ? `${boxShadow}, ${boxShadowValue}` : boxShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    // Convert text shadow styles\n    if (\n      prop === 'textShadowColor' ||\n      prop === 'textShadowOffset' ||\n      prop === 'textShadowRadius'\n    ) {\n      const textShadowValue = createTextShadowValue(style);\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        const { textShadow } = style;\n        prop = 'textShadow';\n        value = textShadow\n          ? `${textShadow}, ${textShadowValue}`\n          : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    nextStyle[prop] = value;\n  }\n\n  // $FlowIgnore\n  return nextStyle;\n};\n\nexport default preprocess;\n"]},"metadata":{},"sourceType":"module"}