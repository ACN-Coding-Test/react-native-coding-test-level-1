{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isHovered\"],\n  _excluded2 = [\"isUnderlined\", \"children\", \"_text\", \"href\", \"onPress\", \"isExternal\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Box from \"../Box\";\nimport Text from \"../Text\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useLink } from \"./useLink\";\nimport { mergeRefs } from \"../../../utils\";\nimport { Pressable } from \"../Pressable\";\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar Link = function Link(_ref2, ref) {\n  var isHoveredProp = _ref2.isHovered,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var _ref = React.useRef(null);\n  var _useHover = useHover({}, _ref),\n    isHovered = _useHover.isHovered;\n  var _usePropsResolution = usePropsResolution('Link', props, {\n      isHovered: isHoveredProp || isHovered\n    }),\n    isUnderlined = _usePropsResolution.isUnderlined,\n    children = _usePropsResolution.children,\n    _text = _usePropsResolution._text,\n    href = _usePropsResolution.href,\n    onPress = _usePropsResolution.onPress,\n    isExternal = _usePropsResolution.isExternal,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n  var _useLink = useLink({\n      href: href,\n      onPress: onPress,\n      isExternal: isExternal,\n      _ref: _ref\n    }),\n    linkProps = _useLink.linkProps;\n  var linkTextProps = _objectSpread({\n    textDecorationLine: isUnderlined ? 'underline' : 'none'\n  }, _text);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(React.Fragment, null, Platform.OS === 'web' ? React.createElement(Box, _extends({}, linkProps, resolvedProps, {\n    _text: linkTextProps,\n    ref: mergeRefs([ref, _ref]),\n    flexDirection: \"row\"\n  }), children) : React.createElement(Pressable, _extends({}, linkProps, resolvedProps, {\n    ref: ref,\n    flexDirection: \"row\"\n  }), React.Children.map(children, function (child) {\n    return typeof child === 'string' || typeof child === 'number' ? React.createElement(Text, _extends({}, resolvedProps._text, linkTextProps), child) : child;\n  })));\n};\nexport default memo(forwardRef(Link));","map":{"version":3,"sources":["index.tsx"],"names":["React","memo","forwardRef","Box","Text","usePropsResolution","useLink","mergeRefs","Pressable","useHover","useHasResponsiveProps","Link","isHovered","isHoveredProp","props","ref","_ref","useRef","isUnderlined","children","_text","href","onPress","isExternal","resolvedProps","linkProps","linkTextProps","textDecorationLine","OS","Children","map","child"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AAAA;AAGA,OAAOC,GAAP;AACA,OAAOC,IAAP;AACA,SAASC,kBAAT;AACA,SAASC,OAAT;AACA,SAASC,SAAT;AACA,SAASC,SAAT;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,qBAAT;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAI,QAAwDI,GAArD,EAAkE;EAAA,IAApDF,aAAb,SAAED,SAAS;IAAoBE,KAAAA;EAC3C,IAAME,IAAI,GAAGhB,KAAK,CAACiB,MAANjB,CAAa,IAAbA,CAAb;EACA,gBAAsBS,QAAQ,CAAC,CAAA,CAAD,EAAKO,IAAL,CAA9B;IAAQJ,SAAAA,aAAAA,SAAAA;EACR,0BAQIP,kBAAkB,CAAC,MAAD,EAASS,KAAT,EAAgB;MACpCF,SAAS,EAAEC,aAAa,IAAID;IADQ,CAAhB,CARtB;IACEM,YADI,uBACJA,YADI;IAEJC,QAFI,uBAEJA,QAFI;IAGJC,KAHI,uBAGJA,KAHI;IAIJC,IAJI,uBAIJA,IAJI;IAKJC,OALI,uBAKJA,OALI;IAMJC,UANI,uBAMJA,UANI;IAODC,aAAAA;EAIL,eAAsBlB,OAAO,CAAC;MAAEe,IAAF,EAAEA,IAAF;MAAQC,OAAR,EAAQA,OAAR;MAAiBC,UAAjB,EAAiBA,UAAjB;MAA6BP,IAAAA,EAAAA;IAA7B,CAAD,CAA7B;IAAQS,SAAAA,YAAAA,SAAAA;EAER,IAAMC,aAAa;IACjBC,kBAAkB,EAAET,YAAY,GAAG,WAAH,GAAiB;EAD7B,GAEjBE,KAAAA,CAlBwE;;EA8B7E,IAAIV,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAEG,QAAQ,CAACc,EAAT,KAAgB,KAAhB,GACC,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACMH,SADN,EAEMD,aAFN,EAAA;IAGE,KAAK,EAAEE,aAHT;IAIE,GAAG,EAAEnB,SAAS,CAAC,CAACQ,GAAD,EAAMC,IAAN,CAAD,CAJhB;IAKE,aAAa,EAAC;EALhB,CAAA,CAAA,EAOGG,QAPH,CADD,GAWC,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACMM,SADN,EAEMD,aAFN,EAAA;IAGE,GAAG,EAAET,GAHP;IAIE,aAAa,EAAC;EAJhB,CAAA,CAAA,EAMGf,KAAK,CAAC6B,QAAN7B,CAAe8B,GAAf9B,CAAmBmB,QAAnBnB,EAA8B+B,UAAAA,KAAD;IAAA,OAC5B,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAA9C,GACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAUP,aAAa,CAACJ,KAAxB,EAAmCM,aAAnC,CAAA,EACGK,KADH,CADF,GAKEA,KANH/B;EAAAA,EANH,CAbJ,CADF;AAiCD,CAlED;AAoEA,eAAeC,IAAI,CAACC,UAAU,CAACS,IAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport type { ILinkProps } from './types';\nimport Box from '../Box';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks';\nimport { useLink } from './useLink';\nimport { mergeRefs } from '../../../utils';\nimport { Pressable } from '../Pressable';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Link = ({ isHovered: isHoveredProp, ...props }: ILinkProps, ref: any) => {\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  const {\n    isUnderlined,\n    children,\n    _text,\n    href,\n    onPress,\n    isExternal,\n    ...resolvedProps\n  } = usePropsResolution('Link', props, {\n    isHovered: isHoveredProp || isHovered,\n  });\n  const { linkProps } = useLink({ href, onPress, isExternal, _ref });\n\n  const linkTextProps = {\n    textDecorationLine: isUnderlined ? 'underline' : 'none',\n    ..._text,\n  };\n  // function getHoverProps() {\n  //   let hoverTextProps = {\n  //     ...linkTextProps,\n  //     ..._hover?._text,\n  //   };\n  //   return {\n  //     ...hoverTextProps,\n  //   };\n  // }\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      {/* On web we render Link in anchor tag */}\n      {Platform.OS === 'web' ? (\n        <Box\n          {...linkProps}\n          {...resolvedProps}\n          _text={linkTextProps}\n          ref={mergeRefs([ref, _ref])}\n          flexDirection=\"row\"\n        >\n          {children}\n        </Box>\n      ) : (\n        <Pressable\n          {...linkProps}\n          {...resolvedProps}\n          ref={ref}\n          flexDirection=\"row\"\n        >\n          {React.Children.map(children, (child) =>\n            typeof child === 'string' || typeof child === 'number' ? (\n              <Text {...resolvedProps._text} {...linkTextProps}>\n                {child}\n              </Text>\n            ) : (\n              child\n            )\n          )}\n        </Pressable>\n      )}\n    </>\n  );\n};\n\nexport default memo(forwardRef(Link));\nexport type { ILinkProps };\n"]},"metadata":{},"sourceType":"module"}