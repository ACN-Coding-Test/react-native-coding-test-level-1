{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mergeProps as $4vDl6$mergeProps, filterDOMProps as $4vDl6$filterDOMProps, useId as $4vDl6$useId } from \"@react-aria/utils\";\nimport { useFocusable as $4vDl6$useFocusable, getFocusableTreeWalker as $4vDl6$getFocusableTreeWalker } from \"@react-aria/focus\";\nimport { usePress as $4vDl6$usePress, useFocusWithin as $4vDl6$useFocusWithin } from \"@react-aria/interactions\";\nimport { useField as $4vDl6$useField } from \"@react-aria/label\";\nimport { useLocale as $4vDl6$useLocale } from \"@react-aria/i18n\";\nvar $884aeceb3d67f00f$export$3b7b268d09480394 = new WeakMap();\nvar $884aeceb3d67f00f$export$8e8b214e06dd397d = new WeakMap();\nvar $884aeceb3d67f00f$export$61c8d3f0151e21b2 = new WeakMap();\nfunction $0d5c49892c1215da$export$37b0961d2f4751e2(props, state, ref) {\n  var value = props.value,\n    children = props.children,\n    ariaLabel = props['aria-label'],\n    ariaLabelledby = props['aria-labelledby'];\n  var isDisabled = props.isDisabled || state.isDisabled;\n  var hasChildren = children != null;\n  var hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  var checked = state.selectedValue === value;\n  var onChange = function onChange(e) {\n    e.stopPropagation();\n    state.setSelectedValue(value);\n  };\n  var _$4vDl6$usePress = $4vDl6$usePress({\n      isDisabled: isDisabled\n    }),\n    pressProps = _$4vDl6$usePress.pressProps;\n  var _$4vDl6$useFocusable = $4vDl6$useFocusable($4vDl6$mergeProps(props, {\n      onFocus: function onFocus() {\n        return state.setLastFocusedValue(value);\n      }\n    }), ref),\n    focusableProps = _$4vDl6$useFocusable.focusableProps;\n  var interactions = $4vDl6$mergeProps(pressProps, focusableProps);\n  var domProps = $4vDl6$filterDOMProps(props, {\n    labelable: true\n  });\n  var tabIndex = state.lastFocusedValue === value || state.lastFocusedValue == null ? 0 : -1;\n  if (isDisabled) tabIndex = undefined;\n  return {\n    inputProps: $4vDl6$mergeProps(domProps, _objectSpread(_objectSpread({}, interactions), {}, {\n      type: 'radio',\n      name: $884aeceb3d67f00f$export$3b7b268d09480394.get(state),\n      tabIndex: tabIndex,\n      disabled: isDisabled,\n      checked: checked,\n      value: value,\n      onChange: onChange,\n      'aria-describedby': [state.validationState === 'invalid' ? $884aeceb3d67f00f$export$61c8d3f0151e21b2.get(state) : null, $884aeceb3d67f00f$export$8e8b214e06dd397d.get(state)].filter(Boolean).join(' ') || undefined\n    })),\n    isDisabled: isDisabled,\n    isSelected: checked\n  };\n}\nfunction $430f30ed08ec25fa$export$62b9571f283ff5c2(props, state) {\n  var name = props.name,\n    validationState = props.validationState,\n    isReadOnly = props.isReadOnly,\n    isRequired = props.isRequired,\n    isDisabled = props.isDisabled,\n    _props$orientation = props.orientation,\n    orientation = _props$orientation === void 0 ? 'vertical' : _props$orientation;\n  var _$4vDl6$useLocale = $4vDl6$useLocale(),\n    direction = _$4vDl6$useLocale.direction;\n  var _$4vDl6$useField = $4vDl6$useField(_objectSpread(_objectSpread({}, props), {}, {\n      labelElementType: 'span'\n    })),\n    labelProps = _$4vDl6$useField.labelProps,\n    fieldProps = _$4vDl6$useField.fieldProps,\n    descriptionProps = _$4vDl6$useField.descriptionProps,\n    errorMessageProps = _$4vDl6$useField.errorMessageProps;\n  $884aeceb3d67f00f$export$8e8b214e06dd397d.set(state, descriptionProps.id);\n  $884aeceb3d67f00f$export$61c8d3f0151e21b2.set(state, errorMessageProps.id);\n  var domProps = $4vDl6$filterDOMProps(props, {\n    labelable: true\n  });\n  var _$4vDl6$useFocusWithi = $4vDl6$useFocusWithin({\n      onBlurWithin: function onBlurWithin() {\n        if (!state.selectedValue) state.setLastFocusedValue(null);\n      }\n    }),\n    focusWithinProps = _$4vDl6$useFocusWithi.focusWithinProps;\n  var onKeyDown = function onKeyDown(e) {\n    var nextDir;\n    switch (e.key) {\n      case 'ArrowRight':\n        if (direction === 'rtl' && orientation !== 'vertical') nextDir = 'prev';else nextDir = 'next';\n        break;\n      case 'ArrowLeft':\n        if (direction === 'rtl' && orientation !== 'vertical') nextDir = 'next';else nextDir = 'prev';\n        break;\n      case 'ArrowDown':\n        nextDir = 'next';\n        break;\n      case 'ArrowUp':\n        nextDir = 'prev';\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n    var walker = $4vDl6$getFocusableTreeWalker(e.currentTarget, {\n      from: e.target\n    });\n    var nextElem;\n    if (nextDir === 'next') {\n      nextElem = walker.nextNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.firstChild();\n      }\n    } else {\n      nextElem = walker.previousNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.lastChild();\n      }\n    }\n    if (nextElem) {\n      nextElem.focus();\n      state.setSelectedValue(nextElem.value);\n    }\n  };\n  var groupName = $4vDl6$useId(name);\n  $884aeceb3d67f00f$export$3b7b268d09480394.set(state, groupName);\n  return {\n    radioGroupProps: $4vDl6$mergeProps(domProps, _objectSpread(_objectSpread({\n      role: 'radiogroup',\n      onKeyDown: onKeyDown,\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      'aria-disabled': isDisabled || undefined,\n      'aria-orientation': orientation\n    }, fieldProps), focusWithinProps)),\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  };\n}\nexport { $0d5c49892c1215da$export$37b0961d2f4751e2 as useRadio, $430f30ed08ec25fa$export$62b9571f283ff5c2 as useRadioGroup };","map":{"version":3,"sources":["packages/@react-aria/radio/src/useRadio.ts","packages/@react-aria/radio/src/utils.ts","packages/@react-aria/radio/src/useRadioGroup.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaRadioProps} from '@react-types/radio';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {InputHTMLAttributes, RefObject} from 'react';\nimport {radioGroupDescriptionIds, radioGroupErrorMessageIds, radioGroupNames} from './utils';\nimport {RadioGroupState} from '@react-stately/radio';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface RadioAria {\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the radio is disabled. */\n  isDisabled: boolean,\n  /** Whether the radio is currently selected. */\n  isSelected: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for an individual\n * radio button in a radio group.\n * @param props - Props for the radio.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n * @param ref - Ref to the HTML input element.\n */\nexport function useRadio(props: AriaRadioProps, state: RadioGroupState, ref: RefObject<HTMLInputElement>): RadioAria {\n  let {\n    value,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  } = props;\n\n  const isDisabled = props.isDisabled || state.isDisabled;\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  let checked = state.selectedValue === value;\n\n  let onChange = (e) => {\n    e.stopPropagation();\n    state.setSelectedValue(value);\n  };\n\n  let {pressProps} = usePress({\n    isDisabled\n  });\n\n  let {focusableProps} = useFocusable(mergeProps(props, {\n    onFocus: () => state.setLastFocusedValue(value)\n  }), ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n  let tabIndex = state.lastFocusedValue === value || state.lastFocusedValue == null ? 0 : -1;\n  if (isDisabled) {\n    tabIndex = undefined;\n  }\n\n  return {\n    inputProps: mergeProps(domProps, {\n      ...interactions,\n      type: 'radio',\n      name: radioGroupNames.get(state),\n      tabIndex,\n      disabled: isDisabled,\n      checked,\n      value,\n      onChange,\n      'aria-describedby': [\n        state.validationState === 'invalid' ? radioGroupErrorMessageIds.get(state) : null,\n        radioGroupDescriptionIds.get(state)\n      ].filter(Boolean).join(' ') || undefined\n    }),\n    isDisabled,\n    isSelected: checked\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RadioGroupState} from '@react-stately/radio';\n\nexport const radioGroupNames = new WeakMap<RadioGroupState, string>();\nexport const radioGroupDescriptionIds = new WeakMap<RadioGroupState, string>();\nexport const radioGroupErrorMessageIds = new WeakMap<RadioGroupState, string>();\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaRadioGroupProps} from '@react-types/radio';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {getFocusableTreeWalker} from '@react-aria/focus';\nimport {radioGroupDescriptionIds, radioGroupErrorMessageIds, radioGroupNames} from './utils';\nimport {RadioGroupState} from '@react-stately/radio';\nimport {useField} from '@react-aria/label';\nimport {useFocusWithin} from '@react-aria/interactions';\nimport {useLocale} from '@react-aria/i18n';\n\nexport interface RadioGroupAria {\n  /** Props for the radio group wrapper element. */\n  radioGroupProps: DOMAttributes,\n  /** Props for the radio group's visible label (if any). */\n  labelProps: DOMAttributes,\n  /** Props for the radio group description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the radio group error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a radio group component.\n * Radio groups allow users to select a single item from a list of mutually exclusive options.\n * @param props - Props for the radio group.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n */\nexport function useRadioGroup(props: AriaRadioGroupProps, state: RadioGroupState): RadioGroupAria {\n  let {\n    name,\n    validationState,\n    isReadOnly,\n    isRequired,\n    isDisabled,\n    orientation = 'vertical'\n  } = props;\n  let {direction} = useLocale();\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    // Radio group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n  radioGroupDescriptionIds.set(state, descriptionProps.id);\n  radioGroupErrorMessageIds.set(state, errorMessageProps.id);\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  // When the radio group loses focus, reset the focusable radio to null if\n  // there is no selection. This allows tabbing into the group from either\n  // direction to go to the first or last radio.\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin() {\n      if (!state.selectedValue) {\n        state.setLastFocusedValue(null);\n      }\n    }\n  });\n\n  let onKeyDown = (e) => {\n    let nextDir;\n    switch (e.key) {\n      case 'ArrowRight':\n        if (direction === 'rtl' && orientation !== 'vertical') {\n          nextDir = 'prev';\n        } else {\n          nextDir = 'next';\n        }\n        break;\n      case 'ArrowLeft':\n        if (direction === 'rtl' && orientation !== 'vertical') {\n          nextDir = 'next';\n        } else {\n          nextDir = 'prev';\n        }\n        break;\n      case 'ArrowDown':\n        nextDir = 'next';\n        break;\n      case 'ArrowUp':\n        nextDir = 'prev';\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n    let walker = getFocusableTreeWalker(e.currentTarget, {from: e.target});\n    let nextElem;\n    if (nextDir === 'next') {\n      nextElem = walker.nextNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.firstChild();\n      }\n    } else {\n      nextElem = walker.previousNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.lastChild();\n      }\n    }\n    if (nextElem) {\n      // Call focus on nextElem so that keyboard navigation scrolls the radio into view\n      nextElem.focus();\n      state.setSelectedValue(nextElem.value);\n    }\n  };\n\n  let groupName = useId(name);\n  radioGroupNames.set(state, groupName);\n\n  return {\n    radioGroupProps: mergeProps(domProps, {\n      // https://www.w3.org/TR/wai-aria-1.2/#radiogroup\n      role: 'radiogroup',\n      onKeyDown,\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      'aria-disabled': isDisabled || undefined,\n      'aria-orientation': orientation,\n      ...fieldProps,\n      ...focusWithinProps\n    }),\n    labelProps,\n    descriptionProps,\n    errorMessageProps\n  };\n}\n"]},"metadata":{},"sourceType":"module"}