{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _INITIAL_PROP_SPECIFI;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport merge from 'lodash.merge';\nvar SPECIFICITY_1000 = 1000;\nvar SPECIFICITY_110 = 110;\nvar SPECIFICITY_100 = 100;\nvar SPECIFICITY_70 = 70;\nvar SPECIFICITY_60 = 60;\nvar SPECIFICITY_55 = 55;\nvar SPECIFICITY_50 = 50;\nvar SPECIFICITY_40 = 40;\nvar SPECIFICITY_30 = 30;\n\nvar SPECIFICITY_20 = 20;\nvar SPECIFICITY_10 = 10;\nvar specificityPrecedence = [SPECIFICITY_1000, SPECIFICITY_110, SPECIFICITY_100, SPECIFICITY_70, SPECIFICITY_60, SPECIFICITY_55, SPECIFICITY_50, SPECIFICITY_40, SPECIFICITY_30, SPECIFICITY_20, SPECIFICITY_10];\nvar INITIAL_PROP_SPECIFICITY = (_INITIAL_PROP_SPECIFI = {}, _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_1000, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_110, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_100, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_70, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_60, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_50, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_55, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_40, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_30, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_20, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_10, 0), _INITIAL_PROP_SPECIFI);\nvar pseudoPropsMap = {\n  _web: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _ios: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _android: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _light: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _dark: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30\n  },\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30\n  },\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110\n  },\n  _important: {\n    dependentOn: null,\n    priority: SPECIFICITY_1000\n  }\n};\nexport var compareSpecificity = function compareSpecificity(exisiting, upcoming, ignorebaseTheme)\n{\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  var condition = ignorebaseTheme ? specificityPrecedence.length - 1 : specificityPrecedence.length;\n  for (var index = 0; index < condition; index++) {\n    if (exisiting[specificityPrecedence[index]] > upcoming[specificityPrecedence[index]]) {\n      return false;\n    } else if (exisiting[specificityPrecedence[index]] < upcoming[specificityPrecedence[index]]) {\n      return true;\n    }\n  }\n  return true;\n};\nvar shouldResolvePseudoProp = function shouldResolvePseudoProp(_ref) {\n  var property = _ref.property,\n    state = _ref.state,\n    platform = _ref.platform,\n    colormode = _ref.colormode;\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === \"_\".concat(platform);\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === \"_\".concat(colormode);\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    return state[pseudoPropsMap[property].respondTo];\n  } else if (pseudoPropsMap[property].dependentOn === null) {\n    return true;\n  } else {\n    return false;\n  }\n};\nvar simplifyProps = function simplifyProps(_ref2) {\n  var props = _ref2.props,\n    colormode = _ref2.colormode,\n    platform = _ref2.platform,\n    state = _ref2.state,\n    currentSpecificity = _ref2.currentSpecificity,\n    previouslyFlattenProps = _ref2.previouslyFlattenProps,\n    cascadePseudoProps = _ref2.cascadePseudoProps;\n  var flattenProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var specificityMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var priority = arguments.length > 3 ? arguments[3] : undefined;\n  var mergePsuedoProps = function mergePsuedoProps(property, propertySpecity) {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with higher specificity');\n      }\n      specificityMap[property] = propertySpecity;\n\n      flattenProps[property] = merge({}, flattenProps[property], props[property]);\n    } else {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with lower specificity');\n      }\n      flattenProps[property] = merge({}, props[property], flattenProps[property]);\n    }\n  };\n  for (var property in props) {\n    var _pseudoPropsMap$prope;\n\n    var propertySpecity = currentSpecificity ? _objectSpread({}, currentSpecificity) : _objectSpread(_objectSpread({}, INITIAL_PROP_SPECIFICITY), {}, _defineProperty({}, SPECIFICITY_20, priority));\n    if (\n    state[(_pseudoPropsMap$prope = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope === void 0 ? void 0 : _pseudoPropsMap$prope.respondTo] || ['_dark', '_light', '_web', '_ios', '_android', '_important'].includes(property)) {\n      if (shouldResolvePseudoProp({\n        property: property,\n        state: state,\n        platform: platform,\n        colormode: colormode\n      })) {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'recursively resolving');\n        }\n\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps({\n          props: props[property],\n          colormode: colormode,\n          platform: platform,\n          state: state,\n          currentSpecificity: propertySpecity,\n          previouslyFlattenProps: previouslyFlattenProps,\n          cascadePseudoProps: cascadePseudoProps\n        }, flattenProps, specificityMap, priority);\n      }\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as simple prop');\n          }\n          specificityMap[property] = propertySpecity;\n\n          flattenProps[property] = props[property];\n        } else {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'cascaded');\n        }\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\nexport var propsFlattener = function propsFlattener(_ref3, priority) {\n  var props = _ref3.props,\n    colormode = _ref3.colormode,\n    platform = _ref3.platform,\n    state = _ref3.state,\n    currentSpecificityMap = _ref3.currentSpecificityMap,\n    previouslyFlattenProps = _ref3.previouslyFlattenProps,\n    cascadePseudoProps = _ref3.cascadePseudoProps;\n  var flattenProps = {};\n  for (var property in props) {\n    var _pseudoPropsMap$prope2;\n    if (\n    state[(_pseudoPropsMap$prope2 = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope2 === void 0 ? void 0 : _pseudoPropsMap$prope2.respondTo] === undefined && property.startsWith('_')) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n  var specificityMap = currentSpecificityMap || {};\n  simplifyProps({\n    props: props,\n    colormode: colormode,\n    platform: platform,\n    state: state,\n    currentSpecificityMap: currentSpecificityMap,\n    previouslyFlattenProps: previouslyFlattenProps,\n    cascadePseudoProps: cascadePseudoProps\n  }, flattenProps, specificityMap, priority);\n  return [flattenProps, specificityMap];\n};","map":{"version":3,"sources":["propsFlattener.tsx"],"names":["merge","SPECIFICITY_1000","SPECIFICITY_110","SPECIFICITY_100","SPECIFICITY_70","SPECIFICITY_60","SPECIFICITY_55","SPECIFICITY_50","SPECIFICITY_40","SPECIFICITY_30","SPECIFICITY_20","SPECIFICITY_10","specificityPrecedence","INITIAL_PROP_SPECIFICITY","pseudoPropsMap","_web","dependentOn","priority","_ios","_android","_light","_dark","_indeterminate","respondTo","_checked","_readOnly","_invalid","_focus","_focusVisible","_hover","_pressed","_disabled","_loading","_important","compareSpecificity","exisiting","upcoming","ignorebaseTheme","condition","length","index","shouldResolvePseudoProp","property","state","platform","colormode","simplifyProps","props","currentSpecificity","previouslyFlattenProps","cascadePseudoProps","flattenProps","specificityMap","mergePsuedoProps","propertySpecity","process","env","NODE_ENV","debug","console","log","includes","undefined","startsWith","propsFlattener","currentSpecificityMap"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge';\n\nconst SPECIFICITY_1000 = 1000;\nconst SPECIFICITY_110 = 110;\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30;\n// SPECIFICITY_20 is being user for defferentiating between User Props and Theme Props. So any specificity less than SPECIFICITY_20 will be ovridable by user props.\nconst SPECIFICITY_20 = 20;\nconst SPECIFICITY_10 = 10;\nconst specificityPrecedence = [\n  SPECIFICITY_1000,\n  SPECIFICITY_110,\n  SPECIFICITY_100,\n  SPECIFICITY_70,\n  SPECIFICITY_60,\n  SPECIFICITY_55,\n  SPECIFICITY_50,\n  SPECIFICITY_40,\n  SPECIFICITY_30,\n  SPECIFICITY_20,\n  SPECIFICITY_10,\n];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_1000]: 0,\n  [SPECIFICITY_110]: 0,\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_20]: 0,\n  [SPECIFICITY_10]: 0,\n};\n\nconst pseudoPropsMap = {\n  _web: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _ios: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _android: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n\n  _light: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n  _dark: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30,\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40,\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50,\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55,\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60,\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70,\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100,\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110,\n  },\n  _important: {\n    dependentOn: null,\n    priority: SPECIFICITY_1000,\n  },\n} as const;\n\ntype IPseudoPropsMap = typeof pseudoPropsMap;\ntype ExtractState<T extends IPseudoPropsMap> = {\n  // @ts-ignore\n  [P in keyof T as T[P]['respondTo']]?: boolean;\n};\nexport type IStateProps = ExtractState<IPseudoPropsMap>;\n\nexport const compareSpecificity = (\n  exisiting: any,\n  upcoming: any,\n  ignorebaseTheme?: boolean\n  // property?: any\n) => {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme\n    ? specificityPrecedence.length - 1\n    : specificityPrecedence.length;\n  for (let index = 0; index < condition; index++) {\n    if (\n      exisiting[specificityPrecedence[index]] >\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return false;\n    } else if (\n      exisiting[specificityPrecedence[index]] <\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return true;\n    }\n  }\n  return true;\n};\n\nconst shouldResolvePseudoProp = ({\n  property,\n  state,\n  platform,\n  colormode,\n}: {\n  property: keyof IPseudoPropsMap;\n  state: IStateProps;\n  platform: any;\n  colormode: any;\n}) => {\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === `_${platform}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === `_${colormode}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    // @ts-ignore\n    return state[pseudoPropsMap[property].respondTo];\n  } else if (pseudoPropsMap[property].dependentOn === null) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificity,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  flattenProps: any = {},\n  specificityMap: any = {},\n  priority: number\n) => {\n  const mergePsuedoProps = (property: string, propertySpecity: object) => {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with higher specificity'\n        );\n      }\n      specificityMap[property] = propertySpecity;\n      // merging internal props (like, _text, _stack ...)\n      flattenProps[property] = merge(\n        {},\n        flattenProps[property],\n        props[property]\n      );\n    } else {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with lower specificity'\n        );\n      }\n      flattenProps[property] = merge(\n        {},\n        props[property],\n        flattenProps[property]\n      );\n    }\n  };\n  for (const property in props) {\n    // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n    const propertySpecity = currentSpecificity\n      ? { ...currentSpecificity }\n      : {\n          ...INITIAL_PROP_SPECIFICITY,\n          [SPECIFICITY_20]: priority,\n        };\n\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] ||\n      ['_dark', '_light', '_web', '_ios', '_android', '_important'].includes(\n        property\n      )\n    ) {\n      // @ts-ignore\n      if (shouldResolvePseudoProp({ property, state, platform, colormode })) {\n        // NOTE: Handling (state driven) props like _important, _web, _ios, _android, _dark, _light, _disabled, _focus, _focusVisible, _hover, _pressed, _readOnly, _invalid, .... Only when they are true.\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\n            `%c ${property}`,\n            'color: #818cf8;',\n            'recursively resolving'\n          );\n        }\n        // @ts-ignore\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps(\n          {\n            props: props[property],\n            colormode,\n            platform,\n            state,\n            currentSpecificity: propertySpecity,\n            previouslyFlattenProps: previouslyFlattenProps,\n            cascadePseudoProps,\n          },\n          flattenProps,\n          specificityMap,\n          priority\n        );\n      }\n      // @ts-ignore\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        // NOTE: Handling (internal) props like _text, _stack, ....\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\n              `%c ${property}`,\n              'color: #818cf8;',\n              'updated as simple prop'\n            );\n          }\n          specificityMap[property] = propertySpecity;\n          // replacing simple props (like, p, m, bg, color, ...)\n          flattenProps[property] = props[property];\n        } else {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(`%c ${property}`, 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      // Can delete unused props\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'cascaded');\n        }\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport const propsFlattener = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  priority: number\n) => {\n  const flattenProps: any = {};\n\n  for (const property in props) {\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] === undefined &&\n      property.startsWith('_')\n    ) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {};\n\n  simplifyProps(\n    {\n      props,\n      colormode,\n      platform,\n      state,\n      currentSpecificityMap,\n      previouslyFlattenProps,\n      cascadePseudoProps,\n    },\n    flattenProps,\n    specificityMap,\n    priority\n  );\n\n  return [flattenProps, specificityMap];\n};\n"]},"metadata":{},"sourceType":"module"}