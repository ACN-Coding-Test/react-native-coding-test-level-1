{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"onFocus\", \"onBlur\", \"_stack\", \"_interactionBox\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useSliderThumb } from '@react-native-aria/slider';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { useToken } from \"../../../hooks\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport Box from \"../Box\";\nimport { SliderContext } from \"./Context\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from \"../../../utils\";\nimport { extractInObject, stylingProps } from \"../../../theme/tools/utils\";\nimport { Stack } from \"../Stack\";\nimport { Center } from \"../../composites/Center\";\nfunction SliderThumb(props, ref) {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isPressed = _React$useState2[0],\n    setIsPressed = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isFocused = _React$useState4[0],\n    setIsFocused = _React$useState4[1];\n  var handleFocus = function handleFocus(focusState, callback) {\n    setIsFocused(focusState);\n    callback();\n  };\n  var _ref = React.useRef(null);\n  var _useHover = useHover({}, _ref),\n    isHovered = _useHover.isHovered;\n  var _React$useContext = React.useContext(SliderContext),\n    state = _React$useContext.state,\n    trackLayout = _React$useContext.trackLayout,\n    orientation = _React$useContext.orientation,\n    colorScheme = _React$useContext.colorScheme,\n    thumbSize = _React$useContext.thumbSize,\n    isReadOnly = _React$useContext.isReadOnly,\n    isDisabled = _React$useContext.isDisabled,\n    interactionBoxContext = _React$useContext._interactionBox;\n  var _usePropsResolution = usePropsResolution('SliderThumb', _objectSpread({\n      size: thumbSize,\n      _interactionBox: interactionBoxContext,\n      colorScheme: colorScheme\n    }, props), {\n      isDisabled: isDisabled,\n      isReadOnly: isReadOnly,\n      isPressed: isPressed,\n      isFocused: isFocused,\n      isHovered: isHovered\n    }),\n    _onFocus = _usePropsResolution.onFocus,\n    _onBlur = _usePropsResolution.onBlur,\n    _stack = _usePropsResolution._stack,\n    _interactionBox = _usePropsResolution._interactionBox,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n  var inputRef = React.useRef(null);\n  var _useSliderThumb = useSliderThumb({\n      index: 0,\n      trackLayout: trackLayout,\n      inputRef: inputRef,\n      orientation: orientation\n    }, state),\n    thumbProps = _useSliderThumb.thumbProps,\n    inputProps = _useSliderThumb.inputProps;\n  React.useEffect(function () {\n    setIsPressed(state.isThumbDragging(0));\n  }, [state]);\n  var thumbAbsoluteSize = useToken('sizes', resolvedProps.size);\n  var thumbStyles = {\n    bottom: orientation === 'vertical' ? \"\".concat(state.getThumbPercent(0) * 100, \"%\") : undefined,\n    left: orientation !== 'vertical' ? \"\".concat(state.getThumbPercent(0) * 100, \"%\") : undefined,\n    transform: orientation === 'vertical' ? [{\n      translateY: parseInt(thumbAbsoluteSize) / 2\n    }] : [{\n      translateX: -parseInt(thumbAbsoluteSize) / 2\n    }]\n  };\n  thumbStyles.transform.push({\n    scale: state.isThumbDragging(0) ? resolvedProps.scaleOnPressed : 1\n  });\n  var _extractInObject = extractInObject(resolvedProps, [].concat(_toConsumableArray(stylingProps.margin), _toConsumableArray(stylingProps.layout), _toConsumableArray(stylingProps.flexbox), _toConsumableArray(stylingProps.position), _toConsumableArray(stylingProps.outline))),\n    _extractInObject2 = _slicedToArray(_extractInObject, 2),\n    layoutProps = _extractInObject2[0],\n    nonLayoutProps = _extractInObject2[1];\n  var _extractInObject3 = extractInObject(nonLayoutProps, ['accessibilityRole', 'accessibilityState']),\n    _extractInObject4 = _slicedToArray(_extractInObject3, 2),\n    accessibilityProps = _extractInObject4[0],\n    nonAccessibilityProps = _extractInObject4[1];\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({\n    position: \"absolute\"\n  }, thumbProps, resolvedProps, accessibilityProps, layoutProps, {\n    style: [thumbStyles, resolvedProps.style],\n    onFocus: function onFocus(e) {\n      handleFocus(true, _onFocus ? function () {\n        return _onFocus(e);\n      } : function () {});\n    },\n    onBlur: function onBlur(e) {\n      handleFocus(false, _onBlur ? function () {\n        return _onBlur(e);\n      } : function () {});\n    }\n    ,\n\n    ref: mergeRefs([_ref, ref])\n  }), React.createElement(Stack, _stack, React.createElement(Box, _interactionBox), React.createElement(Center, nonAccessibilityProps, props.children, Platform.OS === 'web' && React.createElement(VisuallyHidden, null, React.createElement(\"input\", _extends({\n    ref: inputRef\n  }, inputProps))))));\n}\nSliderThumb.displayName = 'SliderThumb';\nexport default forwardRef(SliderThumb);","map":{"version":3,"sources":["SliderThumb.tsx"],"names":["React","forwardRef","useSliderThumb","VisuallyHidden","useToken","usePropsResolution","Box","SliderContext","useHasResponsiveProps","useHover","mergeRefs","extractInObject","stylingProps","Stack","Center","SliderThumb","props","ref","isPressed","setIsPressed","useState","isFocused","setIsFocused","handleFocus","focusState","callback","_ref","useRef","isHovered","state","trackLayout","orientation","colorScheme","thumbSize","isReadOnly","isDisabled","_interactionBox","interactionBoxContext","useContext","onFocus","onBlur","_stack","resolvedProps","size","inputRef","thumbProps","inputProps","index","useEffect","isThumbDragging","thumbAbsoluteSize","thumbStyles","bottom","getThumbPercent","undefined","left","transform","translateY","parseInt","translateX","push","scale","scaleOnPressed","layoutProps","nonLayoutProps","margin","layout","flexbox","position","outline","accessibilityProps","nonAccessibilityProps","style","e","children","Platform","OS","displayName"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { useSliderThumb } from '@react-native-aria/slider';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { useToken } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ISliderThumbProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { Stack } from '../Stack';\nimport { Center } from '../../composites/Center';\n\nfunction SliderThumb(props: ISliderThumbProps, ref: any) {\n  const [isPressed, setIsPressed] = React.useState(false);\n\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const {\n    state,\n    trackLayout,\n    orientation,\n    colorScheme,\n    thumbSize,\n    isReadOnly,\n    isDisabled,\n    _interactionBox: interactionBoxContext,\n  } = React.useContext(SliderContext);\n  const {\n    onFocus,\n    onBlur,\n    _stack,\n    _interactionBox,\n    ...resolvedProps\n  } = usePropsResolution(\n    'SliderThumb',\n    {\n      size: thumbSize,\n      _interactionBox: interactionBoxContext,\n      colorScheme,\n      ...props,\n    },\n    {\n      isDisabled,\n      isReadOnly,\n      isPressed,\n      isFocused,\n      isHovered,\n    }\n  );\n\n  const inputRef = React.useRef(null);\n  const { thumbProps, inputProps } = useSliderThumb(\n    {\n      index: 0,\n      trackLayout,\n      inputRef,\n      orientation,\n    },\n    state\n  );\n\n  React.useEffect(() => {\n    setIsPressed(state.isThumbDragging(0));\n  }, [state]);\n\n  const thumbAbsoluteSize = useToken('sizes', resolvedProps.size);\n\n  const thumbStyles: any = {\n    bottom:\n      orientation === 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    left:\n      orientation !== 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    transform:\n      orientation === 'vertical'\n        ? [{ translateY: parseInt(thumbAbsoluteSize) / 2 }]\n        : [{ translateX: -parseInt(thumbAbsoluteSize) / 2 }],\n  };\n\n  thumbStyles.transform.push({\n    scale: state.isThumbDragging(0) ? resolvedProps.scaleOnPressed : 1,\n  });\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.outline,\n  ]);\n\n  const [\n    accessibilityProps,\n    nonAccessibilityProps,\n  ] = extractInObject(nonLayoutProps, [\n    'accessibilityRole',\n    'accessibilityState',\n  ]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box\n      position=\"absolute\"\n      {...thumbProps}\n      {...resolvedProps}\n      {...accessibilityProps}\n      {...layoutProps}\n      style={[thumbStyles, resolvedProps.style]}\n      onFocus={(e: any) => {\n        handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n      }}\n      onBlur={(e: any) => {\n        handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n      }}\n      // {...(isReadOnly && _readOnly)}\n      // {...(isDisabled && _disabled)}\n      ref={mergeRefs([_ref, ref])}\n    >\n      <Stack {..._stack}>\n        <Box {..._interactionBox} />\n        <Center {...nonAccessibilityProps}>\n          {props.children}\n          {Platform.OS === 'web' && (\n            <VisuallyHidden>\n              <input ref={inputRef} {...inputProps} />\n            </VisuallyHidden>\n          )}\n        </Center>\n      </Stack>\n    </Box>\n  );\n}\n\nSliderThumb.displayName = 'SliderThumb';\n\nexport default forwardRef(SliderThumb);\n"]},"metadata":{},"sourceType":"module"}