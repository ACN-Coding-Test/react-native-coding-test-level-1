{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport StackMain from \"./Stack\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar VStack = function VStack(props, ref) {\n  var resolvedProps = usePropsResolution('VStack', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(StackMain, _extends({\n    ref: ref\n  }, resolvedProps));\n};\nexport default memo(forwardRef(VStack));","map":{"version":3,"sources":["VStack.tsx"],"names":["React","memo","forwardRef","StackMain","usePropsResolution","useHasResponsiveProps","VStack","props","ref","resolvedProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,SAAP;AACA,SAASC,kBAAT;AAEA,SAASC,qBAAT;AAaA,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAIC,KAAD,EAAsBC,GAAtB,EAAoC;EACjD,IAAMC,aAAa,GAAGL,kBAAkB,CAAC,QAAD,EAAWG,KAAX,CADS;;EAGjD,IAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OAAO,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,QAAA,CAAA;IAAW,GAAG,EAAEC;EAAhB,CAAA,EAAyBC,aAAzB,CAAA,CAAP;AACD,CAPD;AASA,eAAeR,IAAI,CAACC,UAAU,CAACI,MAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport StackMain, { InterfaceStackProps } from './Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { CustomProps, ResponsiveValue } from '../../types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport interface InterfaceVStackProps extends InterfaceStackProps {\n  /**\n   * The direction of the Stack Items.\n   * @default column\n   */\n  direction?: ResponsiveValue<\n    'column' | 'row' | 'column-reverse' | 'row-reverse'\n  >;\n}\n\nexport type IVStackProps = InterfaceVStackProps & CustomProps<'VStack'>;\n\nconst VStack = (props: IVStackProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('VStack', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StackMain ref={ref} {...resolvedProps} />;\n};\n\nexport default memo(forwardRef(VStack));\n"]},"metadata":{},"sourceType":"module"}