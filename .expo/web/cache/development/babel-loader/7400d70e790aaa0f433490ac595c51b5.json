{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"isIndeterminate\", \"max\", \"min\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport get from 'lodash.get';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useTheme, useThemeProps } from \"../../../hooks\";\nimport { canUseDom } from \"../../../utils\";\nimport { default as Box } from \"../../primitives/Box\";\nimport { themeTools } from \"../../../theme\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar StyleAnimatedView = makeStyledComponent(Animated.View);\nvar CircularProgress = function CircularProgress(_ref, ref) {\n  var value = _ref.value,\n    isIndeterminate = _ref.isIndeterminate,\n    max = _ref.max,\n    min = _ref.min,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = useTheme();\n  var isDomUsable = canUseDom();\n  if (min) {\n    value = value - min;\n  }\n  var sizeProps;\n  var newProps = useThemeProps('CircularProgress', props);\n  var _themeTools$extractIn = themeTools.extractInObject(props, ['size']),\n    _themeTools$extractIn2 = _slicedToArray(_themeTools$extractIn, 2),\n    remainingProps = _themeTools$extractIn2[1];\n\n  if (!newProps.size) {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width\n    };\n  } else {\n    sizeProps = {\n      height: newProps.size,\n      width: newProps.size\n    };\n  }\n\n  var themeHeight = get(theme, 'space.' + sizeProps.height);\n  var themeWidth = get(theme, 'space.' + sizeProps.width);\n  var styleSize = {\n    height: themeHeight ? parseInt(themeHeight.slice(themeHeight.Length, -2), 10) : sizeProps.height,\n    width: themeWidth ? parseInt(themeWidth.slice(themeWidth.Length, -2), 10) : sizeProps.width\n  };\n  var defaultThickness = newProps.thickness;\n  var degree = new Animated.Value(0);\n  if (isIndeterminate) {\n    if (isDomUsable) {\n      Animated.loop(Animated.timing(degree, {\n        toValue: 1,\n        duration: 600,\n        easing: Easing.linear,\n        useNativeDriver: false\n      })).start();\n    }\n  }\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    viewHeight = _React$useState2[0],\n    setViewHeight = _React$useState2[1];\n  var layout = function layout(e) {\n    var height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n  var defaultStyling = _objectSpread({\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent'\n  }, styleSize);\n  var styles = StyleSheet.create({\n    firstProgressLayer: _objectSpread(_objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling), {}, {\n      transform: [{\n        rotateZ: '-135deg'\n      }]\n    }),\n    secondProgressLayer: _objectSpread(_objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling), {}, {\n      transform: [{\n        rotateZ: '45deg'\n      }]\n    }),\n    offsetLayer: _objectSpread(_objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling), {}, {\n      borderRadius: viewHeight / 2,\n      transform: [{\n        rotateZ: '-135deg'\n      }]\n    }),\n    animateStyle: _objectSpread(_objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling), {}, {\n      transform: [{\n        rotateZ: degree.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', '360deg']\n        })\n      }]\n    })\n  });\n  var halfSide = (max ? min ? max - min : max : 100) / 2;\n\n  var propStyle = function propStyle(percent, base_degrees) {\n    var rotateBy = base_degrees + percent * 180 / halfSide;\n    return {\n      transform: [{\n        rotateZ: rotateBy + 'deg'\n      }]\n    };\n  };\n  var renderThirdLayer = function renderThirdLayer(percent) {\n    if (percent > halfSide) {\n      return React.createElement(Box, {\n        borderTopColor: newProps.color,\n        borderRightColor: newProps.color,\n        style: [styles.secondProgressLayer, propStyle(percent - halfSide, 45)]\n      });\n    } else {\n      return React.createElement(Box, {\n        borderTopColor: newProps.trackColor,\n        borderRightColor: newProps.trackColor,\n        style: styles.offsetLayer\n      });\n    }\n  };\n  var firstProgressLayerStyle;\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({}, sizeProps, {\n    rounded: viewHeight / 2,\n    borderWidth: defaultThickness,\n    borderColor: newProps.trackColor,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, remainingProps, {\n    ref: ref,\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityValue: {\n      min: min,\n      max: max,\n      now: value\n    }\n  }), !isIndeterminate ? React.createElement(React.Fragment, null, React.createElement(Box, {\n    onLayout: layout,\n    borderTopColor: newProps.color,\n    borderRightColor: newProps.color,\n    style: [styles.firstProgressLayer, firstProgressLayerStyle]\n  }), renderThirdLayer(value), React.createElement(Box, {\n    _text: newProps._text\n  }, remainingProps.children)) : React.createElement(StyleAnimatedView, {\n    onLayout: layout,\n    borderTopColor: newProps.color,\n    borderRightColor: newProps.color,\n    style: styles.animateStyle\n  }));\n};\nexport default React.memo(React.forwardRef(CircularProgress));","map":{"version":3,"sources":["CircularProgress.tsx"],"names":["get","React","makeStyledComponent","useTheme","useThemeProps","canUseDom","default","Box","themeTools","useHasResponsiveProps","StyleAnimatedView","Animated","View","CircularProgress","value","isIndeterminate","max","min","props","ref","theme","isDomUsable","sizeProps","newProps","remainingProps","extractInObject","size","height","width","themeHeight","themeWidth","styleSize","parseInt","slice","Length","defaultThickness","thickness","degree","Value","loop","timing","toValue","duration","easing","Easing","linear","useNativeDriver","start","viewHeight","setViewHeight","useState","layout","e","nativeEvent","defaultStyling","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","borderLeftWidth","borderBottomWidth","position","borderLeftColor","borderBottomColor","styles","create","firstProgressLayer","borderTopWidth","borderRightWidth","transform","rotateZ","secondProgressLayer","offsetLayer","borderRadius","animateStyle","interpolate","inputRange","outputRange","halfSide","propStyle","percent","base_degrees","rotateBy","renderThirdLayer","color","trackColor","firstProgressLayerStyle","now","_text","children","memo","forwardRef"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport React from 'react';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useTheme, useThemeProps } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport { default as Box } from '../../primitives/Box';\nimport type { ICircularProgressProps } from './types';\nimport { themeTools } from '../../../theme';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyleAnimatedView = makeStyledComponent(Animated.View);\n\nconst CircularProgress = (\n  { value, isIndeterminate, max, min, ...props }: ICircularProgressProps,\n  ref: any\n) => {\n  const theme = useTheme();\n\n  const isDomUsable = canUseDom();\n  if (min) {\n    value = value - min;\n  }\n\n  let sizeProps;\n  let newProps = useThemeProps('CircularProgress', props);\n  let [, remainingProps] = themeTools.extractInObject(props, ['size']); // removing size from props so that Box don't accept size passed for CircularProgress\n\n  if (!newProps.size) {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width,\n    };\n  } else {\n    sizeProps = { height: newProps.size, width: newProps.size };\n  }\n  // fetching size from theme for passing into style prop\n  const themeHeight = get(theme, 'space.' + sizeProps.height);\n  const themeWidth = get(theme, 'space.' + sizeProps.width);\n\n  const styleSize = {\n    height: themeHeight\n      ? parseInt(themeHeight.slice(themeHeight.Length, -2), 10)\n      : sizeProps.height,\n    width: themeWidth\n      ? parseInt(themeWidth.slice(themeWidth.Length, -2), 10)\n      : sizeProps.width,\n  };\n\n  const defaultThickness = newProps.thickness;\n  const degree: any = new Animated.Value(0);\n  if (isIndeterminate) {\n    if (isDomUsable) {\n      Animated.loop(\n        Animated.timing(degree, {\n          toValue: 1,\n          duration: 600,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        })\n      ).start();\n    }\n  }\n  const [viewHeight, setViewHeight] = React.useState(0);\n  const layout = (e: any) => {\n    let height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n\n  const defaultStyling: any = {\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent',\n    ...styleSize,\n  };\n  const styles = StyleSheet.create({\n    firstProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    secondProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '45deg' }],\n    },\n    offsetLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      borderRadius: viewHeight / 2,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    animateStyle: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [\n        {\n          rotateZ: degree.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        },\n      ],\n    },\n  });\n  let halfSide = (max ? (min ? max - min : max) : 100) / 2; // calculating the halfvalue of the progress according to min and max\n\n  const propStyle = (percent: number, base_degrees: number) => {\n    const rotateBy = base_degrees + (percent * 180) / halfSide;\n    return {\n      transform: [{ rotateZ: rotateBy + 'deg' }],\n    };\n  };\n\n  const renderThirdLayer = (percent: number) => {\n    if (percent > halfSide) {\n      return (\n        <Box\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={[\n            styles.secondProgressLayer,\n            propStyle(percent - halfSide, 45),\n          ]}\n        />\n      );\n    } else {\n      return (\n        <Box\n          borderTopColor={newProps.trackColor}\n          borderRightColor={newProps.trackColor}\n          style={styles.offsetLayer}\n        />\n      );\n    }\n  };\n  let firstProgressLayerStyle;\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      {...sizeProps}\n      rounded={viewHeight / 2}\n      borderWidth={defaultThickness}\n      borderColor={newProps.trackColor}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      {...remainingProps}\n      ref={ref}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityValue={{\n        min,\n        max,\n        now: value,\n      }}\n    >\n      {!isIndeterminate ? (\n        <>\n          <Box\n            onLayout={layout}\n            borderTopColor={newProps.color}\n            borderRightColor={newProps.color}\n            style={[styles.firstProgressLayer, firstProgressLayerStyle]}\n          />\n          {renderThirdLayer(value)}\n          <Box _text={newProps._text}>{remainingProps.children}</Box>\n        </>\n      ) : (\n        <StyleAnimatedView\n          onLayout={layout}\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={styles.animateStyle}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(CircularProgress));\n"]},"metadata":{},"sourceType":"module"}