{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"in\", \"entryDuration\", \"exitDuration\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport PresenceTransition from \"../Transitions/PresenceTransition\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { usePropsResolution } from \"../../../hooks/\";\nvar Fade = function Fade(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _usePropsResolution = usePropsResolution('Fade', props),\n    animationState = _usePropsResolution.in,\n    entryDuration = _usePropsResolution.entryDuration,\n    exitDuration = _usePropsResolution.exitDuration,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (entryDuration) {\n    resolvedProps.animate.transition.duration = entryDuration;\n  }\n  if (exitDuration) {\n    resolvedProps.exit.transition.duration = exitDuration;\n  }\n  return React.createElement(PresenceTransition, _extends({\n    visible: animationState,\n    ref: ref\n  }, resolvedProps), children);\n};\nexport default React.memo(React.forwardRef(Fade));","map":{"version":3,"sources":["Fade.tsx"],"names":["React","PresenceTransition","useHasResponsiveProps","usePropsResolution","Fade","children","props","ref","in","animationState","entryDuration","exitDuration","resolvedProps","animate","transition","duration","exit","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP;AAEA,SAASC,qBAAT;AACA,SAASC,kBAAT;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAI,OAAwCG,GAArC,EAAmD;EAAA,IAAhDF,QAAF,QAAEA,QAAF;IAAeC,KAAAA;EAC3B,0BAKIH,kBAAkB,CAAC,MAAD,EAASG,KAAT,CANwC;IAExDG,cADA,uBACJD,EAAE;IACFE,aAFI,uBAEJA,aAFI;IAGJC,YAHI,uBAGJA,YAHI;IAIDC,aAAAA;;EAGL,IAAIV,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EAED,IAAII,aAAJ,EAAmB;IACjBE,aAAa,CAACC,OAAdD,CAAsBE,UAAtBF,CAAiCG,QAAjCH,GAA4CF,aAA5CE;EACD;EACD,IAAID,YAAJ,EAAkB;IAChBC,aAAa,CAACI,IAAdJ,CAAmBE,UAAnBF,CAA8BG,QAA9BH,GAAyCD,YAAzCC;EACD;EAED,OACE,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAA,QAAA,CAAA;IAAoB,OAAO,EAAEH,cAA7B;IAA6C,GAAG,EAAEF;EAAlD,CAAA,EAA2DK,aAA3D,CAAA,EACGP,QADH,CADF;AAKD,CAxBD;AA0BA,eAAeL,KAAK,CAACiB,IAANjB,CAAWA,KAAK,CAACkB,UAANlB,CAAiBI,IAAjBJ,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport PresenceTransition from '../Transitions/PresenceTransition';\nimport type { IFadeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst Fade = ({ children, ...props }: IFadeProps, ref?: any) => {\n  const {\n    in: animationState,\n    entryDuration,\n    exitDuration,\n    ...resolvedProps\n  } = usePropsResolution('Fade', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (entryDuration) {\n    resolvedProps.animate.transition.duration = entryDuration;\n  }\n  if (exitDuration) {\n    resolvedProps.exit.transition.duration = exitDuration;\n  }\n\n  return (\n    <PresenceTransition visible={animationState} ref={ref} {...resolvedProps}>\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(Fade));\n"]},"metadata":{},"sourceType":"module"}