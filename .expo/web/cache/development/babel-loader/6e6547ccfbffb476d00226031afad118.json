{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nvar getAttachedChildren = function getAttachedChildren(children) {\n  var childrenArray = React.Children.toArray(children);\n\n  if (childrenArray.length <= 1) {\n    return childrenArray;\n  }\n  var trailingChildren = childrenArray.slice(1);\n  trailingChildren.pop();\n  var marginProp = _objectSpread({}, {\n    ml: 0,\n    mr: 0,\n    roundedRight: 0,\n    roundedLeft: 0\n  });\n  var leftElemProp = _objectSpread({}, {\n    mr: 0,\n    roundedRight: 0\n  });\n  var rightElemProp = _objectSpread({}, {\n    ml: 0,\n    roundedLeft: 0\n  });\n\n  var trailingChildrenWithSpacing = trailingChildren.map(function (child) {\n    return React.cloneElement(child, marginProp, child.props.children);\n  });\n\n  return [React.cloneElement(childrenArray[0], leftElemProp, childrenArray[0].props.children)].concat(_toConsumableArray(trailingChildrenWithSpacing), [React.cloneElement(childrenArray[childrenArray.length - 1], rightElemProp, childrenArray[childrenArray.length - 1].props.children)]);\n};\nexport default getAttachedChildren;","map":{"version":3,"sources":["getAttachedChildren.ts"],"names":["React","getAttachedChildren","children","childrenArray","Children","toArray","length","trailingChildren","slice","pop","marginProp","ml","mr","roundedRight","roundedLeft","leftElemProp","rightElemProp","trailingChildrenWithSpacing","map","child","cloneElement","props"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,mBAAmB,GAAIC,SAAvBD,mBAAmB,CAAIC,QAAD,EAAmB;EAC7C,IAAMC,aAAkB,GAAGH,KAAK,CAACI,QAANJ,CAAeK,OAAfL,CAAuBE,QAAvBF,CAA3B;;EAKA,IAAIG,aAAa,CAACG,MAAdH,IAAwB,CAA5B,EAA+B;IAC7B,OAAOA,aAAP;EACD;EAED,IAAMI,gBAAgB,GAAGJ,aAAa,CAACK,KAAdL,CAAoB,CAApBA,CAAzB;EACAI,gBAAgB,CAACE,GAAjBF,EAAAA;EACA,IAAMG,UAAkB,qBACnB;IAAEC,EAAE,EAAE,CAAN;IAASC,EAAE,EAAE,CAAb;IAAgBC,YAAY,EAAE,CAA9B;IAAiCC,WAAW,EAAE;EAA9C,CAAA,CADL;EAGA,IAAMC,YAAoB,qBACrB;IAAEH,EAAE,EAAE,CAAN;IAASC,YAAY,EAAE;EAAvB,CAAA,CADL;EAGA,IAAMG,aAAqB,qBACtB;IAAEL,EAAE,EAAE,CAAN;IAASG,WAAW,EAAE;EAAtB,CAAA,CADL;;EAOA,IAAMG,2BAA2B,GAAG,gBAAgB,CAACC,GAAjB,CAAsBC,UAAAA,KAAD,EAAgB;IACvE,OAAOnB,KAAK,CAACoB,YAANpB,CAAmBmB,KAAnBnB,EAA0BU,UAA1BV,EAAsCmB,KAAK,CAACE,KAANF,CAAYjB,QAAlDF,CAAP;EACD,CAFmC,CAApC;;EAMA,QACEA,KAAK,CAACoB,YAANpB,CACEG,aAAa,CAAC,CAAD,CADfH,EAEEe,YAFFf,EAGEG,aAAa,CAAC,CAAD,CAAbA,CAAiBkB,KAAjBlB,CAAuBD,QAHzBF,CADK,4BAMFiB,2BANE,IAOLjB,KAAK,CAACoB,YAANpB,CACEG,aAAa,CAACA,aAAa,CAACG,MAAdH,GAAuB,CAAxB,CADfH,EAEEgB,aAFFhB,EAGEG,aAAa,CAACA,aAAa,CAACG,MAAdH,GAAuB,CAAxB,CAAbA,CAAwCkB,KAAxClB,CAA8CD,QAHhDF,CAPF;AAaD,CA5CD;AA8CA,eAAeC,mBAAf","sourcesContent":["import React from 'react';\n\nconst getAttachedChildren = (children: any) => {\n  const childrenArray: any = React.Children.toArray(children);\n  /*\n  | Separate the trailing (not first) children from the children array\n  */\n\n  if (childrenArray.length <= 1) {\n    return childrenArray;\n  }\n\n  const trailingChildren = childrenArray.slice(1);\n  trailingChildren.pop();\n  const marginProp: object = {\n    ...{ ml: 0, mr: 0, roundedRight: 0, roundedLeft: 0 },\n  };\n  const leftElemProp: object = {\n    ...{ mr: 0, roundedRight: 0 },\n  };\n  const rightElemProp: object = {\n    ...{ ml: 0, roundedLeft: 0 },\n  };\n\n  /*\n  | Add the margiin to the children\n  */\n  const trailingChildrenWithSpacing = trailingChildren.map((child: any) => {\n    return React.cloneElement(child, marginProp, child.props.children);\n  });\n  /*\n  | New children array with applied margin to trailing children\n  */\n  return [\n    React.cloneElement(\n      childrenArray[0],\n      leftElemProp,\n      childrenArray[0].props.children\n    ),\n    ...trailingChildrenWithSpacing,\n    React.cloneElement(\n      childrenArray[childrenArray.length - 1],\n      rightElemProp,\n      childrenArray[childrenArray.length - 1].props.children\n    ),\n  ];\n};\n\nexport default getAttachedChildren;\n"]},"metadata":{},"sourceType":"module"}