{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"debug\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { getStyleAndFilteredProps } from \"../theme/styled-system\";\nimport { useTheme } from \"./useTheme\";\nimport React from 'react';\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { useResponsiveQuery } from \"../utils/useResponsiveQuery\";\nimport { getStyledSystemPropsAndRestProps } from \"../utils/getStyledSystemPropsAndRestProps\";\n\nimport stableHash from 'stable-hash';\nexport var useStyledSystemPropsResolver = function useStyledSystemPropsResolver(_ref) {\n  var propStyle = _ref.style,\n    debug = _ref.debug,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = useTheme();\n  var _useNativeBaseConfig = useNativeBaseConfig('makeStyledComponent'),\n    currentBreakpoint = _useNativeBaseConfig.currentBreakpoint,\n    config = _useNativeBaseConfig.config;\n  var strictMode = config.strictMode;\n  var _useResponsiveQuery = useResponsiveQuery(),\n    getResponsiveStyles = _useResponsiveQuery.getResponsiveStyles;\n  var _getStyledSystemProps = getStyledSystemPropsAndRestProps(props),\n    styledSystemProps = _getStyledSystemProps.styledSystemProps,\n    restProps = _getStyledSystemProps.restProps;\n  var _React$useMemo = React.useMemo(function () {\n      var _getStyleAndFilteredP = getStyleAndFilteredProps({\n          styledSystemProps: styledSystemProps,\n          theme: theme,\n          debug: debug,\n          currentBreakpoint: currentBreakpoint,\n          strictMode: strictMode,\n          getResponsiveStyles: getResponsiveStyles\n        }),\n        styleSheet = _getStyleAndFilteredP.styleSheet,\n        dataSet = _getStyleAndFilteredP.dataSet,\n        styleFromProps = _getStyleAndFilteredP.styleFromProps;\n      if (propStyle) {\n        return {\n          style: [styleSheet.box, propStyle],\n          dataSet: dataSet,\n          styleFromProps: styleFromProps\n        };\n      } else {\n        return {\n          style: styleSheet.box,\n          dataSet: dataSet,\n          styleFromProps: styleFromProps\n        };\n      }\n    }, [\n    stableHash(styledSystemProps), theme, debug, currentBreakpoint, strictMode, propStyle, getResponsiveStyles, props]),\n    style = _React$useMemo.style,\n    dataSet = _React$useMemo.dataSet,\n    styleFromProps = _React$useMemo.styleFromProps;\n  if (process.env.NODE_ENV === 'development' && debug) {\n    console.log('style,resprops', currentBreakpoint);\n  }\n  restProps.dataSet = _objectSpread(_objectSpread({}, restProps.dataSet), dataSet);\n  return [style, restProps, styleFromProps];\n};","map":{"version":3,"sources":["useStyledSystemPropsResolver.ts"],"names":["getStyleAndFilteredProps","useTheme","React","useNativeBaseConfig","useResponsiveQuery","getStyledSystemPropsAndRestProps","stableHash","useStyledSystemPropsResolver","style","propStyle","debug","props","theme","currentBreakpoint","config","strictMode","getResponsiveStyles","styledSystemProps","restProps","dataSet","styleFromProps","useMemo","styleSheet","box","process","env","NODE_ENV","console","log"],"mappings":";;;;;AAAA,SAASA,wBAAT;AACA,SAASC,QAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT;AACA,SAASC,kBAAT;AACA,SAASC,gCAAT;;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAO,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA4B,OAI9B;EAAA,IAHFE,SADoC,QAC3CD,KAAK;IACLE,KAF2C,QAE3CA,KAF2C;IAGxCC,KAAAA;EAEH,IAAMC,KAAK,GAAGX,QAAQ,EAAtB;EACA,2BAAsCE,mBAAmB,CACvD,qBADuD,CAAzD;IAAQU,iBAAF,wBAAEA,iBAAF;IAAqBC,MAAAA,wBAAAA,MAAAA;EAG3B,IAAMC,UAAU,GAAGD,MAAM,CAACC,UAA1B;EAEA,0BAAgCX,kBAAkB,EAAlD;IAAQY,mBAAAA,uBAAAA,mBAAAA;EAER,4BAAyCX,gCAAgC,CACvEM,KADuE,CAAzE;IAAQM,iBAAF,yBAAEA,iBAAF;IAAqBC,SAAAA,yBAAAA,SAAAA;EAI3B,qBAA2C,KAAK,CAACG,OAAN,CAAc,YAAM;MAC7D,4BAAgDrB,wBAAwB,CAAC;UACvEiB,iBADuE,EACvEA,iBADuE;UAEvEL,KAFuE,EAEvEA,KAFuE;UAGvEF,KAHuE,EAGvEA,KAHuE;UAIvEG,iBAJuE,EAIvEA,iBAJuE;UAKvEE,UALuE,EAKvEA,UALuE;UAMvEC,mBAAAA,EAAAA;QANuE,CAAD,CAAxE;QAAQM,UAAF,yBAAEA,UAAF;QAAcH,OAAd,yBAAcA,OAAd;QAAuBC,cAAAA,yBAAAA,cAAAA;MAQ7B,IAAIX,SAAJ,EAAe;QACb,OAAO;UAAED,KAAK,EAAE,CAACc,UAAU,CAACC,GAAZ,EAAiBd,SAAjB,CAAT;UAAsCU,OAAtC,EAAsCA,OAAtC;UAA+CC,cAAAA,EAAAA;QAA/C,CAAP;MACD,CAFD,MAEO;QACL,OAAO;UAAEZ,KAAK,EAAEc,UAAU,CAACC,GAApB;UAAyBJ,OAAzB,EAAyBA,OAAzB;UAAkCC,cAAAA,EAAAA;QAAlC,CAAP;MAZ2D;IAe9D,CAf0C,EAexC;IAEDd,UAAU,CAACW,iBAAD,CAFT,EAGDL,KAHC,EAIDF,KAJC,EAKDG,iBALC,EAMDE,UANC,EAODN,SAPC,EAQDO,mBARC,EASDL,KATC,CAfwC,CAA3C;IAAQH,KAAF,kBAAEA,KAAF;IAASW,OAAT,kBAASA,OAAT;IAAkBC,cAAAA,kBAAAA,cAAAA;EA0BxB,IAAII,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,aAAzBA,IAA0Cd,KAA9C,EAAqD;IAEnDiB,OAAO,CAACC,GAARD,CAAY,gBAAZA,EAA8Bd,iBAA9Bc,CAAAA;EACD;EAEDT,SAAS,CAACC,OAAVD,mCAAyBA,SAAS,CAACC,OAAf,GAA2BA,OAAAA,CAA/CD;EAEA,OAAO,CAACV,KAAD,EAAQU,SAAR,EAAmBE,cAAnB,CAAP;AACD,CAnDM","sourcesContent":["import { getStyleAndFilteredProps } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\nimport { getStyledSystemPropsAndRestProps } from '../utils/getStyledSystemPropsAndRestProps';\n//@ts-ignore\nimport stableHash from 'stable-hash';\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { getResponsiveStyles } = useResponsiveQuery();\n\n  const { styledSystemProps, restProps } = getStyledSystemPropsAndRestProps(\n    props\n  );\n\n  const { style, dataSet, styleFromProps } = React.useMemo(() => {\n    const { styleSheet, dataSet, styleFromProps } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], dataSet, styleFromProps };\n    } else {\n      return { style: styleSheet.box, dataSet, styleFromProps };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stableHash(styledSystemProps),\n    theme,\n    debug,\n    currentBreakpoint,\n    strictMode,\n    propStyle,\n    getResponsiveStyles,\n    props,\n  ]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = { ...restProps.dataSet, ...dataSet };\n\n  return [style, restProps, styleFromProps];\n};\n"]},"metadata":{},"sourceType":"module"}