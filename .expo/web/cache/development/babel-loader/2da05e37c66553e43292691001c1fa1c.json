{"ast":null,"code":"\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar emptyObject = {};\nvar supportsCSS3TextDecoration = !canUseDOM || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\nvar ignoredProps = {\n  elevation: true,\n  overlayColor: true,\n  resizeMode: true,\n  tintColor: true\n};\nvar MONOSPACE_FONT_STACK = 'monospace,monospace';\nvar SYSTEM_FONT_STACK = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\nvar STYLE_SHORT_FORM_EXPANSIONS = {\n  borderColor: ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\n  borderRadius: ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'],\n  borderStyle: ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\n  borderWidth: ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\n  marginHorizontal: ['marginRight', 'marginLeft'],\n  marginVertical: ['marginTop', 'marginBottom'],\n  overflow: ['overflowX', 'overflowY'],\n  overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n  paddingHorizontal: ['paddingRight', 'paddingLeft'],\n  paddingVertical: ['paddingTop', 'paddingBottom']\n};\n\nvar mapTransform = function mapTransform(transform) {\n  var type = Object.keys(transform)[0];\n\n  var value = transform[type];\n  if (type === 'matrix' || type === 'matrix3d') {\n    return \"\".concat(type, \"(\").concat(value.join(','), \")\");\n  } else {\n    var normalizedValue = normalizeValueWithProperty(value, type);\n    return \"\".concat(type, \"(\").concat(normalizedValue, \")\");\n  }\n};\nexport var createTransformValue = function createTransformValue(style) {\n  var transform = style.transform;\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  }\n  return transform;\n};\n\nvar createReactDOMStyle = function createReactDOMStyle(style, isInline) {\n  if (!style) {\n    return emptyObject;\n  }\n  var resolvedStyle = {};\n  for (var prop in style) {\n    var value = style[prop];\n    if (\n    value == null ||\n    ignoredProps[prop]) {\n      continue;\n    }\n    if (prop === 'aspectRatio') {\n      resolvedStyle[prop] = value.toString();\n    } else if (prop === 'backgroundClip') {\n      if (value === 'text') {\n        resolvedStyle.backgroundClip = value;\n        resolvedStyle.WebkitBackgroundClip = value;\n      }\n    } else if (prop === 'flex') {\n      if (value === -1) {\n        resolvedStyle.flexGrow = 0;\n        resolvedStyle.flexShrink = 1;\n        resolvedStyle.flexBasis = 'auto';\n      } else {\n        resolvedStyle.flex = value;\n      }\n    } else if (prop === 'font') {\n      resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n    } else if (prop === 'fontFamily') {\n      if (value.indexOf('System') > -1) {\n        var stack = value.split(/,\\s*/);\n        stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n        resolvedStyle[prop] = stack.join(',');\n      } else if (value === 'monospace') {\n        resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n      } else {\n        resolvedStyle[prop] = value;\n      }\n    } else if (prop === 'fontVariant') {\n      if (Array.isArray(value) && value.length > 0) {\n        resolvedStyle.fontVariant = value.join(' ');\n      }\n    } else if (prop === 'textAlignVertical') {\n      resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n    } else if (prop === 'textDecorationLine') {\n      if (!supportsCSS3TextDecoration) {\n        resolvedStyle.textDecoration = value;\n      } else {\n        resolvedStyle.textDecorationLine = value;\n      }\n    } else if (prop === 'transform' || prop === 'transformMatrix') {\n      resolvedStyle.transform = createTransformValue(style);\n    } else if (prop === 'writingDirection') {\n      resolvedStyle.direction = value;\n    } else {\n      (function () {\n        var value = normalizeValueWithProperty(style[prop], prop);\n        var longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n        if (isInline && prop === 'margin') {\n          if (style.marginHorizontal == null) {\n            resolvedStyle.marginLeft = value;\n            resolvedStyle.marginRight = value;\n          }\n          if (style.marginVertical == null) {\n            resolvedStyle.marginTop = value;\n            resolvedStyle.marginBottom = value;\n          }\n        } else if (isInline && prop === 'padding') {\n          if (style.paddingHorizontal == null) {\n            resolvedStyle.paddingLeft = value;\n            resolvedStyle.paddingRight = value;\n          }\n          if (style.paddingVertical == null) {\n            resolvedStyle.paddingTop = value;\n            resolvedStyle.paddingBottom = value;\n          }\n        } else if (longFormProperties) {\n          longFormProperties.forEach(function (longForm, _i) {\n            if (style[longForm] == null) {\n              resolvedStyle[longForm] = value;\n            }\n          });\n        } else {\n          resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n        }\n      })();\n    }\n  }\n  return resolvedStyle;\n};\nexport default createReactDOMStyle;","map":{"version":3,"sources":["createReactDOMStyle.ts"],"names":["normalizeValueWithProperty","canUseDOM","window","document","createElement","emptyObject","supportsCSS3TextDecoration","CSS","supports","ignoredProps","elevation","overlayColor","resizeMode","tintColor","MONOSPACE_FONT_STACK","SYSTEM_FONT_STACK","STYLE_SHORT_FORM_EXPANSIONS","borderColor","borderRadius","borderStyle","borderWidth","marginHorizontal","marginVertical","overflow","overscrollBehavior","paddingHorizontal","paddingVertical","mapTransform","transform","type","Object","keys","value","join","normalizedValue","createTransformValue","style","Array","isArray","map","createReactDOMStyle","isInline","resolvedStyle","prop","toString","backgroundClip","WebkitBackgroundClip","flexGrow","flexShrink","flexBasis","flex","replace","indexOf","stack","split","length","fontVariant","verticalAlign","textDecoration","textDecorationLine","direction","longFormProperties","marginLeft","marginRight","marginTop","marginBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","forEach","longForm","_i"],"mappings":"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","sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n// This functions is taken from react native web\n\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\n\ntype Style = { [key: string]: any };\nconst canUseDOM: boolean = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/**\n * The browser implements the CSS cascade, where the order of properties is a\n * factor in determining which styles to paint. React Native is different. It\n * gives giving precedence to the more specific style property. For example,\n * the value of `paddingTop` takes precedence over that of `padding`.\n *\n * This module creates mutally exclusive style declarations by expanding all of\n * React Native's supported shortform properties (e.g. `padding`) to their\n * longfrom equivalents.\n */\n\nconst emptyObject = {};\n\nconst supportsCSS3TextDecoration =\n  !canUseDOM ||\n  (window.CSS != null &&\n    window.CSS.supports != null &&\n    (window.CSS.supports('text-decoration-line', 'none') ||\n      window.CSS.supports('-webkit-text-decoration-line', 'none')));\n\nconst ignoredProps: {\n  elevation: boolean;\n  overlayColor: boolean;\n  resizeMode: boolean;\n  tintColor: boolean;\n} = {\n  elevation: true,\n  overlayColor: true,\n  resizeMode: true,\n  tintColor: true,\n};\n\nconst MONOSPACE_FONT_STACK = 'monospace,monospace';\n\nconst SYSTEM_FONT_STACK =\n  '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\n\nconst STYLE_SHORT_FORM_EXPANSIONS: any = {\n  borderColor: [\n    'borderTopColor',\n    'borderRightColor',\n    'borderBottomColor',\n    'borderLeftColor',\n  ],\n  borderRadius: [\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderBottomRightRadius',\n    'borderBottomLeftRadius',\n  ],\n  borderStyle: [\n    'borderTopStyle',\n    'borderRightStyle',\n    'borderBottomStyle',\n    'borderLeftStyle',\n  ],\n  borderWidth: [\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n  ],\n  marginHorizontal: ['marginRight', 'marginLeft'],\n  marginVertical: ['marginTop', 'marginBottom'],\n  overflow: ['overflowX', 'overflowY'],\n  overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n  paddingHorizontal: ['paddingRight', 'paddingLeft'],\n  paddingVertical: ['paddingTop', 'paddingBottom'],\n};\n\n/**\n * Transform\n */\n\n// { scale: 2 } => 'scale(2)'\n// { translateX: 20 } => 'translateX(20px)'\n// { matrix: [1,2,3,4,5,6] } => 'matrix(1,2,3,4,5,6)'\nconst mapTransform = (transform: Object): string => {\n  const type = Object.keys(transform)[0];\n  //@ts-ignore\n  const value = transform[type];\n  if (type === 'matrix' || type === 'matrix3d') {\n    return `${type}(${value.join(',')})`;\n  } else {\n    const normalizedValue = normalizeValueWithProperty(value, type);\n    return `${type}(${normalizedValue})`;\n  }\n};\n\nexport const createTransformValue = (style: Style): string => {\n  let transform = style.transform;\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  }\n  return transform;\n};\n\n/**\n * Reducer\n */\n\nconst createReactDOMStyle = (style: Style, isInline?: boolean): Style => {\n  if (!style) {\n    return emptyObject;\n  }\n\n  const resolvedStyle: any = {};\n\n  for (const prop in style) {\n    const value = style[prop];\n\n    if (\n      // Ignore everything with a null value\n      value == null ||\n      // Ignore some React Native styles\n      //@ts-ignore\n      ignoredProps[prop]\n    ) {\n      continue;\n    }\n\n    if (prop === 'aspectRatio') {\n      resolvedStyle[prop] = value.toString();\n    } else if (prop === 'backgroundClip') {\n      // TODO: remove once this issue is fixed\n      // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n      if (value === 'text') {\n        resolvedStyle.backgroundClip = value;\n        resolvedStyle.WebkitBackgroundClip = value;\n      }\n    } else if (prop === 'flex') {\n      if (value === -1) {\n        resolvedStyle.flexGrow = 0;\n        resolvedStyle.flexShrink = 1;\n        resolvedStyle.flexBasis = 'auto';\n      } else {\n        resolvedStyle.flex = value;\n      }\n    } else if (prop === 'font') {\n      resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n    } else if (prop === 'fontFamily') {\n      if (value.indexOf('System') > -1) {\n        const stack = value.split(/,\\s*/);\n        stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n        resolvedStyle[prop] = stack.join(',');\n      } else if (value === 'monospace') {\n        resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n      } else {\n        resolvedStyle[prop] = value;\n      }\n    } else if (prop === 'fontVariant') {\n      if (Array.isArray(value) && value.length > 0) {\n        resolvedStyle.fontVariant = value.join(' ');\n      }\n    } else if (prop === 'textAlignVertical') {\n      resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n    } else if (prop === 'textDecorationLine') {\n      // use 'text-decoration' for browsers that only support CSS2\n      // text-decoration (e.g., IE, Edge)\n      if (!supportsCSS3TextDecoration) {\n        resolvedStyle.textDecoration = value;\n      } else {\n        resolvedStyle.textDecorationLine = value;\n      }\n    } else if (prop === 'transform' || prop === 'transformMatrix') {\n      resolvedStyle.transform = createTransformValue(style);\n    } else if (prop === 'writingDirection') {\n      resolvedStyle.direction = value;\n    } else {\n      const value = normalizeValueWithProperty(style[prop], prop);\n      const longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n      if (isInline && prop === 'margin') {\n        if (style.marginHorizontal == null) {\n          resolvedStyle.marginLeft = value;\n          resolvedStyle.marginRight = value;\n        }\n        if (style.marginVertical == null) {\n          resolvedStyle.marginTop = value;\n          resolvedStyle.marginBottom = value;\n        }\n      } else if (isInline && prop === 'padding') {\n        if (style.paddingHorizontal == null) {\n          resolvedStyle.paddingLeft = value;\n          resolvedStyle.paddingRight = value;\n        }\n        if (style.paddingVertical == null) {\n          resolvedStyle.paddingTop = value;\n          resolvedStyle.paddingBottom = value;\n        }\n      } else if (longFormProperties) {\n        longFormProperties.forEach((longForm: any, _i: any) => {\n          // The value of any longform property in the original styles takes\n          // precedence over the shortform's value.\n          if (style[longForm] == null) {\n            resolvedStyle[longForm] = value;\n          }\n        });\n      } else {\n        resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n      }\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default createReactDOMStyle;\n"]},"metadata":{},"sourceType":"module"}