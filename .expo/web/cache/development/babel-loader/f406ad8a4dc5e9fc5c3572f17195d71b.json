{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"shouldFocusWrap\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useId as $1Hnir$useId, filterDOMProps as $1Hnir$filterDOMProps, mergeProps as $1Hnir$mergeProps, useSlotId as $1Hnir$useSlotId } from \"@react-aria/utils\";\nimport { useLocalizedStringFormatter as $1Hnir$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useLongPress as $1Hnir$useLongPress, usePress as $1Hnir$usePress, useHover as $1Hnir$useHover, isFocusVisible as $1Hnir$isFocusVisible } from \"@react-aria/interactions\";\nimport { useOverlayTrigger as $1Hnir$useOverlayTrigger } from \"@react-aria/overlays\";\nimport { useSelectableList as $1Hnir$useSelectableList, useSelectableItem as $1Hnir$useSelectableItem } from \"@react-aria/selection\";\nimport { getItemCount as $1Hnir$getItemCount } from \"@react-stately/collections\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $9bdd31893c9700c3$exports = {};\nvar $c0398ad35c3639b7$exports = {};\n$c0398ad35c3639b7$exports = {\n  \"longPressMessage\": \"\\u0627\\u0636\\u063A\\u0637 \\u0645\\u0637\\u0648\\u0644\\u0627\\u064B \\u0623\\u0648 \\u0627\\u0636\\u063A\\u0637 \\u0639\\u0644\\u0649 Alt + \\u0627\\u0644\\u0633\\u0647\\u0645 \\u0644\\u0623\\u0633\\u0641\\u0644 \\u0644\\u0641\\u062A\\u062D \\u0627\\u0644\\u0642\\u0627\\u0626\\u0645\\u0629\"\n};\nvar $7af657c4165927c3$exports = {};\n$7af657c4165927c3$exports = {\n  \"longPressMessage\": \"\\u041D\\u0430\\u0442\\u0438\\u0441\\u043D\\u0435\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0434\\u044A\\u043B\\u0436\\u0438\\u0442\\u0435\\u043B\\u043D\\u043E \\u0438\\u043B\\u0438 \\u043D\\u0430\\u0442\\u0438\\u0441\\u043D\\u0435\\u0442\\u0435 Alt+ \\u0441\\u0442\\u0440\\u0435\\u043B\\u043A\\u0430 \\u043D\\u0430\\u0434\\u043E\\u043B\\u0443, \\u0437\\u0430 \\u0434\\u0430 \\u043E\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043C\\u0435\\u043D\\u044E\\u0442\\u043E\"\n};\nvar $d95d4da6d531ab81$exports = {};\n$d95d4da6d531ab81$exports = {\n  \"longPressMessage\": \"Dlouh\\xFDm stiskem nebo stisknut\\xEDm kl\\xE1ves Alt + \\u0161ipka dol\\u016F otev\\u0159ete nab\\xEDdku\"\n};\nvar $24ebda9c775dca17$exports = {};\n$24ebda9c775dca17$exports = {\n  \"longPressMessage\": \"Langt tryk eller tryk p\\xE5 Alt + pil ned for at \\xE5bne menuen\"\n};\nvar $743e0dfca6cab1e9$exports = {};\n$743e0dfca6cab1e9$exports = {\n  \"longPressMessage\": \"Dr\\xFCcken Sie lange oder dr\\xFCcken Sie Alt + Nach-unten, um das Men\\xFC zu \\xF6ffnen\"\n};\nvar $a2f41026e05f1c84$exports = {};\n$a2f41026e05f1c84$exports = {\n  \"longPressMessage\": \"\\u03A0\\u03B9\\u03AD\\u03C3\\u03C4\\u03B5 \\u03C0\\u03B1\\u03C1\\u03B1\\u03C4\\u03B5\\u03C4\\u03B1\\u03BC\\u03AD\\u03BD\\u03B1 \\u03AE \\u03C0\\u03B1\\u03C4\\u03AE\\u03C3\\u03C4\\u03B5 Alt + \\u03BA\\u03AC\\u03C4\\u03C9 \\u03B2\\u03AD\\u03BB\\u03BF\\u03C2 \\u03B3\\u03B9\\u03B1 \\u03BD\\u03B1 \\u03B1\\u03BD\\u03BF\\u03AF\\u03BE\\u03B5\\u03C4\\u03B5 \\u03C4\\u03BF \\u03BC\\u03B5\\u03BD\\u03BF\\u03CD\"\n};\nvar $43b800e97c901737$exports = {};\n$43b800e97c901737$exports = {\n  \"longPressMessage\": \"Long press or press Alt + ArrowDown to open menu\"\n};\nvar $442f5f6ac211e29f$exports = {};\n$442f5f6ac211e29f$exports = {\n  \"longPressMessage\": \"Mantenga pulsado o pulse Alt + flecha abajo para abrir el men\\xFA\"\n};\nvar $dff280acfeb2d8ac$exports = {};\n$dff280acfeb2d8ac$exports = {\n  \"longPressMessage\": \"Men\\xFC\\xFC avamiseks vajutage pikalt v\\xF5i vajutage klahve Alt + allanool\"\n};\nvar $51608325613944d7$exports = {};\n$51608325613944d7$exports = {\n  \"longPressMessage\": \"Avaa valikko painamalla pohjassa tai n\\xE4pp\\xE4inyhdistelm\\xE4ll\\xE4 Alt + Alanuoli\"\n};\nvar $c4a1b1eabeaa87be$exports = {};\n$c4a1b1eabeaa87be$exports = {\n  \"longPressMessage\": \"Appuyez de mani\\xE8re prolong\\xE9e ou appuyez sur Alt\\xA0+\\xA0Fl\\xE8che vers le bas pour ouvrir le menu.\"\n};\nvar $8c74815cdee18d1b$exports = {};\n$8c74815cdee18d1b$exports = {\n  \"longPressMessage\": \"\\u05DC\\u05D7\\u05E5 \\u05DC\\u05D7\\u05D9\\u05E6\\u05D4 \\u05D0\\u05E8\\u05D5\\u05DB\\u05D4 \\u05D0\\u05D5 \\u05D4\\u05E7\\u05E9 Alt + ArrowDown \\u05DB\\u05D3\\u05D9 \\u05DC\\u05E4\\u05EA\\u05D5\\u05D7 \\u05D0\\u05EA \\u05D4\\u05EA\\u05E4\\u05E8\\u05D9\\u05D8\"\n};\nvar $fd0e9ef6a7fe0ec9$exports = {};\n$fd0e9ef6a7fe0ec9$exports = {\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika\"\n};\nvar $a89a74a39eba465a$exports = {};\n$a89a74a39eba465a$exports = {\n  \"longPressMessage\": \"Nyomja meg hosszan, vagy nyomja meg az Alt + lefele ny\\xEDl gombot a men\\xFC megnyit\\xE1s\\xE1hoz\"\n};\nvar $edc7c66594a0ae8a$exports = {};\n$edc7c66594a0ae8a$exports = {\n  \"longPressMessage\": \"Premere a lungo o premere Alt + Freccia gi\\xF9 per aprire il menu\"\n};\nvar $f1ab51510712db52$exports = {};\n$f1ab51510712db52$exports = {\n  \"longPressMessage\": \"\\u9577\\u62BC\\u3057\\u307E\\u305F\\u306F Alt+\\u4E0B\\u77E2\\u5370\\u30AD\\u30FC\\u3067\\u30E1\\u30CB\\u30E5\\u30FC\\u3092\\u958B\\u304F\"\n};\nvar $f9b672d9b82fa3d6$exports = {};\n$f9b672d9b82fa3d6$exports = {\n  \"longPressMessage\": \"\\uAE38\\uAC8C \\uB204\\uB974\\uAC70\\uB098 Alt + \\uC544\\uB798\\uCABD \\uD654\\uC0B4\\uD45C\\uB97C \\uB20C\\uB7EC \\uBA54\\uB274 \\uC5F4\\uAE30\"\n};\nvar $a385f3910feda499$exports = {};\n$a385f3910feda499$exports = {\n  \"longPressMessage\": \"Nor\\u0117dami atidaryti meniu, nuspaud\\u0119 palaikykite arba paspauskite \\u201EAlt + ArrowDown\\u201C.\"\n};\nvar $4f1bde932c441789$exports = {};\n$4f1bde932c441789$exports = {\n  \"longPressMessage\": \"Lai atv\\u0113rtu izv\\u0113lni, turiet nospiestu vai nospiediet tausti\\u0146u kombin\\u0101ciju Alt + lejupv\\u0113rst\\u0101 bulti\\u0146a\"\n};\nvar $914a51a8a594d5be$exports = {};\n$914a51a8a594d5be$exports = {\n  \"longPressMessage\": \"Langt trykk eller trykk Alt + PilNed for \\xE5 \\xE5pne menyen\"\n};\nvar $89aaf803103bb500$exports = {};\n$89aaf803103bb500$exports = {\n  \"longPressMessage\": \"Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen\"\n};\nvar $c685891476dbaaca$exports = {};\n$c685891476dbaaca$exports = {\n  \"longPressMessage\": \"Naci\\u015Bnij i przytrzymaj lub naci\\u015Bnij klawisze Alt + Strza\\u0142ka w d\\xF3\\u0142, aby otworzy\\u0107 menu\"\n};\nvar $885879b9b10c2959$exports = {};\n$885879b9b10c2959$exports = {\n  \"longPressMessage\": \"Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu\"\n};\nvar $6b39616688a51692$exports = {};\n$6b39616688a51692$exports = {\n  \"longPressMessage\": \"Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu\"\n};\nvar $f26362aed63f47e2$exports = {};\n$f26362aed63f47e2$exports = {\n  \"longPressMessage\": \"Ap\\u0103sa\\u021Bi lung sau ap\\u0103sa\\u021Bi pe Alt + s\\u0103geat\\u0103 \\xEEn jos pentru a deschide meniul\"\n};\nvar $06cbade644558bf0$exports = {};\n$06cbade644558bf0$exports = {\n  \"longPressMessage\": \"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\u0438 \\u0443\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0439\\u0442\\u0435 \\u0438\\u043B\\u0438 \\u043D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 Alt + \\u0421\\u0442\\u0440\\u0435\\u043B\\u043A\\u0430 \\u0432\\u043D\\u0438\\u0437, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043C\\u0435\\u043D\\u044E\"\n};\nvar $0a391ff68f9d59b1$exports = {};\n$0a391ff68f9d59b1$exports = {\n  \"longPressMessage\": \"Ponuku otvor\\xEDte dlh\\xFDm stla\\u010Den\\xEDm alebo stla\\u010Den\\xEDm kl\\xE1vesu Alt + kl\\xE1vesu so \\u0161\\xEDpkou nadol\"\n};\nvar $8193cf0e649c7928$exports = {};\n$8193cf0e649c7928$exports = {\n  \"longPressMessage\": \"Za odprtje menija pritisnite in dr\\u017Eite gumb ali pritisnite Alt+pu\\u0161\\u010Dica navzdol\"\n};\nvar $f398debcce5a5c55$exports = {};\n$f398debcce5a5c55$exports = {\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni\"\n};\nvar $9e9fef000aa4c013$exports = {};\n$9e9fef000aa4c013$exports = {\n  \"longPressMessage\": \"H\\xE5ll nedtryckt eller tryck p\\xE5 Alt + pil ned\\xE5t f\\xF6r att \\xF6ppna menyn\"\n};\nvar $c016c8183bbe3d68$exports = {};\n$c016c8183bbe3d68$exports = {\n  \"longPressMessage\": \"Men\\xFCy\\xFC a\\xE7mak i\\xE7in uzun bas\\u0131n veya Alt + A\\u015Fa\\u011F\\u0131 Ok tu\\u015Funa bas\\u0131n\"\n};\nvar $ca4f6c8462244e62$exports = {};\n$ca4f6c8462244e62$exports = {\n  \"longPressMessage\": \"\\u0414\\u043E\\u0432\\u0433\\u043E \\u0430\\u0431\\u043E \\u0437\\u0432\\u0438\\u0447\\u0430\\u0439\\u043D\\u043E \\u043D\\u0430\\u0442\\u0438\\u0441\\u043D\\u0456\\u0442\\u044C \\u043A\\u043E\\u043C\\u0431\\u0456\\u043D\\u0430\\u0446\\u0456\\u044E \\u043A\\u043B\\u0430\\u0432\\u0456\\u0448 Alt \\u0456 \\u0441\\u0442\\u0440\\u0456\\u043B\\u043A\\u0430 \\u0432\\u043D\\u0438\\u0437, \\u0449\\u043E\\u0431 \\u0432\\u0456\\u0434\\u043A\\u0440\\u0438\\u0442\\u0438 \\u043C\\u0435\\u043D\\u044E\"\n};\nvar $2d9960c02ccac927$exports = {};\n$2d9960c02ccac927$exports = {\n  \"longPressMessage\": \"\\u957F\\u6309\\u6216\\u6309 Alt + \\u5411\\u4E0B\\u65B9\\u5411\\u952E\\u4EE5\\u6253\\u5F00\\u83DC\\u5355\"\n};\nvar $f1b682a4c8c5631c$exports = {};\n$f1b682a4c8c5631c$exports = {\n  \"longPressMessage\": \"\\u9577\\u6309\\u6216\\u6309 Alt+\\u5411\\u4E0B\\u9375\\u4EE5\\u958B\\u555F\\u529F\\u80FD\\u8868\"\n};\n$9bdd31893c9700c3$exports = {\n  \"ar-AE\": $c0398ad35c3639b7$exports,\n  \"bg-BG\": $7af657c4165927c3$exports,\n  \"cs-CZ\": $d95d4da6d531ab81$exports,\n  \"da-DK\": $24ebda9c775dca17$exports,\n  \"de-DE\": $743e0dfca6cab1e9$exports,\n  \"el-GR\": $a2f41026e05f1c84$exports,\n  \"en-US\": $43b800e97c901737$exports,\n  \"es-ES\": $442f5f6ac211e29f$exports,\n  \"et-EE\": $dff280acfeb2d8ac$exports,\n  \"fi-FI\": $51608325613944d7$exports,\n  \"fr-FR\": $c4a1b1eabeaa87be$exports,\n  \"he-IL\": $8c74815cdee18d1b$exports,\n  \"hr-HR\": $fd0e9ef6a7fe0ec9$exports,\n  \"hu-HU\": $a89a74a39eba465a$exports,\n  \"it-IT\": $edc7c66594a0ae8a$exports,\n  \"ja-JP\": $f1ab51510712db52$exports,\n  \"ko-KR\": $f9b672d9b82fa3d6$exports,\n  \"lt-LT\": $a385f3910feda499$exports,\n  \"lv-LV\": $4f1bde932c441789$exports,\n  \"nb-NO\": $914a51a8a594d5be$exports,\n  \"nl-NL\": $89aaf803103bb500$exports,\n  \"pl-PL\": $c685891476dbaaca$exports,\n  \"pt-BR\": $885879b9b10c2959$exports,\n  \"pt-PT\": $6b39616688a51692$exports,\n  \"ro-RO\": $f26362aed63f47e2$exports,\n  \"ru-RU\": $06cbade644558bf0$exports,\n  \"sk-SK\": $0a391ff68f9d59b1$exports,\n  \"sl-SI\": $8193cf0e649c7928$exports,\n  \"sr-SP\": $f398debcce5a5c55$exports,\n  \"sv-SE\": $9e9fef000aa4c013$exports,\n  \"tr-TR\": $c016c8183bbe3d68$exports,\n  \"uk-UA\": $ca4f6c8462244e62$exports,\n  \"zh-CN\": $2d9960c02ccac927$exports,\n  \"zh-TW\": $f1b682a4c8c5631c$exports\n};\nfunction $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {\n  var _props$type = props.type,\n    type = _props$type === void 0 ? 'menu' : _props$type,\n    isDisabled = props.isDisabled,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? 'press' : _props$trigger;\n  var menuTriggerId = $1Hnir$useId();\n  var _$1Hnir$useOverlayTri = $1Hnir$useOverlayTrigger({\n      type: type\n    }, state, ref),\n    triggerProps = _$1Hnir$useOverlayTri.triggerProps,\n    overlayProps = _$1Hnir$useOverlayTri.overlayProps;\n  var onKeyDown = function onKeyDown(e) {\n    if (isDisabled) return;\n    if (trigger === 'longPress' && !e.altKey) return;\n    if (ref && ref.current) switch (e.key) {\n      case 'Enter':\n      case ' ':\n        if (trigger === 'longPress') return;\n      case 'ArrowDown':\n        if (!('continuePropagation' in e)) e.stopPropagation();\n        e.preventDefault();\n        state.toggle('first');\n        break;\n      case 'ArrowUp':\n        if (!('continuePropagation' in e)) e.stopPropagation();\n        e.preventDefault();\n        state.toggle('last');\n        break;\n    }\n  };\n  var stringFormatter = $1Hnir$useLocalizedStringFormatter($parcel$interopDefault($9bdd31893c9700c3$exports));\n  var _$1Hnir$useLongPress = $1Hnir$useLongPress({\n      isDisabled: isDisabled || trigger !== 'longPress',\n      accessibilityDescription: stringFormatter.format('longPressMessage'),\n      onLongPressStart: function onLongPressStart() {\n        state.close();\n      },\n      onLongPress: function onLongPress() {\n        state.open('first');\n      }\n    }),\n    longPressProps = _$1Hnir$useLongPress.longPressProps;\n  var pressProps = {\n    onPressStart: function onPressStart(e) {\n      if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled)\n        state.toggle(e.pointerType === 'virtual' ? 'first' : null);\n    },\n    onPress: function onPress(e) {\n      if (e.pointerType === 'touch' && !isDisabled) state.toggle();\n    }\n  };\n  delete triggerProps.onPress;\n  return {\n    menuTriggerProps: _objectSpread(_objectSpread(_objectSpread({}, triggerProps), trigger === 'press' ? pressProps : longPressProps), {}, {\n      id: menuTriggerId,\n      onKeyDown: onKeyDown\n    }),\n    menuProps: _objectSpread(_objectSpread({}, overlayProps), {}, {\n      'aria-labelledby': menuTriggerId,\n      autoFocus: state.focusStrategy || true,\n      onClose: state.close\n    })\n  };\n}\nvar $d5336fe17ce95402$export$6f49b4016bfc8d56 = new WeakMap();\nfunction $d5336fe17ce95402$export$38eaa17faae8f579(props, state, ref) {\n  var _props$shouldFocusWra = props.shouldFocusWrap,\n    shouldFocusWrap = _props$shouldFocusWra === void 0 ? true : _props$shouldFocusWra,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  if (!props['aria-label'] && !props['aria-labelledby']) console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  var domProps = $1Hnir$filterDOMProps(props, {\n    labelable: true\n  });\n  var _$1Hnir$useSelectable = $1Hnir$useSelectableList(_objectSpread(_objectSpread({}, otherProps), {}, {\n      ref: ref,\n      selectionManager: state.selectionManager,\n      collection: state.collection,\n      disabledKeys: state.disabledKeys,\n      shouldFocusWrap: shouldFocusWrap\n    })),\n    listProps = _$1Hnir$useSelectable.listProps;\n  $d5336fe17ce95402$export$6f49b4016bfc8d56.set(state, {\n    onClose: props.onClose,\n    onAction: props.onAction\n  });\n  return {\n    menuProps: $1Hnir$mergeProps(domProps, _objectSpread({\n      role: 'menu'\n    }, listProps))\n  };\n}\nfunction $a2e5df62f93c7633$export$9d32628fc2aea7da(props, state, ref) {\n  var key = props.key,\n    closeOnSelect = props.closeOnSelect,\n    isVirtualized = props.isVirtualized;\n  var _isDisabled;\n  var isDisabled = (_isDisabled = props.isDisabled) !== null && _isDisabled !== void 0 ? _isDisabled : state.disabledKeys.has(key);\n  var _isSelected;\n  var isSelected = (_isSelected = props.isSelected) !== null && _isSelected !== void 0 ? _isSelected : state.selectionManager.isSelected(key);\n  var isFocused = state.selectionManager.focusedKey === key;\n  var data = $d5336fe17ce95402$export$6f49b4016bfc8d56.get(state);\n  var onClose = props.onClose || data.onClose;\n  var onAction = props.onAction || data.onAction;\n  var role = 'menuitem';\n  if (state.selectionManager.selectionMode === 'single') role = 'menuitemradio';else if (state.selectionManager.selectionMode === 'multiple') role = 'menuitemcheckbox';\n  var labelId = $1Hnir$useSlotId();\n  var descriptionId = $1Hnir$useSlotId();\n  var keyboardId = $1Hnir$useSlotId();\n  var ariaProps = {\n    'aria-disabled': isDisabled,\n    role: role,\n    'aria-label': props['aria-label'],\n    'aria-labelledby': labelId,\n    'aria-describedby': [descriptionId, keyboardId].filter(Boolean).join(' ') || undefined\n  };\n  if (state.selectionManager.selectionMode !== 'none') ariaProps['aria-checked'] = isSelected;\n  if (isVirtualized) {\n    ariaProps['aria-posinset'] = state.collection.getItem(key).index;\n    ariaProps['aria-setsize'] = $1Hnir$getItemCount(state.collection);\n  }\n  var onKeyDown = function onKeyDown(e) {\n    if (e.repeat) return;\n    switch (e.key) {\n      case ' ':\n        if (!isDisabled && state.selectionManager.selectionMode === 'none' && closeOnSelect !== false && onClose) onClose();\n        break;\n      case 'Enter':\n        if (!isDisabled && closeOnSelect !== false && onClose) onClose();\n        break;\n    }\n  };\n  var onPressStart = function onPressStart(e) {\n    if (e.pointerType === 'keyboard' && onAction) onAction(key);\n  };\n  var onPressUp = function onPressUp(e) {\n    if (e.pointerType !== 'keyboard') {\n      if (onAction) onAction(key);\n      if (onClose && (closeOnSelect !== null && closeOnSelect !== void 0 ? closeOnSelect : state.selectionManager.selectionMode !== 'multiple')) onClose();\n    }\n  };\n  var _$1Hnir$useSelectable2 = $1Hnir$useSelectableItem({\n      selectionManager: state.selectionManager,\n      key: key,\n      ref: ref,\n      shouldSelectOnPressUp: true,\n      allowsDifferentPressOrigin: true\n    }),\n    itemProps = _$1Hnir$useSelectable2.itemProps;\n  var _$1Hnir$usePress = $1Hnir$usePress({\n      onPressStart: onPressStart,\n      onPressUp: onPressUp,\n      isDisabled: isDisabled\n    }),\n    pressProps = _$1Hnir$usePress.pressProps,\n    isPressed = _$1Hnir$usePress.isPressed;\n  var _$1Hnir$useHover = $1Hnir$useHover({\n      isDisabled: isDisabled,\n      onHoverStart: function onHoverStart() {\n        if (!$1Hnir$isFocusVisible()) {\n          state.selectionManager.setFocused(true);\n          state.selectionManager.setFocusedKey(key);\n        }\n      }\n    }),\n    hoverProps = _$1Hnir$useHover.hoverProps;\n  return {\n    menuItemProps: _objectSpread(_objectSpread({}, ariaProps), $1Hnir$mergeProps(itemProps, pressProps, hoverProps, {\n      onKeyDown: onKeyDown\n    })),\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    keyboardShortcutProps: {\n      id: keyboardId\n    },\n    isFocused: isFocused,\n    isSelected: isSelected,\n    isPressed: isPressed,\n    isDisabled: isDisabled\n  };\n}\nfunction $3e5eb2498db5b506$export$73f7a44322579622(props) {\n  var heading = props.heading,\n    ariaLabel = props['aria-label'];\n  var headingId = $1Hnir$useId();\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      id: headingId,\n      'aria-hidden': true\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}\nexport { $168583247155ddda$export$dc9c12ed27dd1b49 as useMenuTrigger, $d5336fe17ce95402$export$38eaa17faae8f579 as useMenu, $a2e5df62f93c7633$export$9d32628fc2aea7da as useMenuItem, $3e5eb2498db5b506$export$73f7a44322579622 as useMenuSection };","map":{"version":3,"sources":["packages/@react-aria/menu/src/useMenuTrigger.ts","packages/@react-aria/menu/intl/*.js","packages/@react-aria/menu/intl/ar-AE.json","packages/@react-aria/menu/intl/bg-BG.json","packages/@react-aria/menu/intl/cs-CZ.json","packages/@react-aria/menu/intl/da-DK.json","packages/@react-aria/menu/intl/de-DE.json","packages/@react-aria/menu/intl/el-GR.json","packages/@react-aria/menu/intl/en-US.json","packages/@react-aria/menu/intl/es-ES.json","packages/@react-aria/menu/intl/et-EE.json","packages/@react-aria/menu/intl/fi-FI.json","packages/@react-aria/menu/intl/fr-FR.json","packages/@react-aria/menu/intl/he-IL.json","packages/@react-aria/menu/intl/hr-HR.json","packages/@react-aria/menu/intl/hu-HU.json","packages/@react-aria/menu/intl/it-IT.json","packages/@react-aria/menu/intl/ja-JP.json","packages/@react-aria/menu/intl/ko-KR.json","packages/@react-aria/menu/intl/lt-LT.json","packages/@react-aria/menu/intl/lv-LV.json","packages/@react-aria/menu/intl/nb-NO.json","packages/@react-aria/menu/intl/nl-NL.json","packages/@react-aria/menu/intl/pl-PL.json","packages/@react-aria/menu/intl/pt-BR.json","packages/@react-aria/menu/intl/pt-PT.json","packages/@react-aria/menu/intl/ro-RO.json","packages/@react-aria/menu/intl/ru-RU.json","packages/@react-aria/menu/intl/sk-SK.json","packages/@react-aria/menu/intl/sl-SI.json","packages/@react-aria/menu/intl/sr-SP.json","packages/@react-aria/menu/intl/sv-SE.json","packages/@react-aria/menu/intl/tr-TR.json","packages/@react-aria/menu/intl/uk-UA.json","packages/@react-aria/menu/intl/zh-CN.json","packages/@react-aria/menu/intl/zh-TW.json","packages/@react-aria/menu/src/useMenu.ts","packages/@react-aria/menu/src/useMenuItem.ts","packages/@react-aria/menu/src/useMenuSection.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AEAA,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBAAkB;AACtC,CAAC;;ACDD,yBAAc,GAAG;EAAG,kBA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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaMenuOptions} from './useMenu';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MenuTriggerState} from '@react-stately/menu';\nimport {MenuTriggerType} from '@react-types/menu';\nimport {RefObject} from 'react';\nimport {useId} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useLongPress} from '@react-aria/interactions';\nimport {useOverlayTrigger} from '@react-aria/overlays';\n\nexport interface AriaMenuTriggerProps {\n  /** The type of menu that the menu trigger opens. */\n  type?: 'menu' | 'listbox',\n  /** Whether menu trigger is disabled. */\n  isDisabled?: boolean,\n  /** How menu is triggered. */\n  trigger?: MenuTriggerType\n}\n\nexport interface MenuTriggerAria<T> {\n  /** Props for the menu trigger element. */\n  menuTriggerProps: AriaButtonProps,\n\n  /** Props for the menu. */\n  menuProps: AriaMenuOptions<T>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a menu trigger.\n * @param props - Props for the menu trigger.\n * @param state - State for the menu trigger.\n */\nexport function useMenuTrigger<T>(props: AriaMenuTriggerProps, state: MenuTriggerState, ref: RefObject<Element>): MenuTriggerAria<T> {\n  let {\n    type = 'menu' as AriaMenuTriggerProps['type'],\n    isDisabled,\n    trigger = 'press'\n  } = props;\n\n  let menuTriggerId = useId();\n  let {triggerProps, overlayProps} = useOverlayTrigger({type}, state, ref);\n\n  let onKeyDown = (e) => {\n    if (isDisabled) {\n      return;\n    }\n\n    if (trigger === 'longPress' && !e.altKey) {\n      return;\n    }\n\n    if (ref && ref.current) {\n      switch (e.key) {\n        case 'Enter':\n        case ' ':\n          if (trigger === 'longPress') {\n            return;\n          }\n          // fallthrough\n        case 'ArrowDown':\n          // Stop propagation, unless it would already be handled by useKeyboard.\n          if (!('continuePropagation' in e)) {\n            e.stopPropagation();\n          }\n          e.preventDefault();\n          state.toggle('first');\n          break;\n        case 'ArrowUp':\n          if (!('continuePropagation' in e)) {\n            e.stopPropagation();\n          }\n          e.preventDefault();\n          state.toggle('last');\n          break;\n      }\n    }\n  };\n\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let {longPressProps} = useLongPress({\n    isDisabled: isDisabled || trigger !== 'longPress',\n    accessibilityDescription: stringFormatter.format('longPressMessage'),\n    onLongPressStart() {\n      state.close();\n    },\n    onLongPress() {\n      state.open('first');\n    }\n  });\n\n  let pressProps =  {\n    onPressStart(e) {\n      // For consistency with native, open the menu on mouse/key down, but touch up.\n      if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled) {\n        // If opened with a screen reader, auto focus the first item.\n        // Otherwise, the menu itself will be focused.\n        state.toggle(e.pointerType === 'virtual' ? 'first' : null);\n      }\n    },\n    onPress(e) {\n      if (e.pointerType === 'touch' && !isDisabled) {\n        state.toggle();\n      }\n    }\n  };\n\n  // omit onPress from triggerProps since we override it above.\n  delete triggerProps.onPress;\n\n  return {\n    menuTriggerProps: {\n      ...triggerProps,\n      ...(trigger === 'press' ? pressProps : longPressProps),\n      id: menuTriggerId,\n      onKeyDown\n    },\n    menuProps: {\n      ...overlayProps,\n      'aria-labelledby': menuTriggerId,\n      autoFocus: state.focusStrategy || true,\n      onClose: state.close\n    }\n  };\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"longPressMessage\": \"اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة\"\n}\n","{\n  \"longPressMessage\": \"Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто\"\n}\n","{\n  \"longPressMessage\": \"Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku\"\n}\n","{\n  \"longPressMessage\": \"Langt tryk eller tryk på Alt + pil ned for at åbne menuen\"\n}\n","{\n  \"longPressMessage\": \"Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen\"\n}\n","{\n  \"longPressMessage\": \"Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού\"\n}\n","{\n  \"longPressMessage\": \"Long press or press Alt + ArrowDown to open menu\"\n}\n","{\n  \"longPressMessage\": \"Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú\"\n}\n","{\n  \"longPressMessage\": \"Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool\"\n}\n","{\n  \"longPressMessage\": \"Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli\"\n}\n","{\n  \"longPressMessage\": \"Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.\"\n}\n","{\n  \"longPressMessage\": \"לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט\"\n}\n","{\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika\"\n}\n","{\n  \"longPressMessage\": \"Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához\"\n}\n","{\n  \"longPressMessage\": \"Premere a lungo o premere Alt + Freccia giù per aprire il menu\"\n}\n","{\n  \"longPressMessage\": \"長押しまたは Alt+下矢印キーでメニューを開く\"\n}\n","{\n  \"longPressMessage\": \"길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기\"\n}\n","{\n  \"longPressMessage\": \"Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.\"\n}\n","{\n  \"longPressMessage\": \"Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa\"\n}\n","{\n  \"longPressMessage\": \"Langt trykk eller trykk Alt + PilNed for å åpne menyen\"\n}\n","{\n  \"longPressMessage\": \"Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen\"\n}\n","{\n  \"longPressMessage\": \"Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu\"\n}\n","{\n  \"longPressMessage\": \"Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu\"\n}\n","{\n  \"longPressMessage\": \"Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu\"\n}\n","{\n  \"longPressMessage\": \"Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul\"\n}\n","{\n  \"longPressMessage\": \"Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню\"\n}\n","{\n  \"longPressMessage\": \"Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol\"\n}\n","{\n  \"longPressMessage\": \"Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol\"\n}\n","{\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni\"\n}\n","{\n  \"longPressMessage\": \"Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn\"\n}\n","{\n  \"longPressMessage\": \"Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın\"\n}\n","{\n  \"longPressMessage\": \"Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню\"\n}\n","{\n  \"longPressMessage\": \"长按或按 Alt + 向下方向键以打开菜单\"\n}\n","{\n  \"longPressMessage\": \"長按或按 Alt+向下鍵以開啟功能表\"\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaMenuProps} from '@react-types/menu';\nimport {DOMAttributes, KeyboardDelegate} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {Key, RefObject} from 'react';\nimport {TreeState} from '@react-stately/tree';\nimport {useSelectableList} from '@react-aria/selection';\n\nexport interface MenuAria {\n  /** Props for the menu element. */\n  menuProps: DOMAttributes\n}\n\nexport interface AriaMenuOptions<T> extends Omit<AriaMenuProps<T>, 'children'> {\n  /** Whether the menu uses virtual scrolling. */\n  isVirtualized?: boolean,\n\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate\n}\n\ninterface MenuData {\n  onClose?: () => void,\n  onAction?: (key: Key) => void\n}\n\nexport const menuData = new WeakMap<TreeState<unknown>, MenuData>();\n\n/**\n * Provides the behavior and accessibility implementation for a menu component.\n * A menu displays a list of actions or options that a user can choose.\n * @param props - Props for the menu.\n * @param state - State for the menu, as returned by `useListState`.\n */\nexport function useMenu<T>(props: AriaMenuOptions<T>, state: TreeState<T>, ref: RefObject<HTMLElement>): MenuAria {\n  let {\n    shouldFocusWrap = true,\n    ...otherProps\n  } = props;\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let {listProps} = useSelectableList({\n    ...otherProps,\n    ref,\n    selectionManager: state.selectionManager,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    shouldFocusWrap\n  });\n\n  menuData.set(state, {\n    onClose: props.onClose,\n    onAction: props.onAction\n  });\n\n  return {\n    menuProps: mergeProps(domProps, {\n      role: 'menu',\n      ...listProps\n    })\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, PressEvent} from '@react-types/shared';\nimport {getItemCount} from '@react-stately/collections';\nimport {isFocusVisible, useHover, usePress} from '@react-aria/interactions';\nimport {Key, RefObject} from 'react';\nimport {menuData} from './useMenu';\nimport {mergeProps, useSlotId} from '@react-aria/utils';\nimport {TreeState} from '@react-stately/tree';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface MenuItemAria {\n  /** Props for the menu item element. */\n  menuItemProps: DOMAttributes,\n\n  /** Props for the main text element inside the menu item. */\n  labelProps: DOMAttributes,\n\n  /** Props for the description text element inside the menu item, if any. */\n  descriptionProps: DOMAttributes,\n\n  /** Props for the keyboard shortcut text element inside the item, if any. */\n  keyboardShortcutProps: DOMAttributes,\n\n  /** Whether the item is currently focused. */\n  isFocused: boolean,\n  /** Whether the item is currently selected. */\n  isSelected: boolean,\n  /** Whether the item is currently in a pressed state. */\n  isPressed: boolean,\n  /** Whether the item is disabled. */\n  isDisabled: boolean\n}\n\nexport interface AriaMenuItemProps {\n  /**\n   * Whether the menu item is disabled.\n   * @deprecated - pass disabledKeys to useTreeState instead.\n   */\n  isDisabled?: boolean,\n\n  /**\n   * Whether the menu item is selected.\n   * @deprecated - pass selectedKeys to useTreeState instead.\n   */\n  isSelected?: boolean,\n\n  /** A screen reader only label for the menu item. */\n  'aria-label'?: string,\n\n  /** The unique key for the menu item. */\n  key?: Key,\n\n  /**\n   * Handler that is called when the menu should close after selecting an item.\n   * @deprecated - pass to the menu instead.\n   */\n  onClose?: () => void,\n\n  /**\n   * Whether the menu should close when the menu item is selected.\n   * @default true\n   */\n  closeOnSelect?: boolean,\n\n  /** Whether the menu item is contained in a virtual scrolling menu. */\n  isVirtualized?: boolean,\n\n  /**\n   * Handler that is called when the user activates the item.\n   * @deprecated - pass to the menu instead.\n   */\n  onAction?: (key: Key) => void\n}\n\n/**\n * Provides the behavior and accessibility implementation for an item in a menu.\n * See `useMenu` for more details about menus.\n * @param props - Props for the item.\n * @param state - State for the menu, as returned by `useTreeState`.\n */\nexport function useMenuItem<T>(props: AriaMenuItemProps, state: TreeState<T>, ref: RefObject<FocusableElement>): MenuItemAria {\n  let {\n    key,\n    closeOnSelect,\n    isVirtualized\n  } = props;\n\n  let isDisabled = props.isDisabled ?? state.disabledKeys.has(key);\n  let isSelected = props.isSelected ?? state.selectionManager.isSelected(key);\n  let isFocused = state.selectionManager.focusedKey === key;\n\n  let data = menuData.get(state);\n  let onClose = props.onClose || data.onClose;\n  let onAction = props.onAction || data.onAction;\n\n  let role = 'menuitem';\n  if (state.selectionManager.selectionMode === 'single') {\n    role = 'menuitemradio';\n  } else if (state.selectionManager.selectionMode === 'multiple') {\n    role = 'menuitemcheckbox';\n  }\n\n  let labelId = useSlotId();\n  let descriptionId = useSlotId();\n  let keyboardId = useSlotId();\n\n  let ariaProps = {\n    'aria-disabled': isDisabled,\n    role,\n    'aria-label': props['aria-label'],\n    'aria-labelledby': labelId,\n    'aria-describedby': [descriptionId, keyboardId].filter(Boolean).join(' ') || undefined\n  };\n\n  if (state.selectionManager.selectionMode !== 'none') {\n    ariaProps['aria-checked'] = isSelected;\n  }\n\n  if (isVirtualized) {\n    ariaProps['aria-posinset'] = state.collection.getItem(key).index;\n    ariaProps['aria-setsize'] = getItemCount(state.collection);\n  }\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    // Ignore repeating events, which may have started on the menu trigger before moving\n    // focus to the menu item. We want to wait for a second complete key press sequence.\n    if (e.repeat) {\n      return;\n    }\n\n    switch (e.key) {\n      case ' ':\n        if (!isDisabled && state.selectionManager.selectionMode === 'none' && closeOnSelect !== false && onClose) {\n          onClose();\n        }\n        break;\n      case 'Enter':\n        // The Enter key should always close on select, except if overridden.\n        if (!isDisabled && closeOnSelect !== false && onClose) {\n          onClose();\n        }\n        break;\n    }\n  };\n\n  let onPressStart = (e: PressEvent) => {\n    if (e.pointerType === 'keyboard' && onAction) {\n      onAction(key);\n    }\n  };\n\n  let onPressUp = (e: PressEvent) => {\n    if (e.pointerType !== 'keyboard') {\n      if (onAction) {\n        onAction(key);\n      }\n\n      // Pressing a menu item should close by default in single selection mode but not multiple\n      // selection mode, except if overridden by the closeOnSelect prop.\n      if (onClose && (closeOnSelect ?? state.selectionManager.selectionMode !== 'multiple')) {\n        onClose();\n      }\n    }\n  };\n\n  let {itemProps} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key,\n    ref,\n    shouldSelectOnPressUp: true,\n    allowsDifferentPressOrigin: true\n  });\n\n  let {pressProps, isPressed} = usePress({onPressStart, onPressUp, isDisabled});\n  let {hoverProps} = useHover({\n    isDisabled,\n    onHoverStart() {\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocused(true);\n        state.selectionManager.setFocusedKey(key);\n      }\n    }\n  });\n\n  return {\n    menuItemProps: {\n      ...ariaProps,\n      ...mergeProps(itemProps, pressProps, hoverProps, {onKeyDown})\n    },\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    keyboardShortcutProps: {\n      id: keyboardId\n    },\n    isFocused,\n    isSelected,\n    isPressed,\n    isDisabled\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {ReactNode} from 'react';\nimport {useId} from '@react-aria/utils';\n\nexport interface AriaMenuSectionProps {\n  /** The heading for the section. */\n  heading?: ReactNode,\n  /** An accessibility label for the section. Required if `heading` is not present. */\n  'aria-label'?: string\n}\n\nexport interface MenuSectionAria {\n  /** Props for the wrapper list item. */\n  itemProps: DOMAttributes,\n\n  /** Props for the heading element, if any. */\n  headingProps: DOMAttributes,\n\n  /** Props for the group element. */\n  groupProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a section in a menu.\n * See `useMenu` for more details about menus.\n * @param props - Props for the section.\n */\nexport function useMenuSection(props: AriaMenuSectionProps): MenuSectionAria {\n  let {heading, 'aria-label': ariaLabel} = props;\n  let headingId = useId();\n\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      // Techincally, menus cannot contain headings according to ARIA.\n      // We hide the heading from assistive technology, and only use it\n      // as a label for the nested group.\n      id: headingId,\n      'aria-hidden': true\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}