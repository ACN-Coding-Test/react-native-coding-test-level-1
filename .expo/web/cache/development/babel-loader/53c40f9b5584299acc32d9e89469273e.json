{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { Box } from \"../../primitives\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar Kbd = function Kbd(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var newProps = useThemeProps('Kbd', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({}, newProps, {\n    ref: ref\n  }), children);\n};\nexport default React.memo(React.forwardRef(Kbd));","map":{"version":3,"sources":["index.tsx"],"names":["React","Box","useThemeProps","useHasResponsiveProps","Kbd","children","props","ref","newProps","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT;AACA,SAASC,aAAT;AAEA,SAASC,qBAAT;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAG,OAAuCG,GAApC,EAAkD;EAAA,IAA/CF,QAAF,QAAEA,QAAF;IAAeC,KAAAA;EAC1B,IAAME,QAAQ,GAAGN,aAAa,CAAC,KAAD,EAAQI,KAAR,CAD8B;;EAG5D,IAAIH,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAASE,QAAT,EAAA;IAAmB,GAAG,EAAED;EAAxB,CAAA,CAAA,EACGF,QADH,CADF;AAKD,CAXD;AAaA,eAAeL,KAAK,CAACS,IAANT,CAAWA,KAAK,CAACU,UAANV,CAAiBI,GAAjBJ,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { IKbdProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Kbd = ({ children, ...props }: IKbdProps, ref?: any) => {\n  const newProps = useThemeProps('Kbd', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...newProps} ref={ref}>\n      {children}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Kbd));\nexport type { IKbdProps };\n"]},"metadata":{},"sourceType":"module"}