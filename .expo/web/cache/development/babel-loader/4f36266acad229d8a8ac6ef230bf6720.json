{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { usePropsResolution } from \"../../../hooks\";\nimport React, { useContext, memo, forwardRef, useEffect } from 'react';\nimport { default as Box } from \"../../primitives/Box\";\nimport { PopoverContext } from \"./PopoverContext\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar PopoverBody = function PopoverBody(props, ref) {\n  var resolvedProps = usePropsResolution('PopoverBody', props);\n  var _useContext = useContext(PopoverContext),\n    setBodyMounted = _useContext.setBodyMounted,\n    bodyId = _useContext.bodyId;\n  useEffect(function () {\n    setBodyMounted(true);\n    return function () {\n      setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({\n    nativeID: bodyId\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\nexport default memo(forwardRef(PopoverBody));","map":{"version":3,"sources":["PopoverBody.tsx"],"names":["usePropsResolution","React","useContext","memo","forwardRef","useEffect","default","Box","PopoverContext","useHasResponsiveProps","PopoverBody","props","ref","resolvedProps","setBodyMounted","bodyId"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,kBAAT;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,SAASC,OAAO,IAAIC,GAApB;AACA,SAASC,cAAT;AACA,SAASC,qBAAT;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAD,EAAmBC,GAAnB,EAAiC;EACnD,IAAMC,aAAa,GAAGb,kBAAkB,CAAC,aAAD,EAAgBW,KAAhB,CAAxC;EACA,kBAAmCT,UAAU,CAACM,cAAD,CAA7C;IAAQM,cAAF,eAAEA,cAAF;IAAkBC,MAAAA,eAAAA,MAAAA;EAExBV,SAAS,CAAC,YAAM;IACdS,cAAc,CAAC,IAAD,CAAdA;IACA,OAAO,YAAM;MACXA,cAAc,CAAC,KAAD,CAAdA;IACD,CAFD;EAGD,CALQ,EAKN,CAACA,cAAD,CALM,CAJ0C;;EAYnD,IAAIL,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OAAO,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA,QAAA,CAAA;IAAK,QAAQ,EAAEI;EAAf,CAAA,EAA2BF,aAA3B,EAAA;IAA0C,GAAG,EAAED;EAA/C,CAAA,CAAA,CAAP;AACD,CAhBD;AAkBA,eAAeT,IAAI,CAACC,UAAU,CAACM,WAAD,CAAX,CAAnB","sourcesContent":["import { usePropsResolution } from '../../../hooks';\nimport React, { useContext, memo, forwardRef, useEffect } from 'react';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverBody = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverBody', props);\n  const { setBodyMounted, bodyId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setBodyMounted(true);\n    return () => {\n      setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={bodyId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverBody));\n"]},"metadata":{},"sourceType":"module"}