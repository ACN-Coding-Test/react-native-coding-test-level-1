{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"manageFocus\", \"defaultValue\", \"value\", \"space\", \"onChange\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { HStack } from \"../../primitives/Stack\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { useFormControlContext } from \"../FormControl\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { PinInputContext } from \"./Context\";\nimport { themeTools } from \"../../../theme\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar PinInput = function PinInput(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _themeTools$extractIn = themeTools.extractInObject(props, ['p', 'px', 'py', 'pt', 'pb', 'pl', 'pr']),\n    _themeTools$extractIn2 = _slicedToArray(_themeTools$extractIn, 2),\n    padding = _themeTools$extractIn2[0],\n    remProps = _themeTools$extractIn2[1];\n  var _useThemeProps = useThemeProps('PinInput', remProps),\n    manageFocus = _useThemeProps.manageFocus,\n    defaultValue = _useThemeProps.defaultValue,\n    value = _useThemeProps.value,\n    space = _useThemeProps.space,\n    onChange = _useThemeProps.onChange,\n    newProps = _objectWithoutProperties(_useThemeProps, _excluded2);\n  var formControlContext = useFormControlContext();\n  var RefList = [];\n  var setRefList = function setRefList(ref, index) {\n    RefList[index] = ref;\n  };\n  var _React$useState = React.useState(value || defaultValue),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    pinInputValue = _React$useState2[0],\n    setPinInputValue = _React$useState2[1];\n  var handleChange = function handleChange(newValue, fieldIndex) {\n    var temp = pinInputValue && _toConsumableArray(pinInputValue) || [];\n    temp[fieldIndex] = newValue;\n    value === undefined && setPinInputValue(temp.join(''));\n    onChange && onChange(temp.join(''));\n    if (newValue === '' && manageFocus && fieldIndex - 1 > -1) RefList[fieldIndex - 1].current.focus();else if (newValue && manageFocus && fieldIndex + 1 < RefList.length) RefList[fieldIndex + 1].current.focus();\n    return temp.join('');\n  };\n  var handleMultiValueChange = function handleMultiValueChange(newValue, fieldIndex) {\n    var pinFieldLength = RefList.length;\n    var newValueLength = newValue.length;\n    if (newValueLength >= pinFieldLength && newValueLength > 2) {\n      var splicedValue = newValue ? _toConsumableArray(newValue) : [];\n      splicedValue.splice(pinFieldLength);\n      RefList[pinFieldLength - 1].current.focus();\n      setPinInputValue(splicedValue.join(''));\n      onChange && onChange(splicedValue.join(''));\n    }\n    if (Platform.OS !== 'ios') {\n      var temp = pinInputValue ? _toConsumableArray(pinInputValue) : [];\n      if (newValue === '') {\n        temp = temp.filter(function (_n, i) {\n          return i !== fieldIndex;\n        });\n        if (manageFocus && fieldIndex - 1 > -1) RefList[fieldIndex - 1].current.focus();\n      } else {\n        temp[fieldIndex] = JSON.stringify(parseInt(newValue, 10) % 10);\n        if (manageFocus && fieldIndex + 1 < RefList.length) RefList[fieldIndex + 1].current.focus();\n      }\n      value === undefined && setPinInputValue(temp.join(''));\n      onChange && onChange(temp.join(''));\n    }\n  };\n  var indexSetter = function indexSetter(allChildren) {\n    var pinInputFiledCounter = -1;\n    return React.Children.map(allChildren, function (child) {\n      pinInputFiledCounter++;\n      return React.cloneElement(child, {\n        fieldIndex: pinInputFiledCounter\n      }, child.props.children);\n    });\n  };\n  React.useEffect(function () {\n    if (value !== undefined && value != pinInputValue) setPinInputValue(value);\n  }, [value, pinInputValue, setPinInputValue]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(PinInputContext.Provider, {\n    value: _objectSpread(_objectSpread(_objectSpread({}, formControlContext), newProps), {}, {\n      setRefList: setRefList,\n      handleChange: handleChange,\n      handleMultiValueChange: handleMultiValueChange,\n      value: pinInputValue\n    })\n  }, children && React.createElement(HStack, _extends({\n    flexDirection: \"row\",\n    space: space\n  }, padding, {\n    ref: ref\n  }), indexSetter(children)));\n};\nexport default React.memo(React.forwardRef(PinInput));","map":{"version":3,"sources":["PinInput.tsx"],"names":["React","HStack","useThemeProps","useFormControlContext","PinInputContext","themeTools","useHasResponsiveProps","PinInput","children","props","ref","padding","remProps","extractInObject","manageFocus","defaultValue","value","space","onChange","newProps","formControlContext","RefList","setRefList","index","pinInputValue","setPinInputValue","useState","handleChange","newValue","fieldIndex","temp","undefined","join","current","focus","length","handleMultiValueChange","pinFieldLength","newValueLength","splicedValue","splice","Platform","OS","filter","_n","i","JSON","stringify","parseInt","indexSetter","allChildren","pinInputFiledCounter","Children","map","child","cloneElement","useEffect","memo","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { HStack } from '../../primitives/Stack';\nimport { useThemeProps } from '../../../hooks';\nimport type { IPinInputProps } from './types';\nimport { useFormControlContext } from '../FormControl';\nimport { Platform } from 'react-native';\nimport { PinInputContext } from './Context';\nimport { themeTools } from '../../../theme';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PinInput = ({ children, ...props }: IPinInputProps, ref?: any) => {\n  let [padding, remProps] = themeTools.extractInObject(props, [\n    'p',\n    'px',\n    'py',\n    'pt',\n    'pb',\n    'pl',\n    'pr',\n  ]);\n  const {\n    manageFocus,\n    defaultValue,\n    value,\n    space,\n    onChange,\n    ...newProps\n  } = useThemeProps('PinInput', remProps);\n  const formControlContext = useFormControlContext();\n\n  const RefList: Array<any> = [];\n  const setRefList = (ref: any, index: number) => {\n    RefList[index] = ref;\n  };\n  const [pinInputValue, setPinInputValue] = React.useState(\n    value || defaultValue\n  );\n\n  const handleChange = (newValue: string, fieldIndex: number) => {\n    let temp = (pinInputValue && [...pinInputValue]) || [];\n    temp[fieldIndex] = newValue;\n    value === undefined && setPinInputValue(temp.join(''));\n    onChange && onChange(temp.join(''));\n    if (newValue === '' && manageFocus && fieldIndex - 1 > -1)\n      RefList[fieldIndex - 1].current.focus();\n    else if (newValue && manageFocus && fieldIndex + 1 < RefList.length)\n      RefList[fieldIndex + 1].current.focus();\n    return temp.join('');\n  };\n  const handleMultiValueChange = (newValue: string, fieldIndex: number) => {\n    const pinFieldLength = RefList.length;\n    const newValueLength = newValue.length;\n    if (newValueLength >= pinFieldLength && newValueLength > 2) {\n      let splicedValue = newValue ? [...newValue] : [];\n      splicedValue.splice(pinFieldLength);\n      RefList[pinFieldLength - 1].current.focus();\n      setPinInputValue(splicedValue.join(''));\n      onChange && onChange(splicedValue.join(''));\n    }\n\n    if (Platform.OS !== 'ios') {\n      let temp = pinInputValue ? [...pinInputValue] : [];\n      if (newValue === '') {\n        // Handling Backward focus.\n        temp = temp.filter((_n, i) => i !== fieldIndex);\n        if (manageFocus && fieldIndex - 1 > -1)\n          RefList[fieldIndex - 1].current.focus();\n      } else {\n        temp[fieldIndex] = JSON.stringify(parseInt(newValue, 10) % 10);\n        if (manageFocus && fieldIndex + 1 < RefList.length)\n          RefList[fieldIndex + 1].current.focus();\n      }\n      value === undefined && setPinInputValue(temp.join(''));\n      onChange && onChange(temp.join(''));\n    }\n  };\n\n  const indexSetter = (allChildren: JSX.Element | JSX.Element[]) => {\n    let pinInputFiledCounter = -1;\n    return React.Children.map(allChildren, (child: JSX.Element) => {\n      pinInputFiledCounter++;\n      return React.cloneElement(\n        child,\n        {\n          fieldIndex: pinInputFiledCounter,\n        },\n        child.props.children\n      );\n    });\n  };\n\n  React.useEffect(() => {\n    if (value !== undefined && value != pinInputValue) setPinInputValue(value);\n  }, [value, pinInputValue, setPinInputValue]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <PinInputContext.Provider\n      value={{\n        ...formControlContext,\n        ...newProps,\n        setRefList,\n        handleChange,\n        handleMultiValueChange,\n        value: pinInputValue,\n      }}\n    >\n      {children && (\n        <HStack flexDirection=\"row\" space={space} {...padding} ref={ref}>\n          {indexSetter(children)}\n        </HStack>\n      )}\n    </PinInputContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(PinInput));\n"]},"metadata":{},"sourceType":"module"}