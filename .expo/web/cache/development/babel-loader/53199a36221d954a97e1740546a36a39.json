{"ast":null,"code":"import { getColorScheme } from \"../tools\";\nvar baseStyle = {\n  flexDirection: 'row',\n  justifyContent: 'center',\n  space: 1,\n  px: '2',\n  py: '0.5',\n  alignItems: 'center',\n  _text: {\n    fontSize: 'xs',\n    fontWeight: 'medium'\n  }\n};\nfunction variantSolid(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    _text: {\n      color: 'text.50'\n    },\n    _icon: {\n      color: 'text.50'\n    },\n    bg: \"\".concat(colorScheme, \".600\"),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    borderRadius: '2'\n  };\n}\nfunction variantSubtle(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    _text: {\n      color: \"\".concat(colorScheme, \".900\")\n    },\n    _icon: {\n      color: \"\".concat(colorScheme, \".900\")\n    },\n    bg: \"\".concat(colorScheme, \".100\"),\n    _dark: {\n      bg: \"\".concat(colorScheme, \".300\")\n    },\n    borderWidth: '1',\n    borderRadius: '2',\n    borderColor: 'transparent'\n  };\n}\nfunction variantOutline(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    _text: {\n      color: \"\".concat(colorScheme, \".600\")\n    },\n    _icon: {\n      color: \"\".concat(colorScheme, \".600\")\n    },\n    borderColor: \"\".concat(colorScheme, \".600\"),\n    _dark: {\n      _text: {\n        color: \"\".concat(colorScheme, \".300\")\n      },\n      _icon: {\n        color: \"\".concat(colorScheme, \".300\")\n      },\n      borderColor: \"\".concat(colorScheme, \".300\")\n    },\n    borderRadius: '2',\n    borderWidth: '1'\n  };\n}\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'muted',\n  size: 'md'\n};\nexport default {\n  baseStyle: baseStyle,\n  variants: variants,\n  defaultProps: defaultProps\n};","map":{"version":3,"sources":["badge.ts"],"names":["getColorScheme","baseStyle","flexDirection","justifyContent","space","px","py","alignItems","_text","fontSize","fontWeight","variantSolid","props","colorScheme","color","_icon","bg","borderWidth","borderColor","borderRadius","variantSubtle","_dark","variantOutline","variants","solid","subtle","outline","defaultProps","variant","size"],"mappings":"AAAA,SAASA,cAAT;AAEA,IAAMC,SAAS,GAAG;EAChBC,aAAa,EAAE,KADC;EAEhBC,cAAc,EAAE,QAFA;EAGhBC,KAAK,EAAE,CAHS;EAIhBC,EAAE,EAAE,GAJY;EAKhBC,EAAE,EAAE,KALY;EAMhBC,UAAU,EAAE,QANI;EAOhBC,KAAK,EAAE;IAAEC,QAAQ,EAAE,IAAZ;IAAkBC,UAAU,EAAE;EAA9B;AAPS,CAAlB;AAUA,SAASC,YAAT,CAAsBC,KAAtB,EAAyE;EACvE,IAAMC,WAAW,GAAGb,cAAc,CAACY,KAAD,CAAlC;EACA,OAAO;IACLJ,KAAK,EAAE;MACLM,KAAK,EAAE;IADF,CADF;IAILC,KAAK,EAAE;MACLD,KAAK,EAAE;IADF,CAJF;IAOLE,EAAE,EAAA,EAAA,CAAA,MAAA,CAAKH,WAAL,EAAA,MAAA,CAPG;IAQLI,WAAW,EAAE,GARR;IASLC,WAAW,EAAE,aATR;IAULC,YAAY,EAAE;EAVT,CAAP;AAYD;AAED,SAASC,aAAT,CAAuBR,KAAvB,EAA0E;EACxE,IAAMC,WAAW,GAAGb,cAAc,CAACY,KAAD,CAAlC;EACA,OAAO;IACLJ,KAAK,EAAE;MAAEM,KAAK,EAAA,EAAA,CAAA,MAAA,CAAKD,WAAL,EAAA,MAAA;IAAP,CADF;IAELE,KAAK,EAAE;MAAED,KAAK,EAAA,EAAA,CAAA,MAAA,CAAKD,WAAL,EAAA,MAAA;IAAP,CAFF;IAGLG,EAAE,EAAA,EAAA,CAAA,MAAA,CAAKH,WAAL,EAAA,MAAA,CAHG;IAILQ,KAAK,EAAE;MAAEL,EAAE,EAAA,EAAA,CAAA,MAAA,CAAKH,WAAL,EAAA,MAAA;IAAJ,CAJF;IAKLI,WAAW,EAAE,GALR;IAMLE,YAAY,EAAE,GANT;IAOLD,WAAW,EAAE;EAPR,CAAP;AASD;AAED,SAASI,cAAT,CAAwBV,KAAxB,EAA2E;EACzE,IAAMC,WAAW,GAAGb,cAAc,CAACY,KAAD,CAAlC;EACA,OAAO;IACLJ,KAAK,EAAE;MAAEM,KAAK,EAAA,EAAA,CAAA,MAAA,CAAKD,WAAL,EAAA,MAAA;IAAP,CADF;IAELE,KAAK,EAAE;MAAED,KAAK,EAAA,EAAA,CAAA,MAAA,CAAKD,WAAL,EAAA,MAAA;IAAP,CAFF;IAGLK,WAAW,EAAA,EAAA,CAAA,MAAA,CAAKL,WAAL,EAAA,MAAA,CAHN;IAILQ,KAAK,EAAE;MACLb,KAAK,EAAE;QACLM,KAAK,EAAA,EAAA,CAAA,MAAA,CAAKD,WAAL,EAAA,MAAA;MADA,CADF;MAILE,KAAK,EAAE;QACLD,KAAK,EAAA,EAAA,CAAA,MAAA,CAAKD,WAAL,EAAA,MAAA;MADA,CAJF;MAOLK,WAAW,EAAA,EAAA,CAAA,MAAA,CAAKL,WAAL,EAAA,MAAA;IAPN,CAJF;IAaLM,YAAY,EAAE,GAbT;IAcLF,WAAW,EAAE;EAdR,CAAP;AAgBD;AAED,IAAMM,QAAQ,GAAG;EACfC,KAAK,EAAEb,YADQ;EAEfc,MAAM,EAAEL,aAFO;EAGfM,OAAO,EAAEJ;AAHM,CAAjB;AAMA,IAAMK,YAAY,GAAG;EACnBC,OAAO,EAAE,QADU;EAEnBf,WAAW,EAAE,OAFM;EAGnBgB,IAAI,EAAE;AAHa,CAArB;AAMA,eAAe;EACb5B,SADa,EACbA,SADa;EAEbsB,QAFa,EAEbA,QAFa;EAGbI,YAAAA,EAAAA;AAHa,CAAf","sourcesContent":["import { getColorScheme } from '../tools';\nimport type { InterfaceBadgeProps } from '../../components/composites/Badge/types';\nconst baseStyle = {\n  flexDirection: 'row',\n  justifyContent: 'center',\n  space: 1,\n  px: '2',\n  py: '0.5',\n  alignItems: 'center',\n  _text: { fontSize: 'xs', fontWeight: 'medium' },\n};\n\nfunction variantSolid(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _text: {\n      color: 'text.50',\n    },\n    _icon: {\n      color: 'text.50',\n    },\n    bg: `${colorScheme}.600`,\n    borderWidth: '1',\n    borderColor: 'transparent',\n    borderRadius: '2',\n  };\n}\n\nfunction variantSubtle(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _text: { color: `${colorScheme}.900` },\n    _icon: { color: `${colorScheme}.900` },\n    bg: `${colorScheme}.100`,\n    _dark: { bg: `${colorScheme}.300` },\n    borderWidth: '1',\n    borderRadius: '2',\n    borderColor: 'transparent',\n  };\n}\n\nfunction variantOutline(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _text: { color: `${colorScheme}.600` },\n    _icon: { color: `${colorScheme}.600` },\n    borderColor: `${colorScheme}.600`,\n    _dark: {\n      _text: {\n        color: `${colorScheme}.300`,\n      },\n      _icon: {\n        color: `${colorScheme}.300`,\n      },\n      borderColor: `${colorScheme}.300`,\n    },\n    borderRadius: '2',\n    borderWidth: '1',\n  };\n}\n\nconst variants = {\n  solid: variantSolid as any,\n  subtle: variantSubtle as any,\n  outline: variantOutline as any,\n};\n\nconst defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'muted',\n  size: 'md',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}