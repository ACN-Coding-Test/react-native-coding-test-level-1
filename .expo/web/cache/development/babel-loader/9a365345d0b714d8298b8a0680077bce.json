{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useEffect, useState } from 'react';\nimport { useTheme } from \"../hooks/useTheme\";\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { isResponsiveAnyProp } from \"../theme/tools\";\nexport function useResponsiveSSRProps(incomingProps) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modified = _useState2[0],\n    setModified = _useState2[1];\n  var theme = useTheme();\n  var responsivePropsExists = isResponsiveAnyProp(incomingProps, theme);\n  var isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  var modifiedProps = incomingProps;\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = _objectSpread(_objectSpread({}, modifiedProps), {}, {\n      key: Math.random()\n    });\n  }\n  useEffect(function () {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n  return modifiedProps;\n}","map":{"version":3,"sources":["useResponsiveSSRProps.ts"],"names":["useEffect","useState","useTheme","useNativeBaseConfig","isResponsiveAnyProp","useResponsiveSSRProps","incomingProps","modified","setModified","theme","responsivePropsExists","isSSR","modifiedProps","key","Math","random"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT;AACA,SAASC,mBAAT;AACA,SAASC,mBAAT;AAEA,OAAO,SAASC,qBAAT,CAA+BC,aAA/B,EAAmD;EACxD,gBAAgCL,QAAQ,CAAC,KAAD,CAAxC;IAAA;IAAOM,QAAD;IAAWC,WAAX;EACN,IAAMC,KAAK,GAAGP,QAAQ,EAAtB;EAEA,IAAMQ,qBAAqB,GAAGN,mBAAmB,CAACE,aAAD,EAAgBG,KAAhB,CAAjD;EACA,IAAME,KAAK,GAAGR,mBAAmB,CAAC,4BAAD,CAAnBA,CAAkDQ,KAAhE;EAEA,IAAIC,aAAa,GAAGN,aAApB;EACA,IAAII,qBAAqB,IAAIC,KAAzBD,IAAkC,CAACH,QAAvC,EAAiD;IAC/CK,aAAa,mCAAQA,aAAL;MAAoBC,GAAG,EAAEC,IAAI,CAACC,MAALD;IAAAA,EAAzCF;EACD;EACDZ,SAAS,CAAC,YAAW;IACnB,IAAIU,qBAAqB,IAAIC,KAA7B,EAAoC;MAClCH,WAAW,CAAC,IAAD,CAAXA;IACD;EACF,CAJQ,EAIN,CAACE,qBAAD,EAAwBC,KAAxB,CAJM,CAATX;EAMA,OAAOY,aAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTheme } from '../hooks/useTheme';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../theme/tools';\n\nexport function useResponsiveSSRProps(incomingProps: any) {\n  const [modified, setModified] = useState(false);\n  const theme = useTheme();\n\n  const responsivePropsExists = isResponsiveAnyProp(incomingProps, theme);\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n\n  let modifiedProps = incomingProps;\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = { ...modifiedProps, key: Math.random() };\n  }\n  useEffect((): any => {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n\n  return modifiedProps;\n}\n"]},"metadata":{},"sourceType":"module"}