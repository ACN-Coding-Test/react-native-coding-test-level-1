{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { usePropsResolution } from \"../../../hooks\";\nimport { Popper } from \"../Popper\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar PopoverArrow = React.forwardRef(function (props, ref) {\n  var resolvedProps = usePropsResolution('PopoverArrow', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Popper.Arrow, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n});\nPopoverArrow.displayName = 'PopperArrow';\nexport default PopoverArrow;","map":{"version":3,"sources":["PopoverArrow.tsx"],"names":["React","usePropsResolution","Popper","useHasResponsiveProps","PopoverArrow","forwardRef","props","ref","resolvedProps","displayName"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT;AACA,SAASC,MAAT;AAEA,SAASC,qBAAT;AAEA,IAAMC,YAAY,GAAG,KAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAmBC,GAAnB,EAAgC;EACpE,IAAMC,aAAa,GAAGP,kBAAkB,CAAC,cAAD,EAAiBK,KAAjB,CAD4B;;EAGpE,IAAIH,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OAAO,KAAA,CAAA,aAAA,CAAC,MAAD,CAAQ,KAAR,EAAA,QAAA,CAAA,CAAA,CAAA,EAAkBE,aAAlB,EAAA;IAAiC,GAAG,EAAED;EAAtC,CAAA,CAAA,CAAP;AACD,CAPoB,CAArB;AASAH,YAAY,CAACK,WAAbL,GAA2B,aAA3BA;AAEA,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { Popper } from '../Popper';\nimport type { IBoxProps } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverArrow = React.forwardRef((props: IBoxProps, ref: any) => {\n  const resolvedProps = usePropsResolution('PopoverArrow', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Popper.Arrow {...resolvedProps} ref={ref} />;\n});\n\nPopoverArrow.displayName = 'PopperArrow';\n\nexport default PopoverArrow;\n"]},"metadata":{},"sourceType":"module"}