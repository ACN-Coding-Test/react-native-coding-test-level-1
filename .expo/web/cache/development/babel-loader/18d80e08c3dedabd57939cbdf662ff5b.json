{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"defaultValue\", \"keepWithinRange\", \"value\", \"min\", \"max\", \"onChange\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport { useThemeProps } from \"../../../hooks\";\nimport { useFormControlContext } from \"../FormControl\";\nimport { NumberInputContext } from \"./Context\";\nimport Box from \"../../primitives/Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar NumberInput = function NumberInput(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useThemeProps = useThemeProps('NumberInput', props),\n    defaultValue = _useThemeProps.defaultValue,\n    keepWithinRange = _useThemeProps.keepWithinRange,\n    value = _useThemeProps.value,\n    min = _useThemeProps.min,\n    max = _useThemeProps.max,\n    onChange = _useThemeProps.onChange,\n    newProps = _objectWithoutProperties(_useThemeProps, _excluded2);\n  var formControlContext = useFormControlContext();\n  var _React$useState = React.useState(parseInt(value || defaultValue, 10)),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    numberInputValue = _React$useState2[0],\n    setNumberInputValue = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    numberInputStepper = _React$useState4[0],\n    setNumberInputStepper = _React$useState4[1];\n  var handleChange = function handleChange(newValue) {\n    var temp = newValue;\n    setNumberInputValue(temp);\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);else if (newValue > max) setNumberInputValue(max);\n    }\n\n    onChange && onChange(temp);\n  };\n  var handleChangeWithoutCheck = function handleChangeWithoutCheck(newValue) {\n    var temp = newValue;\n    setNumberInputValue(temp);\n  };\n  React.useEffect(function () {\n    if (value !== undefined && value != numberInputValue) setNumberInputValue(value);\n  }, [value, numberInputValue, setNumberInputValue]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, {\n    ref: ref\n  }, React.createElement(NumberInputContext.Provider, {\n    value: _objectSpread(_objectSpread(_objectSpread({}, formControlContext), newProps), {}, {\n      min: min,\n      max: max,\n      handleChange: handleChange,\n      handleChangeWithoutCheck: handleChangeWithoutCheck,\n      numberInputValue: numberInputValue,\n      numberInputStepper: numberInputStepper,\n      setNumberInputStepper: setNumberInputStepper,\n      isControlled: value !== undefined\n    })\n  }, children));\n};\nexport default React.memo(React.forwardRef(NumberInput));","map":{"version":3,"sources":["NumberInput.tsx"],"names":["React","useThemeProps","useFormControlContext","NumberInputContext","Box","useHasResponsiveProps","NumberInput","children","props","ref","defaultValue","keepWithinRange","value","min","max","onChange","newProps","formControlContext","numberInputValue","setNumberInputValue","useState","parseInt","numberInputStepper","setNumberInputStepper","handleChange","newValue","temp","handleChangeWithoutCheck","useEffect","undefined","isControlled","memo","forwardRef"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT;AACA,SAASC,qBAAT;AAEA,SAASC,kBAAT;AACA,OAAOC,GAAP;AACA,SAASC,qBAAT;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAA+CG,GAA5C,EAA0D;EAAA,IAAvDF,QAAF,QAAEA,QAAF;IAAeC,KAAAA;EAClC,qBAQIP,aAAa,CAAC,aAAD,EAAgBO,KAAhB,CARjB;IACEE,YADI,kBACJA,YADI;IAEJC,eAFI,kBAEJA,eAFI;IAGJC,KAHI,kBAGJA,KAHI;IAIJC,GAJI,kBAIJA,GAJI;IAKJC,GALI,kBAKJA,GALI;IAMJC,QANI,kBAMJA,QANI;IAODC,QAAAA;EAEL,IAAMC,kBAAkB,GAAGf,qBAAqB,EAAhD;EAEA,sBAAgDF,KAAK,CAACoB,QAANpB,CAC9CqB,QAAQ,CAACT,KAAK,IAAIF,YAAV,EAAwB,EAAxB,CADsCV,CAAhD;IAAA;IAAOkB,gBAAD;IAAmBC,mBAAnB;EAGN,uBAAoDnB,KAAK,CAACoB,QAANpB,CAAe,IAAfA,CAApD;IAAA;IAAOsB,kBAAD;IAAqBC,qBAArB;EACN,IAAMC,YAAY,GAAIC,SAAhBD,YAAY,CAAIC,QAAD,EAAsB;IACzC,IAAMC,IAAI,GAAGD,QAAb;IACAN,mBAAmB,CAACO,IAAD,CAAnBP;IACA,IAAIR,eAAJ,EAAqB;MACnB,IAAIc,QAAQ,GAAGZ,GAAf,EAAoBM,mBAAmB,CAACN,GAAD,CAAnBM,CAApB,KACK,IAAIM,QAAQ,GAAGX,GAAf,EAAoBK,mBAAmB,CAACL,GAAD,CAAnBK;IALc;;IAQzCJ,QAAQ,IAAIA,QAAQ,CAACW,IAAD,CAApBX;EACD,CATD;EAUA,IAAMY,wBAAwB,GAAIF,SAA5BE,wBAAwB,CAAIF,QAAD,EAAsB;IACrD,IAAMC,IAAI,GAAGD,QAAb;IACAN,mBAAmB,CAACO,IAAD,CAAnBP;EACD,CAHD;EAKAnB,KAAK,CAAC4B,SAAN5B,CAAgB,YAAM;IACpB,IAAIY,KAAK,KAAKiB,SAAVjB,IAAuBA,KAAK,IAAIM,gBAApC,EACEC,mBAAmB,CAACP,KAAD,CAAnBO;EACH,CAHDnB,EAGG,CAACY,KAAD,EAAQM,gBAAR,EAA0BC,mBAA1B,CAHHnB,CA/B4E;;EAoC5E,IAAIK,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA;IAAK,GAAG,EAAEC;EAAV,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAoB,QAApB,EAAA;IACE,KAAK,gDACAQ,kBADE,GAEFD,QAFE;MAGLH,GAHK,EAGLA,GAHK;MAILC,GAJK,EAILA,GAJK;MAKLU,YALK,EAKLA,YALK;MAMLG,wBANK,EAMLA,wBANK;MAOLT,gBAPK,EAOLA,gBAPK;MAQLI,kBARK,EAQLA,kBARK;MASLC,qBATK,EASLA,qBATK;MAULO,YAAY,EAAElB,KAAK,KAAKiB;IAAAA;EAX5B,CAAA,EAcGtB,QAdH,CADF,CADF;AAoBD,CA3DD;AA6DA,eAAeP,KAAK,CAAC+B,IAAN/B,CAAWA,KAAK,CAACgC,UAANhC,CAAiBM,WAAjBN,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { useThemeProps } from '../../../hooks';\nimport { useFormControlContext } from '../FormControl';\nimport type { INumberInputProps } from './types';\nimport { NumberInputContext } from './Context';\nimport Box from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberInput = ({ children, ...props }: INumberInputProps, ref?: any) => {\n  const {\n    defaultValue,\n    keepWithinRange,\n    value,\n    min,\n    max,\n    onChange,\n    ...newProps\n  } = useThemeProps('NumberInput', props);\n  const formControlContext = useFormControlContext();\n\n  const [numberInputValue, setNumberInputValue] = React.useState(\n    parseInt(value || defaultValue, 10)\n  );\n  const [numberInputStepper, setNumberInputStepper] = React.useState(null);\n  const handleChange = (newValue: number) => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);\n      else if (newValue > max) setNumberInputValue(max);\n    }\n    //NOTE: only calling onChange on stepper click or blur event of input.\n    onChange && onChange(temp);\n  };\n  const handleChangeWithoutCheck = (newValue: number) => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n  };\n\n  React.useEffect(() => {\n    if (value !== undefined && value != numberInputValue)\n      setNumberInputValue(value);\n  }, [value, numberInputValue, setNumberInputValue]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box ref={ref}>\n      <NumberInputContext.Provider\n        value={{\n          ...formControlContext,\n          ...newProps,\n          min,\n          max,\n          handleChange,\n          handleChangeWithoutCheck,\n          numberInputValue,\n          numberInputStepper,\n          setNumberInputStepper,\n          isControlled: value !== undefined,\n        }}\n      >\n        {children}\n      </NumberInputContext.Provider>\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(NumberInput));\n"]},"metadata":{},"sourceType":"module"}