{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"placement\", \"title\", \"render\", \"id\", \"description\", \"duration\", \"_title\", \"_description\", \"accessibilityAnnouncement\", \"avoidKeyboard\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { Overlay } from \"../../primitives/Overlay\";\nimport { PresenceTransition } from \"../Transitions\";\nimport VStack from \"../../primitives/Stack/VStack\";\nimport React, { createContext, useState, useMemo } from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useKeyboardBottomInset } from \"../../../utils\";\nvar INSET = 50;\nvar POSITIONS = {\n  'top': {\n    top: INSET,\n    left: 0,\n    right: 0\n  },\n  'top-right': {\n    top: INSET,\n    right: 0\n  },\n  'top-left': {\n    top: INSET,\n    left: 0\n  },\n  'bottom': {\n    bottom: INSET,\n    left: 0,\n    right: 0\n  },\n  'bottom-left': {\n    bottom: INSET,\n    left: 0\n  },\n  'bottom-right': {\n    bottom: INSET,\n    right: 0\n  }\n};\nvar initialAnimationOffset = 24;\nvar transitionConfig = {\n  'bottom': initialAnimationOffset,\n  'top': -initialAnimationOffset,\n  'top-right': -initialAnimationOffset,\n  'top-left': -initialAnimationOffset,\n  'bottom-left': initialAnimationOffset,\n  'bottom-right': initialAnimationOffset\n};\nvar ToastContext = createContext({\n  toastInfo: {},\n  setToastInfo: function setToastInfo() {},\n  setToast: function setToast() {},\n  removeToast: function removeToast() {},\n  hideAll: function hideAll() {},\n  isActive: function isActive() {\n    return false;\n  },\n  visibleToasts: {},\n  setVisibleToasts: function setVisibleToasts() {},\n  hideToast: function hideToast() {}\n});\nvar CustomToast = function CustomToast(_ref) {\n  var _overlay = _ref._overlay,\n    _stack = _ref._stack,\n    _presenceTransition = _ref._presenceTransition;\n  var _React$useContext = React.useContext(ToastContext),\n    toastInfo = _React$useContext.toastInfo,\n    visibleToasts = _React$useContext.visibleToasts,\n    removeToast = _React$useContext.removeToast;\n  var bottomInset = useKeyboardBottomInset() * 2;\n  var getPositions = function getPositions() {\n    return Object.keys(toastInfo);\n  };\n  var hasToastOnOverlay = false;\n  getPositions().map(function (position) {\n    var _toastInfo$position;\n    if (((_toastInfo$position = toastInfo[position]) === null || _toastInfo$position === void 0 ? void 0 : _toastInfo$position.length) > 0) hasToastOnOverlay = true;\n  });\n  return getPositions().length > 0 ? React.createElement(Overlay, _extends({}, _overlay, {\n    isOpen: hasToastOnOverlay,\n    isKeyboardDismissable: false\n  }), getPositions().map(function (position) {\n    if (Object.keys(POSITIONS).includes(position)) return React.createElement(VStack, _extends({}, _stack, {\n      key: position\n    }, POSITIONS[position]),\n    toastInfo[position].map(function (toast) {\n      var _toast$config3;\n      return React.createElement(PresenceTransition, _extends({}, _presenceTransition, {\n        key: toast.id,\n        visible: visibleToasts[toast.id],\n        onTransitionComplete: function onTransitionComplete(status) {\n          if (status === 'exited') {\n            var _toast$config, _toast$config2;\n            removeToast(toast.id);\n            ((_toast$config = toast.config) === null || _toast$config === void 0 ? void 0 : _toast$config.onCloseComplete) && ((_toast$config2 = toast.config) === null || _toast$config2 === void 0 ? void 0 : _toast$config2.onCloseComplete());\n          }\n        },\n        initial: {\n          opacity: 0,\n          translateY: transitionConfig[position]\n        }\n      }), React.createElement(SafeAreaView, null, React.createElement(Box, {\n        bottom: ['bottom', 'bottom-left', 'bottom-right'].includes(position) && (_toast$config3 = toast.config) !== null && _toast$config3 !== void 0 && _toast$config3.avoidKeyboard ? bottomInset + 'px' : undefined\n      }, toast.component)));\n    }));else return null;\n  })) : null;\n};\nexport var ToastProvider = function ToastProvider(_ref2) {\n  var children = _ref2.children;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    toastInfo = _useState2[0],\n    setToastInfo = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    visibleToasts = _useState4[0],\n    setVisibleToasts = _useState4[1];\n  var _useState5 = useState(usePropsResolution('Toast', {})),\n    _useState6 = _slicedToArray(_useState5, 1),\n    themeProps = _useState6[0];\n  var toastIndex = React.useRef(1);\n  var hideAll = React.useCallback(function () {\n    setVisibleToasts({});\n  }, [setVisibleToasts]);\n  var hideToast = React.useCallback(function (id) {\n    setVisibleToasts(function (prevVisibleToasts) {\n      return _objectSpread(_objectSpread({}, prevVisibleToasts), {}, _defineProperty({}, id, false));\n    });\n  }, [setVisibleToasts]);\n  var isActive = React.useCallback(function (id) {\n    for (var _i = 0, _Object$keys = Object.keys(toastInfo); _i < _Object$keys.length; _i++) {\n      var toastPosition = _Object$keys[_i];\n      var positionArray = toastInfo[toastPosition];\n      return positionArray.findIndex(function (toastData) {\n        return toastData.id === id;\n      }) > -1;\n    }\n    return false;\n  }, [toastInfo]);\n  var removeToast = React.useCallback(function (id) {\n    setToastInfo(function (prev) {\n      for (var _i2 = 0, _Object$keys2 = Object.keys(prev); _i2 < _Object$keys2.length; _i2++) {\n        var toastPosition = _Object$keys2[_i2];\n        var positionArray = prev[toastPosition];\n        var isToastPresent = positionArray.findIndex(function (toastData) {\n          return toastData.id === id;\n        }) > -1;\n        if (isToastPresent) {\n          var newPositionArray = positionArray.filter(function (item) {\n            return item.id !== id;\n          });\n          var temp = {};\n          temp[toastPosition] = newPositionArray;\n          var newToastInfo = _objectSpread(_objectSpread({}, prev), temp);\n          return newToastInfo;\n        }\n      }\n      return prev;\n    });\n  }, [setToastInfo]);\n  var setToast = React.useCallback(function (props) {\n    var _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottom' : _props$placement,\n      title = props.title,\n      render = props.render,\n      _props$id = props.id,\n      id = _props$id === void 0 ? toastIndex.current++ : _props$id,\n      description = props.description,\n      _props$duration = props.duration,\n      duration = _props$duration === void 0 ? 5000 : _props$duration,\n      _title = props._title,\n      _description = props._description,\n      accessibilityAnnouncement = props.accessibilityAnnouncement,\n      _props$avoidKeyboard = props.avoidKeyboard,\n      avoidKeyboard = _props$avoidKeyboard === void 0 ? false : _props$avoidKeyboard,\n      rest = _objectWithoutProperties(props, _excluded);\n    var positionToastArray = toastInfo[placement];\n    if (!positionToastArray) positionToastArray = [];\n    var component = null;\n    if (render) {\n      component = render({\n        id: id\n      });\n    } else {\n      component =\n      React.createElement(VStack, _extends({}, themeProps, rest), React.createElement(Box, {\n        _text: _objectSpread(_objectSpread({}, themeProps._title), _title)\n      }, title), description && React.createElement(Box, {\n        _text: _objectSpread(_objectSpread({}, themeProps._description), _description)\n      }, description));\n    }\n    toastInfo[placement] = [].concat(_toConsumableArray(positionToastArray), [{\n      component: component,\n      id: id,\n      config: props\n    }]);\n    setToastInfo(_objectSpread({}, toastInfo));\n    setVisibleToasts(_objectSpread(_objectSpread({}, visibleToasts), {}, _defineProperty({}, id, true)));\n    if (duration !== null) {\n      setTimeout(function () {\n        hideToast(id);\n      }, duration);\n    }\n\n    if (accessibilityAnnouncement && Platform.OS === 'ios') {\n      AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n    }\n    return id;\n  }, [themeProps, toastInfo, visibleToasts, hideToast]);\n  var contextValue = React.useMemo(function () {\n    return {\n      toastInfo: toastInfo,\n      setToastInfo: setToastInfo,\n      setToast: setToast,\n      removeToast: removeToast,\n      hideAll: hideAll,\n      isActive: isActive,\n      visibleToasts: visibleToasts,\n      setVisibleToasts: setVisibleToasts,\n      hideToast: hideToast\n    };\n  }, [toastInfo, setToastInfo, setToast, removeToast, hideAll, isActive, visibleToasts, setVisibleToasts, hideToast]);\n  return React.createElement(ToastContext.Provider, {\n    value: contextValue\n  }, children, React.createElement(CustomToast, {\n    _overlay: themeProps._overlay,\n    _stack: themeProps._stack,\n    _presenceTransition: themeProps._presenceTransition\n  }));\n};\nexport var useToast = function useToast() {\n  var _React$useContext2 = React.useContext(ToastContext),\n    setToast = _React$useContext2.setToast,\n    hideAll = _React$useContext2.hideAll,\n    isActive = _React$useContext2.isActive,\n    hideToast = _React$useContext2.hideToast;\n  var toast = useMemo(function () {\n    return {\n      show: setToast,\n      close: hideToast,\n      closeAll: hideAll,\n      isActive: isActive\n    };\n  }, [setToast, hideAll, isActive, hideToast]);\n  return toast;\n};\nexport var ToastRef = React.createRef();\nexport var Toast = {\n  show: function show(props) {\n    var _ToastRef$current;\n    return (_ToastRef$current = ToastRef.current) === null || _ToastRef$current === void 0 ? void 0 : _ToastRef$current.show(props);\n  },\n  close: function close(id) {\n    var _ToastRef$current2;\n    return (_ToastRef$current2 = ToastRef.current) === null || _ToastRef$current2 === void 0 ? void 0 : _ToastRef$current2.close(id);\n  },\n  closeAll: function closeAll() {\n    var _ToastRef$current3;\n    return (_ToastRef$current3 = ToastRef.current) === null || _ToastRef$current3 === void 0 ? void 0 : _ToastRef$current3.closeAll();\n  },\n  isActive: function isActive(id) {\n    var _ToastRef$current4;\n    return (_ToastRef$current4 = ToastRef.current) === null || _ToastRef$current4 === void 0 ? void 0 : _ToastRef$current4.isActive(id);\n  }\n};","map":{"version":3,"sources":["Toast.tsx"],"names":["Overlay","PresenceTransition","VStack","React","createContext","useState","useMemo","Box","usePropsResolution","useKeyboardBottomInset","INSET","POSITIONS","top","left","right","bottom","initialAnimationOffset","transitionConfig","ToastContext","toastInfo","setToastInfo","setToast","removeToast","hideAll","isActive","visibleToasts","setVisibleToasts","hideToast","CustomToast","_overlay","_stack","_presenceTransition","useContext","bottomInset","getPositions","Object","keys","hasToastOnOverlay","map","position","length","includes","toast","id","status","config","onCloseComplete","opacity","translateY","avoidKeyboard","undefined","component","ToastProvider","children","themeProps","toastIndex","useRef","useCallback","prevVisibleToasts","toastPosition","positionArray","findIndex","toastData","prev","isToastPresent","newPositionArray","filter","item","temp","newToastInfo","props","placement","title","render","current","description","duration","_title","_description","accessibilityAnnouncement","rest","positionToastArray","setTimeout","Platform","OS","AccessibilityInfo","announceForAccessibility","contextValue","useToast","show","close","closeAll","ToastRef","createRef","Toast"],"mappings":"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","sourcesContent":["import { Overlay } from '../../primitives/Overlay';\nimport { PresenceTransition } from '../Transitions';\nimport VStack from '../../primitives/Stack/VStack';\nimport React, {\n  createContext,\n  MutableRefObject,\n  useState,\n  useMemo,\n} from 'react';\nimport { AccessibilityInfo, Platform, SafeAreaView } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport type { IToastContext, IToastInfo, IToast, IToastProps } from './types';\nimport { useKeyboardBottomInset } from '../../../utils';\n\nconst INSET = 50;\n\nconst POSITIONS = {\n  'top': {\n    top: INSET,\n    left: 0,\n    right: 0,\n  },\n  'top-right': {\n    top: INSET,\n    right: 0,\n  },\n  'top-left': {\n    top: INSET,\n    left: 0,\n  },\n  'bottom': {\n    bottom: INSET,\n    left: 0,\n    right: 0,\n  },\n  'bottom-left': {\n    bottom: INSET,\n    left: 0,\n  },\n  'bottom-right': {\n    bottom: INSET,\n    right: 0,\n  },\n};\n\nconst initialAnimationOffset = 24;\n\nconst transitionConfig: any = {\n  'bottom': initialAnimationOffset,\n  'top': -initialAnimationOffset,\n  'top-right': -initialAnimationOffset,\n  'top-left': -initialAnimationOffset,\n  'bottom-left': initialAnimationOffset,\n  'bottom-right': initialAnimationOffset,\n};\n\nconst ToastContext = createContext<IToastContext>({\n  toastInfo: {},\n  setToastInfo: () => {},\n  setToast: () => {},\n  removeToast: () => {},\n  hideAll: () => {},\n  isActive: () => false,\n  visibleToasts: {},\n  setVisibleToasts: () => {},\n  hideToast: () => {},\n});\n\nconst CustomToast = ({ _overlay, _stack, _presenceTransition }: any) => {\n  const { toastInfo, visibleToasts, removeToast } = React.useContext(\n    ToastContext\n  );\n\n  const bottomInset = useKeyboardBottomInset() * 2;\n  const getPositions = () => {\n    return Object.keys(toastInfo);\n  };\n\n  let hasToastOnOverlay = false;\n  getPositions().map((position) => {\n    if (toastInfo[position]?.length > 0) hasToastOnOverlay = true;\n  });\n\n  return getPositions().length > 0 ? (\n    <Overlay\n      {..._overlay}\n      isOpen={hasToastOnOverlay}\n      isKeyboardDismissable={false}\n    >\n      {getPositions().map((position: string) => {\n        if (Object.keys(POSITIONS).includes(position))\n          return (\n            <VStack\n              {..._stack}\n              key={position}\n              // @ts-ignore\n              {...POSITIONS[position]}\n            >\n              {\n                // @ts-ignore\n                toastInfo[position].map((toast: IToast) => (\n                  <PresenceTransition\n                    {..._presenceTransition}\n                    key={toast.id}\n                    visible={visibleToasts[toast.id]}\n                    onTransitionComplete={(status: any) => {\n                      if (status === 'exited') {\n                        removeToast(toast.id);\n                        toast.config?.onCloseComplete &&\n                          toast.config?.onCloseComplete();\n                      }\n                    }}\n                    initial={{\n                      opacity: 0,\n                      translateY: transitionConfig[position],\n                    }}\n                  >\n                    <SafeAreaView>\n                      <Box\n                        bottom={\n                          ['bottom', 'bottom-left', 'bottom-right'].includes(\n                            position\n                          ) && toast.config?.avoidKeyboard\n                            ? bottomInset + 'px'\n                            : undefined\n                        }\n                      >\n                        {toast.component}\n                      </Box>\n                    </SafeAreaView>\n                  </PresenceTransition>\n                ))\n              }\n            </VStack>\n          );\n        else return null;\n      })}\n    </Overlay>\n  ) : null;\n};\n\nexport const ToastProvider = ({ children }: { children: any }) => {\n  const [toastInfo, setToastInfo] = useState<IToastInfo>({});\n  const [visibleToasts, setVisibleToasts] = useState<\n    {\n      [key in string]: boolean;\n    }\n  >({});\n\n  const [themeProps] = useState(usePropsResolution('Toast', {}));\n  const toastIndex = React.useRef(1);\n\n  const hideAll = React.useCallback(() => {\n    setVisibleToasts({});\n  }, [setVisibleToasts]);\n\n  const hideToast = React.useCallback(\n    (id: any) => {\n      setVisibleToasts((prevVisibleToasts) => ({\n        ...prevVisibleToasts,\n        [id]: false,\n      }));\n    },\n    [setVisibleToasts]\n  );\n\n  const isActive = React.useCallback(\n    (id: any) => {\n      for (const toastPosition of Object.keys(toastInfo)) {\n        const positionArray: Array<IToast> = toastInfo[toastPosition];\n        return positionArray.findIndex((toastData) => toastData.id === id) > -1;\n      }\n\n      return false;\n    },\n    [toastInfo]\n  );\n\n  const removeToast = React.useCallback(\n    (id: any) => {\n      setToastInfo((prev) => {\n        for (const toastPosition of Object.keys(prev)) {\n          const positionArray: Array<IToast> = prev[toastPosition];\n          const isToastPresent =\n            positionArray.findIndex((toastData) => toastData.id === id) > -1;\n\n          if (isToastPresent) {\n            const newPositionArray = positionArray.filter(\n              (item) => item.id !== id\n            );\n            const temp: any = {};\n            temp[toastPosition] = newPositionArray;\n\n            const newToastInfo = { ...prev, ...temp };\n            return newToastInfo;\n          }\n        }\n\n        return prev;\n      });\n    },\n    [setToastInfo]\n  );\n\n  const setToast = React.useCallback(\n    (props: IToastProps): number => {\n      const {\n        placement = 'bottom',\n        title,\n        render,\n        id = toastIndex.current++,\n        description,\n        duration = 5000,\n        _title,\n        _description,\n        accessibilityAnnouncement,\n        // @ts-ignore\n        avoidKeyboard = false, //eslint-disable-line\n        ...rest\n      } = props;\n\n      let positionToastArray = toastInfo[placement];\n      if (!positionToastArray) positionToastArray = [];\n\n      let component = null;\n\n      if (render) {\n        component = render({ id });\n      } else {\n        component = (\n          // Below VStack is the default component where all the direct props spread.\n          <VStack {...themeProps} {...rest}>\n            <Box _text={{ ...themeProps._title, ..._title }}>{title}</Box>\n            {description && (\n              <Box _text={{ ...themeProps._description, ..._description }}>\n                {description}\n              </Box>\n            )}\n          </VStack>\n        );\n      }\n\n      toastInfo[placement] = [\n        ...positionToastArray,\n        { component, id, config: props },\n      ];\n\n      setToastInfo({ ...toastInfo });\n\n      setVisibleToasts({ ...visibleToasts, [id]: true });\n      if (duration !== null) {\n        setTimeout(function () {\n          hideToast(id);\n        }, duration);\n      }\n\n      // iOS doesn't support accessibilityLiveRegion\n      if (accessibilityAnnouncement && Platform.OS === 'ios') {\n        AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n      }\n\n      return id;\n    },\n    [themeProps, toastInfo, visibleToasts, hideToast]\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      toastInfo,\n      setToastInfo,\n      setToast,\n      removeToast,\n      hideAll,\n      isActive,\n      visibleToasts,\n      setVisibleToasts,\n      hideToast,\n    };\n  }, [\n    toastInfo,\n    setToastInfo,\n    setToast,\n    removeToast,\n    hideAll,\n    isActive,\n    visibleToasts,\n    setVisibleToasts,\n    hideToast,\n  ]);\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      {children}\n      <CustomToast\n        _overlay={themeProps._overlay}\n        _stack={themeProps._stack}\n        _presenceTransition={themeProps._presenceTransition}\n      />\n    </ToastContext.Provider>\n  );\n};\n\nexport const useToast = () => {\n  const { setToast, hideAll, isActive, hideToast } = React.useContext(\n    ToastContext\n  );\n\n  const toast = useMemo(\n    () => ({\n      show: setToast,\n      close: hideToast,\n      closeAll: hideAll,\n      isActive,\n    }),\n    [setToast, hideAll, isActive, hideToast]\n  );\n\n  return toast;\n};\n\nexport type IToastService = ReturnType<typeof useToast>;\n\nexport const ToastRef = React.createRef<IToastService>() as MutableRefObject<IToastService>;\n\nexport const Toast: IToastService = {\n  show: (props: IToastProps) => ToastRef.current?.show(props),\n  close: (id: any) => ToastRef.current?.close(id),\n  closeAll: () => ToastRef.current?.closeAll(),\n  isActive: (id: any) => ToastRef.current?.isActive(id),\n};\n"]},"metadata":{},"sourceType":"module"}